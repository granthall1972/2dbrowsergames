{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/store.js","../../src/WinModal.svelte","../../src/HelpModal.svelte","../../src/StatsModal.svelte","../../src/LoseModal.svelte","../../src/Dictionary.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","\r\nimport { writable } from \"svelte/store\";\r\n\r\nlet storedGamesPlayed = localStorage.getItem(\"gamesPlayed\") === null ? 0 : localStorage.getItem(\"gamesPlayed\");\r\nexport const gamesPlayed = writable(storedGamesPlayed);\r\n\r\nlet storedWinPercentage = localStorage.getItem(\"winPercentage\") === null ? 0 : localStorage.getItem(\"winPercentage\");\r\nexport const winPercentage = writable(storedWinPercentage);\r\n\r\nlet storedGamesWon = localStorage.getItem(\"gamesWon\") === null ? 0 : localStorage.getItem(\"gamesWon\");\r\nexport const gamesWon = writable(storedGamesWon);\r\n\r\nlet storedGamesLost = localStorage.getItem(\"gamesLost\") === null ? 0 : localStorage.getItem(\"gamesLost\");\r\nexport const gamesLost = writable(storedGamesLost);\r\n\r\nlet storedCurrentStreak = localStorage.getItem(\"currentStreak\") === null ? 0 : localStorage.getItem(\"currentStreak\");\r\nexport const currentStreak = writable(storedCurrentStreak);\r\n\r\nlet storedMaxStreak = localStorage.getItem(\"maxStreak\") === null ? 0 : localStorage.getItem(\"maxStreak\");\r\nexport const maxStreak = writable(storedMaxStreak);\r\n","<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n\t\r\n    const dispatch = createEventDispatcher();\r\n\t\r\n    export let isOpenModal;\r\n    export let animtationState = \"opening\";\r\n\t\r\n    function closeModal() {\r\n        isOpenModal = false;\r\n        dispatch('closeModal', { isOpenModal });\r\n    }\r\n</script>\r\n\r\n<div id=\"background\" style=\"display: {isOpenModal ? 'flex' : 'none'};\">\r\n    <div id=\"modal\" style=\"display: {isOpenModal ? 'block' : 'none'};\" animation-state=\"{animtationState}\">\r\n        <div id=\"closeButton\" on:click={closeModal}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n                <path fill=\"#878a8c\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\r\n              </svg>\r\n        </div>\r\n            <p>You win!</p>\r\n        \r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    #background {\r\n        position: absolute;\r\n        display:flex;\r\n        z-index: 1;\r\n        width: 100%;\r\n        height:100%;\r\n        top: 0;\r\n        left: 0;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background-color:rgba(255, 255, 255, 0.5);\r\n    }\r\n\r\n    #modal {\r\n        display: none;\r\n        position: relative;\r\n        z-index: 2;\r\n        background: #fff;\r\n        border: 1px solid #f6f7f8;\r\n        box-shadow: 0 4px 23px 0 rgba(0, 0, 0, 0.2);\r\n        border-radius: 8px;\r\n        width: 90%;\r\n        max-height: 90%;\r\n        padding: 16px;\r\n        max-width: 500px;\r\n        overflow-y: auto;\r\n        box-sizing: border-box;\r\n        color: #1a1a1b;\r\n    }\r\n    #modal[animation-state = \"opening\"] {\r\n        animation: SlideIn 200ms;\r\n    }\r\n    #modal[animation-state = \"closing\"] {\r\n        animation: SlideOut 200ms;\r\n    }\r\n    @keyframes SlideIn {\r\n        0% {\r\n            transform: translateY(30px);\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            transform: translateY(0px);\r\n            opacity: 1;\r\n        }\r\n    }\r\n    @keyframes SlideOut {\r\n        0% {\r\n            transform: translateY(0px);\r\n            opacity: 1;\r\n        }\r\n        90% {\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            opacity: 0;\r\n            transform: translateY(60px);\r\n        }\r\n    }\r\n\r\n    #closeButton {\r\n        position: fixed;\r\n        user-select: none;\r\n        cursor: pointer;\r\n        width: 24px;\r\n        height: 24px;\r\n        position: absolute;\r\n        top: 16px;\r\n        right: 16px;\r\n    }\r\n</style>\r\n","<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n\t\r\n    const dispatch = createEventDispatcher();\r\n\t\r\n    export let isOpenModal;\r\n    export let animtationState = \"opening\";\r\n\t\r\n    function closeModal() {\r\n        isOpenModal = false;\r\n        dispatch('closeModal', { isOpenModal });\r\n        //animtationState = \"closing\";\r\n        // setTimeout(() => {  \r\n        //     isOpenModal = false;\r\n        //     dispatch('closeModal', { isOpenModal });\r\n        // }, 200);\r\n    }\r\n</script>\r\n\r\n<div id=\"background\" style=\"display: {isOpenModal ? 'flex' : 'none'};\">\r\n    <div id=\"modal\" style=\"display: {isOpenModal ? 'block' : 'none'};\" animation-state=\"{animtationState}\">\r\n        <div id=\"closeButton\" on:click={closeModal}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n                <path fill=\"#878a8c\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\r\n              </svg>\r\n        </div>\r\n        <div id=\"title\">\r\n            How to play\r\n        </div>\r\n        <div id=\"instructions\" display=\"block\">\r\n            <p>Guess the <b>WORDLE</b> in 6 tries.</p>\r\n            <p>Each guess must be a valid 5 letter word. Hit the enter button to submit.</p>\r\n            <p>After each guess, the color of the tiles will change to show how close your guess was to the word.</p>\r\n            <div id=\"examples\" display=\"block\">\r\n                <p><b>Examples</b></p>\r\n                <div class=\"examplePills\">\r\n                    <div class=\"gameTile\" data-state=\"correct\">W</div>\r\n                    <div class=\"gameTile\" data-state=\"\">E</div>\r\n                    <div class=\"gameTile\" data-state=\"\">A</div>\r\n                    <div class=\"gameTile\" data-state=\"\">R</div>\r\n                    <div class=\"gameTile\" data-state=\"\">Y</div>\r\n                </div>\r\n                <p>The letter <b>W</b> is in the word and in the correct spot.</p>\r\n                <div class=\"examplePills\">\r\n                    <div class=\"gameTile\" data-state=\"\">P</div>\r\n                    <div class=\"gameTile\" data-state=\"present\">I</div>\r\n                    <div class=\"gameTile\" data-state=\"\">L</div>\r\n                    <div class=\"gameTile\" data-state=\"\">L</div>\r\n                    <div class=\"gameTile\" data-state=\"\">S</div>\r\n                </div>\r\n                <p>The letter <b>I</b> is in the word but in the wrong spot.</p>\r\n                <div class=\"examplePills\">\r\n                    <div class=\"gameTile\" data-state=\"\">V</div>\r\n                    <div class=\"gameTile\" data-state=\"\">A</div>\r\n                    <div class=\"gameTile\" data-state=\"\">G</div>\r\n                    <div class=\"gameTile\" data-state=\"absent\">U</div>\r\n                    <div class=\"gameTile\" data-state=\"\">E</div>\r\n                </div>\r\n                <p>The letter <b>U</b> is not in the word in any spot.</p>\r\n            </div>\r\n            <div style=\"padding-top:14px;\"><b>A new WORDLE will be available each day!</b></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    #background {\r\n        display: none;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        justify-content: center;\r\n        background-color: white;\r\n        z-index: 2000;\r\n    }\r\n    #modal {\r\n        display: none;\r\n        position: relative;\r\n        background: #fff;\r\n        width: 90%;\r\n        max-height: 90%;\r\n        padding: 16px;\r\n        max-width: 500px;\r\n        overflow-y: auto;\r\n        box-sizing: border-box;\r\n        color: #1a1a1b;\r\n    }\r\n    #modal[animation-state = \"opening\"] {\r\n        animation: SlideIn 200ms;\r\n    }\r\n    #modal[animation-state = \"closing\"] {\r\n        animation: SlideOut 200ms;\r\n    }\r\n    @keyframes SlideIn {\r\n        0% {\r\n            transform: translateY(30px);\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            transform: translateY(0px);\r\n            opacity: 1;\r\n        }\r\n    }\r\n    @keyframes SlideOut {\r\n        0% {\r\n            transform: translateY(0px);\r\n            opacity: 1;\r\n        }\r\n        90% {\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            opacity: 0;\r\n            transform: translateY(60px);\r\n        }\r\n    }\r\n    #closeButton {\r\n        position: fixed;\r\n        user-select: none;\r\n        cursor: pointer;\r\n        width: 24px;\r\n        height: 24px;\r\n        position: absolute;\r\n        top: 16px;\r\n        right: 16px;\r\n    }\r\n    #title {\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n    }\r\n    #instructions {\r\n        font-size: 14px;\r\n        color: #1a1a1b;\r\n    }\r\n    #examples {\r\n        font-size: 14px;\r\n        color: #1a1a1b;\r\n        border-bottom: 1px solid #d3d6da;\r\n        border-top: 1px solid #d3d6da;\r\n    }\r\n    .examplePills {\r\n\t\tdisplay: inline-flex;\r\n\t\tgrid-template-columns: repeat(5, 1fr);\r\n\t\tgrid-gap: 5px;\r\n        margin-top: 12px;\r\n    }\r\n    .gameTile {\r\n\t\twidth: 40px;\r\n        height: 40px;\r\n\t\tdisplay: inline-flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tfont-size: 2rem;\r\n\t\tline-height: 2rem;\r\n\t\tfont-weight: bold;\r\n\t\tvertical-align: middle;\r\n\t\tbox-sizing: border-box;\r\n\t\ttext-transform: uppercase;\r\n\t\tuser-select: none;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder: 2px solid #d3d6da;\r\n\t\tcolor: #1a1a1b;\r\n\t}\r\n\t.gameTile[data-state='absent'] {\r\n\t\tbackground-color:#787c7e;\r\n\t\tborder: 2px solid #787c7e;\r\n\t\tcolor: white;\r\n\t}\r\n\t.gameTile[data-state='correct'] {\r\n\t\tbackground-color:#6aaa64;\r\n\t\tborder: 2px solid #6aaa64;\r\n\t\tcolor: white;\r\n\t}\r\n\t.gameTile[data-state='present'] {\r\n\t\tbackground-color:#c9b458;\r\n\t\tborder: 2px solid #c9b458;\r\n\t\tcolor: white;\r\n\t}\r\n</style>\r\n","<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    import {gamesPlayed, winPercentage, currentStreak, maxStreak, gamesWon, gamesLost} from './store.js';\r\n\t\r\n    const dispatch = createEventDispatcher();\r\n\t\r\n    export let isOpenModal;\r\n    export let animtationState = \"opening\";\r\n\t\r\n    function closeModal() {\r\n        isOpenModal = false;\r\n        dispatch('closeModal', { isOpenModal });\r\n    }\r\n</script>\r\n\r\n<div id=\"background\" style=\"display: {isOpenModal ? 'flex' : 'none'};\">\r\n    <div id=\"modal\" style=\"display: {isOpenModal ? 'block' : 'none'};\" animation-state=\"{animtationState}\">\r\n        <div id=\"closeButton\" on:click={closeModal}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n                <path fill=\"#878a8c\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\r\n              </svg>\r\n        </div>\r\n        <div id=\"content\">\r\n            <div><h1>STATISTICS</h1></div>\r\n            <div class=\"statistics\">\r\n                <div class=\"statistic-container\">\r\n                    <div class=\"statistic\">{$gamesPlayed}</div>\r\n                    <div class=\"label\">Played</div>\r\n                </div>\r\n                <div class=\"statistic-container\">\r\n                    <div class=\"statistic\">{$winPercentage}</div>\r\n                    <div class=\"label\">Win %</div>\r\n                </div>\r\n                <div class=\"statistic-container\">\r\n                    <div class=\"statistic\">{$currentStreak}</div>\r\n                    <div class=\"label\">Current Streak</div>\r\n                </div>\r\n                <div class=\"statistic-container\">\r\n                    <div class=\"statistic\">{$maxStreak}</div>\r\n                    <div class=\"label\">Max Streak</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    h1 {\r\n        font-weight: 700;\r\n        font-size: 16px;\r\n        letter-spacing: 0.5px;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        margin-bottom: 10px;\r\n    }\r\n    #background {\r\n        position: absolute;\r\n        display:flex;\r\n        z-index: 1;\r\n        width: 100%;\r\n        height:100%;\r\n        top: 0;\r\n        left: 0;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background-color:rgba(255, 255, 255, 0.5);\r\n    }\r\n\r\n    #modal {\r\n        display: none;\r\n        position: relative;\r\n        z-index: 2;\r\n        background: #fff;\r\n        border: 1px solid #f6f7f8;\r\n        box-shadow: 0 4px 23px 0 rgba(0, 0, 0, 0.2);\r\n        border-radius: 8px;\r\n        width: 90%;\r\n        max-height: 90%;\r\n        padding: 16px;\r\n        max-width: 500px;\r\n        overflow-y: auto;\r\n        box-sizing: border-box;\r\n        color: #1a1a1b;\r\n    }\r\n    #modal[animation-state = \"opening\"] {\r\n        animation: SlideIn 200ms;\r\n    }\r\n    #modal[animation-state = \"closing\"] {\r\n        animation: SlideOut 200ms;\r\n    }\r\n    @keyframes SlideIn {\r\n        0% {\r\n            transform: translateY(30px);\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            transform: translateY(0px);\r\n            opacity: 1;\r\n        }\r\n    }\r\n    @keyframes SlideOut {\r\n        0% {\r\n            transform: translateY(0px);\r\n            opacity: 1;\r\n        }\r\n        90% {\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            opacity: 0;\r\n            transform: translateY(60px);\r\n        }\r\n    }\r\n\r\n    #closeButton {\r\n        position: fixed;\r\n        user-select: none;\r\n        cursor: pointer;\r\n        width: 24px;\r\n        height: 24px;\r\n        position: absolute;\r\n        top: 16px;\r\n        right: 16px;\r\n    }\r\n\r\n    #content {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding: 16px 0;\r\n    }\r\n\r\n    .statistics {\r\n        padding-bottom: 10px;\r\n        display: flex;\r\n    }\r\n\r\n    .statistic-container {\r\n        flex:1;\r\n    }\r\n\r\n    .statistic-container .statistic {\r\n        font-size: 36px;\r\n        font-weight: 400;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        text-align: center;\r\n        letter-spacing: 0.05em;\r\n        font-variant-numeric: proportional-nums;\r\n    }\r\n\r\n    .statistic-container .label {\r\n        font-size: 12px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        text-align: center;\r\n    }\r\n</style>\r\n","<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n\t\r\n    const dispatch = createEventDispatcher();\r\n\t\r\n    export let isOpenModal;\r\n    export let animtationState = \"opening\";\r\n\t\r\n    function closeModal() {\r\n        isOpenModal = false;\r\n        dispatch('closeModal', { isOpenModal });\r\n        //animtationState = \"closing\";\r\n        // setTimeout(() => {  \r\n        //     isOpenModal = false;\r\n        //     dispatch('closeModal', { isOpenModal });\r\n        // }, 200);\r\n    }\r\n</script>\r\n\r\n<div id=\"background\" style=\"display: {isOpenModal ? 'flex' : 'none'};\">\r\n    <div id=\"modal\" style=\"display: {isOpenModal ? 'block' : 'none'};\" animation-state=\"{animtationState}\">\r\n        <div id=\"closeButton\" on:click={closeModal}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n                <path fill=\"#878a8c\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path>\r\n              </svg>\r\n        </div>\r\n            <p>You lose</p>\r\n        \r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    #background {\r\n        position: absolute;\r\n        display:flex;\r\n        z-index: 1;\r\n        width: 100%;\r\n        height:100%;\r\n        top: 0;\r\n        left: 0;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background-color:rgba(255, 255, 255, 0.5);\r\n    }\r\n\r\n    #modal {\r\n        display: none;\r\n        position: relative;\r\n        z-index: 2;\r\n        background: #fff;\r\n        border: 1px solid #f6f7f8;\r\n        box-shadow: 0 4px 23px 0 rgba(0, 0, 0, 0.2);\r\n        border-radius: 8px;\r\n        width: 90%;\r\n        max-height: 90%;\r\n        padding: 16px;\r\n        max-width: 500px;\r\n        overflow-y: auto;\r\n        box-sizing: border-box;\r\n        color: #1a1a1b;\r\n    }\r\n    #modal[animation-state = \"opening\"] {\r\n        animation: SlideIn 200ms;\r\n    }\r\n    #modal[animation-state = \"closing\"] {\r\n        animation: SlideOut 200ms;\r\n    }\r\n    @keyframes SlideIn {\r\n        0% {\r\n            transform: translateY(30px);\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            transform: translateY(0px);\r\n            opacity: 1;\r\n        }\r\n    }\r\n    @keyframes SlideOut {\r\n        0% {\r\n            transform: translateY(0px);\r\n            opacity: 1;\r\n        }\r\n        90% {\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            opacity: 0;\r\n            transform: translateY(60px);\r\n        }\r\n    }\r\n\r\n    #closeButton {\r\n        position: fixed;\r\n        user-select: none;\r\n        cursor: pointer;\r\n        width: 24px;\r\n        height: 24px;\r\n        position: absolute;\r\n        top: 16px;\r\n        right: 16px;\r\n    }\r\n</style>\r\n","<script context=\"module\">\r\n\r\n    const commonWords=[\"cigar\",\"rebut\",\"sissy\",\"humph\",\"awake\",\"blush\",\"focal\",\"evade\",\"naval\",\"serve\",\"heath\",\"dwarf\",\"model\",\"karma\",\"stink\",\"grade\",\"quiet\",\"bench\",\"abate\",\"feign\",\"major\",\"death\",\"fresh\",\"crust\",\"stool\",\"colon\",\"abase\",\"marry\",\"react\",\"batty\",\"pride\",\"floss\",\"helix\",\"croak\",\"staff\",\"paper\",\"unfed\",\"whelp\",\"trawl\",\"outdo\",\"adobe\",\"crazy\",\"sower\",\"repay\",\"digit\",\"crate\",\"cluck\",\"spike\",\"mimic\",\"pound\",\"maxim\",\"linen\",\"unmet\",\"flesh\",\"booby\",\"forth\",\"first\",\"stand\",\"belly\",\"ivory\",\"seedy\",\"print\",\"yearn\",\"drain\",\"bribe\",\"stout\",\"panel\",\"crass\",\"flume\",\"offal\",\"agree\",\"error\",\"swirl\",\"argue\",\"bleed\",\"delta\",\"flick\",\"totem\",\"wooer\",\"front\",\"shrub\",\"parry\",\"biome\",\"lapel\",\"start\",\"greet\",\"goner\",\"golem\",\"lusty\",\"loopy\",\"round\",\"audit\",\"lying\",\"gamma\",\"labor\",\"islet\",\"civic\",\"forge\",\"corny\",\"moult\",\"basic\",\"salad\",\"agate\",\"spicy\",\"spray\",\"essay\",\"fjord\",\"spend\",\"kebab\",\"guild\",\"aback\",\"motor\",\"alone\",\"hatch\",\"hyper\",\"thumb\",\"dowry\",\"ought\",\"belch\",\"dutch\",\"pilot\",\"tweed\",\"comet\",\"jaunt\",\"enema\",\"steed\",\"abyss\",\"growl\",\"fling\",\"dozen\",\"boozy\",\"erode\",\"world\",\"gouge\",\"click\",\"briar\",\"great\",\"altar\",\"pulpy\",\"blurt\",\"coast\",\"duchy\",\"groin\",\"fixer\",\"group\",\"rogue\",\"badly\",\"smart\",\"pithy\",\"gaudy\",\"chill\",\"heron\",\"vodka\",\"finer\",\"surer\",\"radio\",\"rouge\",\"perch\",\"retch\",\"wrote\",\"clock\",\"tilde\",\"store\",\"prove\",\"bring\",\"solve\",\"cheat\",\"grime\",\"exult\",\"usher\",\"epoch\",\"triad\",\"break\",\"rhino\",\"viral\",\"conic\",\"masse\",\"sonic\",\"vital\",\"trace\",\"using\",\"peach\",\"champ\",\"baton\",\"brake\",\"pluck\",\"craze\",\"gripe\",\"weary\",\"picky\",\"acute\",\"ferry\",\"aside\",\"tapir\",\"troll\",\"unify\",\"rebus\",\"boost\",\"truss\",\"siege\",\"tiger\",\"banal\",\"slump\",\"crank\",\"gorge\",\"query\",\"drink\",\"favor\",\"abbey\",\"tangy\",\"panic\",\"solar\",\"shire\",\"proxy\",\"point\",\"robot\",\"prick\",\"wince\",\"crimp\",\"knoll\",\"sugar\",\"whack\",\"mount\",\"perky\",\"could\",\"wrung\",\"light\",\"those\",\"moist\",\"shard\",\"pleat\",\"aloft\",\"skill\",\"elder\",\"frame\",\"humor\",\"pause\",\"ulcer\",\"ultra\",\"robin\",\"cynic\",\"agora\",\"aroma\",\"caulk\",\"shake\",\"pupal\",\"dodge\",\"swill\",\"tacit\",\"other\",\"thorn\",\"trove\",\"bloke\",\"vivid\",\"spill\",\"chant\",\"choke\",\"rupee\",\"nasty\",\"mourn\",\"ahead\",\"brine\",\"cloth\",\"hoard\",\"sweet\",\"month\",\"lapse\",\"watch\",\"today\",\"focus\",\"smelt\",\"tease\",\"cater\",\"movie\",\"lynch\",\"saute\",\"allow\",\"renew\",\"their\",\"slosh\",\"purge\",\"chest\",\"depot\",\"epoxy\",\"nymph\",\"found\",\"shall\",\"harry\",\"stove\",\"lowly\",\"snout\",\"trope\",\"fewer\",\"shawl\",\"natal\",\"fibre\",\"comma\",\"foray\",\"scare\",\"stair\",\"black\",\"squad\",\"royal\",\"chunk\",\"mince\",\"slave\",\"shame\",\"cheek\",\"ample\",\"flair\",\"foyer\",\"cargo\",\"oxide\",\"plant\",\"olive\",\"inert\",\"askew\",\"heist\",\"shown\",\"zesty\",\"hasty\",\"trash\",\"fella\",\"larva\",\"forgo\",\"story\",\"hairy\",\"train\",\"homer\",\"badge\",\"midst\",\"canny\",\"fetus\",\"butch\",\"farce\",\"slung\",\"tipsy\",\"metal\",\"yield\",\"delve\",\"being\",\"scour\",\"glass\",\"gamer\",\"scrap\",\"money\",\"hinge\",\"album\",\"vouch\",\"asset\",\"tiara\",\"crept\",\"bayou\",\"atoll\",\"manor\",\"creak\",\"showy\",\"phase\",\"froth\",\"depth\",\"gloom\",\"flood\",\"trait\",\"girth\",\"piety\",\"payer\",\"goose\",\"float\",\"donor\",\"atone\",\"primo\",\"apron\",\"blown\",\"cacao\",\"loser\",\"input\",\"gloat\",\"awful\",\"brink\",\"smite\",\"beady\",\"rusty\",\"retro\",\"droll\",\"gawky\",\"hutch\",\"pinto\",\"gaily\",\"egret\",\"lilac\",\"sever\",\"field\",\"fluff\",\"hydro\",\"flack\",\"agape\",\"wench\",\"voice\",\"stead\",\"stalk\",\"berth\",\"madam\",\"night\",\"bland\",\"liver\",\"wedge\",\"augur\",\"roomy\",\"wacky\",\"flock\",\"angry\",\"bobby\",\"trite\",\"aphid\",\"tryst\",\"midge\",\"power\",\"elope\",\"cinch\",\"motto\",\"stomp\",\"upset\",\"bluff\",\"cramp\",\"quart\",\"coyly\",\"youth\",\"rhyme\",\"buggy\",\"alien\",\"smear\",\"unfit\",\"patty\",\"cling\",\"glean\",\"label\",\"hunky\",\"khaki\",\"poker\",\"gruel\",\"twice\",\"twang\",\"shrug\",\"treat\",\"unlit\",\"waste\",\"merit\",\"woven\",\"octal\",\"needy\",\"clown\",\"widow\",\"irony\",\"ruder\",\"gauze\",\"chief\",\"onset\",\"prize\",\"fungi\",\"charm\",\"gully\",\"inter\",\"whoop\",\"taunt\",\"leery\",\"class\",\"theme\",\"lofty\",\"tibia\",\"booze\",\"alpha\",\"thyme\",\"eclat\",\"doubt\",\"parer\",\"chute\",\"stick\",\"trice\",\"alike\",\"sooth\",\"recap\",\"saint\",\"liege\",\"glory\",\"grate\",\"admit\",\"brisk\",\"soggy\",\"usurp\",\"scald\",\"scorn\",\"leave\",\"twine\",\"sting\",\"bough\",\"marsh\",\"sloth\",\"dandy\",\"vigor\",\"howdy\",\"enjoy\",\"valid\",\"ionic\",\"equal\",\"unset\",\"floor\",\"catch\",\"spade\",\"stein\",\"exist\",\"quirk\",\"denim\",\"grove\",\"spiel\",\"mummy\",\"fault\",\"foggy\",\"flout\",\"carry\",\"sneak\",\"libel\",\"waltz\",\"aptly\",\"piney\",\"inept\",\"aloud\",\"photo\",\"dream\",\"stale\",\"vomit\",\"ombre\",\"fanny\",\"unite\",\"snarl\",\"baker\",\"there\",\"glyph\",\"pooch\",\"hippy\",\"spell\",\"folly\",\"louse\",\"gulch\",\"vault\",\"godly\",\"threw\",\"fleet\",\"grave\",\"inane\",\"shock\",\"crave\",\"spite\",\"valve\",\"skimp\",\"claim\",\"rainy\",\"musty\",\"pique\",\"daddy\",\"quasi\",\"arise\",\"aging\",\"valet\",\"opium\",\"avert\",\"stuck\",\"recut\",\"mulch\",\"genre\",\"plume\",\"rifle\",\"count\",\"incur\",\"total\",\"wrest\",\"mocha\",\"deter\",\"study\",\"lover\",\"safer\",\"rivet\",\"funny\",\"smoke\",\"mound\",\"undue\",\"sedan\",\"pagan\",\"swine\",\"guile\",\"gusty\",\"equip\",\"tough\",\"canoe\",\"chaos\",\"covet\",\"human\",\"udder\",\"lunch\",\"blast\",\"stray\",\"manga\",\"melee\",\"lefty\",\r\n    \"quick\",\"paste\",\"given\",\"octet\",\"risen\",\"groan\",\"leaky\",\"grind\",\"carve\",\"loose\",\"sadly\",\"spilt\",\"apple\",\"slack\",\"honey\",\"final\",\"sheen\",\"eerie\",\"minty\",\"slick\",\"derby\",\"wharf\",\"spelt\",\"coach\",\"erupt\",\"singe\",\"price\",\"spawn\",\"fairy\",\"jiffy\",\"filmy\",\"stack\",\"chose\",\"sleep\",\"ardor\",\"nanny\",\"niece\",\"woozy\",\"handy\",\"grace\",\"ditto\",\"stank\",\"cream\",\"usual\",\"diode\",\"valor\",\"angle\",\"ninja\",\"muddy\",\"chase\",\"reply\",\"prone\",\"spoil\",\"heart\",\"shade\",\"diner\",\"arson\",\"onion\",\"sleet\",\"dowel\",\"couch\",\"palsy\",\"bowel\",\"smile\",\"evoke\",\"creek\",\"lance\",\"eagle\",\"idiot\",\"siren\",\"built\",\"embed\",\"award\",\"dross\",\"annul\",\"goody\",\"frown\",\"patio\",\"laden\",\"humid\",\"elite\",\"lymph\",\"edify\",\"might\",\"reset\",\"visit\",\"gusto\",\"purse\",\"vapor\",\"crock\",\"write\",\"sunny\",\"loath\",\"chaff\",\"slide\",\"queer\",\"venom\",\"stamp\",\"sorry\",\"still\",\"acorn\",\"aping\",\"pushy\",\"tamer\",\"hater\",\"mania\",\"awoke\",\"brawn\",\"swift\",\"exile\",\"birch\",\"lucky\",\"freer\",\"risky\",\"ghost\",\"plier\",\"lunar\",\"winch\",\"snare\",\"nurse\",\"house\",\"borax\",\"nicer\",\"lurch\",\"exalt\",\"about\",\"savvy\",\"toxin\",\"tunic\",\"pried\",\"inlay\",\"chump\",\"lanky\",\"cress\",\"eater\",\"elude\",\"cycle\",\"kitty\",\"boule\",\"moron\",\"tenet\",\"place\",\"lobby\",\"plush\",\"vigil\",\"index\",\"blink\",\"clung\",\"qualm\",\"croup\",\"clink\",\"juicy\",\"stage\",\"decay\",\"nerve\",\"flier\",\"shaft\",\"crook\",\"clean\",\"china\",\"ridge\",\"vowel\",\"gnome\",\"snuck\",\"icing\",\"spiny\",\"rigor\",\"snail\",\"flown\",\"rabid\",\"prose\",\"thank\",\"poppy\",\"budge\",\"fiber\",\"moldy\",\"dowdy\",\"kneel\",\"track\",\"caddy\",\"quell\",\"dumpy\",\"paler\",\"swore\",\"rebar\",\"scuba\",\"splat\",\"flyer\",\"horny\",\"mason\",\"doing\",\"ozone\",\"amply\",\"molar\",\"ovary\",\"beset\",\"queue\",\"cliff\",\"magic\",\"truce\",\"sport\",\"fritz\",\"edict\",\"twirl\",\"verse\",\"llama\",\"eaten\",\"range\",\"whisk\",\"hovel\",\"rehab\",\"macaw\",\"sigma\",\"spout\",\"verve\",\"sushi\",\"dying\",\"fetid\",\"brain\",\"buddy\",\"thump\",\"scion\",\"candy\",\"chord\",\"basin\",\"march\",\"crowd\",\"arbor\",\"gayly\",\"musky\",\"stain\",\"dally\",\"bless\",\"bravo\",\"stung\",\"title\",\"ruler\",\"kiosk\",\"blond\",\"ennui\",\"layer\",\"fluid\",\"tatty\",\"score\",\"cutie\",\"zebra\",\"barge\",\"matey\",\"bluer\",\"aider\",\"shook\",\"river\",\"privy\",\"betel\",\"frisk\",\"bongo\",\"begun\",\"azure\",\"weave\",\"genie\",\"sound\",\"glove\",\"braid\",\"scope\",\"wryly\",\"rover\",\"assay\",\"ocean\",\"bloom\",\"irate\",\"later\",\"woken\",\"silky\",\"wreck\",\"dwelt\",\"slate\",\"smack\",\"solid\",\"amaze\",\"hazel\",\"wrist\",\"jolly\",\"globe\",\"flint\",\"rouse\",\"civil\",\"vista\",\"relax\",\"cover\",\"alive\",\"beech\",\"jetty\",\"bliss\",\"vocal\",\"often\",\"dolly\",\"eight\",\"joker\",\"since\",\"event\",\"ensue\",\"shunt\",\"diver\",\"poser\",\"worst\",\"sweep\",\"alley\",\"creed\",\"anime\",\"leafy\",\"bosom\",\"dunce\",\"stare\",\"pudgy\",\"waive\",\"choir\",\"stood\",\"spoke\",\"outgo\",\"delay\",\"bilge\",\"ideal\",\"clasp\",\"seize\",\"hotly\",\"laugh\",\"sieve\",\"block\",\"meant\",\"grape\",\"noose\",\"hardy\",\"shied\",\"drawl\",\"daisy\",\"putty\",\"strut\",\"burnt\",\"tulip\",\"crick\",\"idyll\",\"vixen\",\"furor\",\"geeky\",\"cough\",\"naive\",\"shoal\",\"stork\",\"bathe\",\"aunty\",\"check\",\"prime\",\"brass\",\"outer\",\"furry\",\"razor\",\"elect\",\"evict\",\"imply\",\"demur\",\"quota\",\"haven\",\"cavil\",\"swear\",\"crump\",\"dough\",\"gavel\",\"wagon\",\"salon\",\"nudge\",\"harem\",\"pitch\",\"sworn\",\"pupil\",\"excel\",\"stony\",\"cabin\",\"unzip\",\"queen\",\"trout\",\"polyp\",\"earth\",\"storm\",\"until\",\"taper\",\"enter\",\"child\",\"adopt\",\"minor\",\"fatty\",\"husky\",\"brave\",\"filet\",\"slime\",\"glint\",\"tread\",\"steal\",\"regal\",\"guest\",\"every\",\"murky\",\"share\",\"spore\",\"hoist\",\"buxom\",\"inner\",\"otter\",\"dimly\",\"level\",\"sumac\",\"donut\",\"stilt\",\"arena\",\"sheet\",\"scrub\",\"fancy\",\"slimy\",\"pearl\",\"silly\",\"porch\",\"dingo\",\"sepia\",\"amble\",\"shady\",\"bread\",\"friar\",\"reign\",\"dairy\",\"quill\",\"cross\",\"brood\",\"tuber\",\"shear\",\"posit\",\"blank\",\"villa\",\"shank\",\"piggy\",\"freak\",\"which\",\"among\",\"fecal\",\"shell\",\"would\",\"algae\",\"large\",\"rabbi\",\"agony\",\"amuse\",\"bushy\",\"copse\",\"swoon\",\"knife\",\"pouch\",\"ascot\",\"plane\",\"crown\",\"urban\",\"snide\",\"relay\",\"abide\",\"viola\",\"rajah\",\"straw\",\"dilly\",\"crash\",\"amass\",\"third\",\"trick\",\"tutor\",\"woody\",\"blurb\",\"grief\",\"disco\",\"where\",\"sassy\",\"beach\",\"sauna\",\"comic\",\"clued\",\"creep\",\"caste\",\"graze\",\"snuff\",\"frock\",\"gonad\",\"drunk\",\"prong\",\"lurid\",\"steel\",\"halve\",\"buyer\",\"vinyl\",\"utile\",\"smell\",\"adage\",\"worry\",\"tasty\",\"local\",\"trade\",\"finch\",\"ashen\",\"modal\",\"gaunt\",\"clove\",\"enact\",\"adorn\",\"roast\",\"speck\",\"sheik\",\"missy\",\"grunt\",\"snoop\",\"party\",\"touch\",\"mafia\",\"emcee\",\"array\",\"south\",\"vapid\",\"jelly\",\"skulk\",\"angst\",\"tubal\",\"lower\",\"crest\",\"sweat\",\"cyber\",\"adore\",\"tardy\",\"swami\",\"notch\",\"groom\",\"roach\",\"hitch\",\"young\",\"align\",\"ready\",\"frond\",\"strap\",\"puree\",\"realm\",\"venue\",\"swarm\",\"offer\",\"seven\",\"dryer\",\"diary\",\"dryly\",\"drank\",\"acrid\",\"heady\",\"theta\",\"junto\",\"pixie\",\"quoth\",\"bonus\",\"shalt\",\"penne\",\"amend\",\"datum\",\"build\",\"piano\",\"shelf\",\"lodge\",\"suing\",\"rearm\",\"coral\",\"ramen\",\"worth\",\"psalm\",\"infer\",\"overt\",\"mayor\",\"ovoid\",\"glide\",\"usage\",\"poise\",\"randy\",\"chuck\",\"prank\",\"fishy\",\"tooth\",\"ether\",\"drove\",\"idler\",\"swath\",\"stint\",\"while\",\"begat\",\"apply\",\"slang\",\"tarot\",\"radar\",\"credo\",\"aware\",\"canon\",\"shift\",\"timer\",\"bylaw\",\"serum\",\"three\",\"steak\",\"iliac\",\r\n    \"shirk\",\"blunt\",\"puppy\",\"penal\",\"joist\",\"bunny\",\"shape\",\"beget\",\"wheel\",\"adept\",\"stunt\",\"stole\",\"topaz\",\"chore\",\"fluke\",\"afoot\",\"bloat\",\"bully\",\"dense\",\"caper\",\"sneer\",\"boxer\",\"jumbo\",\"lunge\",\"space\",\"avail\",\"short\",\"slurp\",\"loyal\",\"flirt\",\"pizza\",\"conch\",\"tempo\",\"droop\",\"plate\",\"bible\",\"plunk\",\"afoul\",\"savoy\",\"steep\",\"agile\",\"stake\",\"dwell\",\"knave\",\"beard\",\"arose\",\"motif\",\"smash\",\"broil\",\"glare\",\"shove\",\"baggy\",\"mammy\",\"swamp\",\"along\",\"rugby\",\"wager\",\"quack\",\"squat\",\"snaky\",\"debit\",\"mange\",\"skate\",\"ninth\",\"joust\",\"tramp\",\"spurn\",\"medal\",\"micro\",\"rebel\",\"flank\",\"learn\",\"nadir\",\"maple\",\"comfy\",\"remit\",\"gruff\",\"ester\",\"least\",\"mogul\",\"fetch\",\"cause\",\"oaken\",\"aglow\",\"meaty\",\"gaffe\",\"shyly\",\"racer\",\"prowl\",\"thief\",\"stern\",\"poesy\",\"rocky\",\"tweet\",\"waist\",\"spire\",\"grope\",\"havoc\",\"patsy\",\"truly\",\"forty\",\"deity\",\"uncle\",\"swish\",\"giver\",\"preen\",\"bevel\",\"lemur\",\"draft\",\"slope\",\"annoy\",\"lingo\",\"bleak\",\"ditty\",\"curly\",\"cedar\",\"dirge\",\"grown\",\"horde\",\"drool\",\"shuck\",\"crypt\",\"cumin\",\"stock\",\"gravy\",\"locus\",\"wider\",\"breed\",\"quite\",\"chafe\",\"cache\",\"blimp\",\"deign\",\"fiend\",\"logic\",\"cheap\",\"elide\",\"rigid\",\"false\",\"renal\",\"pence\",\"rowdy\",\"shoot\",\"blaze\",\"envoy\",\"posse\",\"brief\",\"never\",\"abort\",\"mouse\",\"mucky\",\"sulky\",\"fiery\",\"media\",\"trunk\",\"yeast\",\"clear\",\"skunk\",\"scalp\",\"bitty\",\"cider\",\"koala\",\"duvet\",\"segue\",\"creme\",\"super\",\"grill\",\"after\",\"owner\",\"ember\",\"reach\",\"nobly\",\"empty\",\"speed\",\"gipsy\",\"recur\",\"smock\",\"dread\",\"merge\",\"burst\",\"kappa\",\"amity\",\"shaky\",\"hover\",\"carol\",\"snort\",\"synod\",\"faint\",\"haunt\",\"flour\",\"chair\",\"detox\",\"shrew\",\"tense\",\"plied\",\"quark\",\"burly\",\"novel\",\"waxen\",\"stoic\",\"jerky\",\"blitz\",\"beefy\",\"lyric\",\"hussy\",\"towel\",\"quilt\",\"below\",\"bingo\",\"wispy\",\"brash\",\"scone\",\"toast\",\"easel\",\"saucy\",\"value\",\"spice\",\"honor\",\"route\",\"sharp\",\"bawdy\",\"radii\",\"skull\",\"phony\",\"issue\",\"lager\",\"swell\",\"urine\",\"gassy\",\"trial\",\"flora\",\"upper\",\"latch\",\"wight\",\"brick\",\"retry\",\"holly\",\"decal\",\"grass\",\"shack\",\"dogma\",\"mover\",\"defer\",\"sober\",\"optic\",\"crier\",\"vying\",\"nomad\",\"flute\",\"hippo\",\"shark\",\"drier\",\"obese\",\"bugle\",\"tawny\",\"chalk\",\"feast\",\"ruddy\",\"pedal\",\"scarf\",\"cruel\",\"bleat\",\"tidal\",\"slush\",\"semen\",\"windy\",\"dusty\",\"sally\",\"igloo\",\"nerdy\",\"jewel\",\"shone\",\"whale\",\"hymen\",\"abuse\",\"fugue\",\"elbow\",\"crumb\",\"pansy\",\"welsh\",\"syrup\",\"terse\",\"suave\",\"gamut\",\"swung\",\"drake\",\"freed\",\"afire\",\"shirt\",\"grout\",\"oddly\",\"tithe\",\"plaid\",\"dummy\",\"broom\",\"blind\",\"torch\",\"enemy\",\"again\",\"tying\",\"pesky\",\"alter\",\"gazer\",\"noble\",\"ethos\",\"bride\",\"extol\",\"decor\",\"hobby\",\"beast\",\"idiom\",\"utter\",\"these\",\"sixth\",\"alarm\",\"erase\",\"elegy\",\"spunk\",\"piper\",\"scaly\",\"scold\",\"hefty\",\"chick\",\"sooty\",\"canal\",\"whiny\",\"slash\",\"quake\",\"joint\",\"swept\",\"prude\",\"heavy\",\"wield\",\"femme\",\"lasso\",\"maize\",\"shale\",\"screw\",\"spree\",\"smoky\",\"whiff\",\"scent\",\"glade\",\"spent\",\"prism\",\"stoke\",\"riper\",\"orbit\",\"cocoa\",\"guilt\",\"humus\",\"shush\",\"table\",\"smirk\",\"wrong\",\"noisy\",\"alert\",\"shiny\",\"elate\",\"resin\",\"whole\",\"hunch\",\"pixel\",\"polar\",\"hotel\",\"sword\",\"cleat\",\"mango\",\"rumba\",\"puffy\",\"filly\",\"billy\",\"leash\",\"clout\",\"dance\",\"ovate\",\"facet\",\"chili\",\"paint\",\"liner\",\"curio\",\"salty\",\"audio\",\"snake\",\"fable\",\"cloak\",\"navel\",\"spurt\",\"pesto\",\"balmy\",\"flash\",\"unwed\",\"early\",\"churn\",\"weedy\",\"stump\",\"lease\",\"witty\",\"wimpy\",\"spoof\",\"saner\",\"blend\",\"salsa\",\"thick\",\"warty\",\"manic\",\"blare\",\"squib\",\"spoon\",\"probe\",\"crepe\",\"knack\",\"force\",\"debut\",\"order\",\"haste\",\"teeth\",\"agent\",\"widen\",\"icily\",\"slice\",\"ingot\",\"clash\",\"juror\",\"blood\",\"abode\",\"throw\",\"unity\",\"pivot\",\"slept\",\"troop\",\"spare\",\"sewer\",\"parse\",\"morph\",\"cacti\",\"tacky\",\"spool\",\"demon\",\"moody\",\"annex\",\"begin\",\"fuzzy\",\"patch\",\"water\",\"lumpy\",\"admin\",\"omega\",\"limit\",\"tabby\",\"macho\",\"aisle\",\"skiff\",\"basis\",\"plank\",\"verge\",\"botch\",\"crawl\",\"lousy\",\"slain\",\"cubic\",\"raise\",\"wrack\",\"guide\",\"foist\",\"cameo\",\"under\",\"actor\",\"revue\",\"fraud\",\"harpy\",\"scoop\",\"climb\",\"refer\",\"olden\",\"clerk\",\"debar\",\"tally\",\"ethic\",\"cairn\",\"tulle\",\"ghoul\",\"hilly\",\"crude\",\"apart\",\"scale\",\"older\",\"plain\",\"sperm\",\"briny\",\"abbot\",\"rerun\",\"quest\",\"crisp\",\"bound\",\"befit\",\"drawn\",\"suite\",\"itchy\",\"cheer\",\"bagel\",\"guess\",\"broad\",\"axiom\",\"chard\",\"caput\",\"leant\",\"harsh\",\"curse\",\"proud\",\"swing\",\"opine\",\"taste\",\"lupus\",\"gumbo\",\"miner\",\"green\",\"chasm\",\"lipid\",\"topic\",\"armor\",\"brush\",\"crane\",\"mural\",\"abled\",\"habit\",\"bossy\",\"maker\",\"dusky\",\"dizzy\",\"lithe\",\"brook\",\"jazzy\",\"fifty\",\"sense\",\"giant\",\"surly\",\"legal\",\"fatal\",\"flunk\",\"began\",\"prune\",\"small\",\"slant\",\"scoff\",\"torus\",\"ninny\",\"covey\",\"viper\",\"taken\",\"moral\",\"vogue\",\"owing\",\"token\",\"entry\",\"booth\",\"voter\",\"chide\",\"elfin\",\"ebony\",\"neigh\",\"minim\",\"melon\",\"kneed\",\"decoy\",\"voila\",\"ankle\",\"arrow\",\"mushy\",\"tribe\",\"cease\",\"eager\",\"birth\",\"graph\",\"odder\",\"terra\",\"weird\",\"tried\",\"clack\",\"color\",\"rough\",\"weigh\",\"uncut\",\"ladle\",\"strip\",\"craft\",\"minus\",\"dicey\",\"titan\",\"lucid\",\"vicar\",\"dress\",\"ditch\",\"gypsy\",\"pasta\",\"taffy\",\"flame\",\"swoop\",\"aloof\",\"sight\",\"broke\",\"teary\",\"chart\",\"sixty\",\r\n    \"wordy\",\"sheer\",\"leper\",\"nosey\",\"bulge\",\"savor\",\"clamp\",\"funky\",\"foamy\",\"toxic\",\"brand\",\"plumb\",\"dingy\",\"butte\",\"drill\",\"tripe\",\"bicep\",\"tenor\",\"krill\",\"worse\",\"drama\",\"hyena\",\"think\",\"ratio\",\"cobra\",\"basil\",\"scrum\",\"bused\",\"phone\",\"court\",\"camel\",\"proof\",\"heard\",\"angel\",\"petal\",\"pouty\",\"throb\",\"maybe\",\"fetal\",\"sprig\",\"spine\",\"shout\",\"cadet\",\"macro\",\"dodgy\",\"satyr\",\"rarer\",\"binge\",\"trend\",\"nutty\",\"leapt\",\"amiss\",\"split\",\"myrrh\",\"width\",\"sonar\",\"tower\",\"baron\",\"fever\",\"waver\",\"spark\",\"belie\",\"sloop\",\"expel\",\"smote\",\"baler\",\"above\",\"north\",\"wafer\",\"scant\",\"frill\",\"awash\",\"snack\",\"scowl\",\"frail\",\"drift\",\"limbo\",\"fence\",\"motel\",\"ounce\",\"wreak\",\"revel\",\"talon\",\"prior\",\"knelt\",\"cello\",\"flake\",\"debug\",\"anode\",\"crime\",\"salve\",\"scout\",\"imbue\",\"pinky\",\"stave\",\"vague\",\"chock\",\"fight\",\"video\",\"stone\",\"teach\",\"cleft\",\"frost\",\"prawn\",\"booty\",\"twist\",\"apnea\",\"stiff\",\"plaza\",\"ledge\",\"tweak\",\"board\",\"grant\",\"medic\",\"bacon\",\"cable\",\"brawl\",\"slunk\",\"raspy\",\"forum\",\"drone\",\"women\",\"mucus\",\"boast\",\"toddy\",\"coven\",\"tumor\",\"truer\",\"wrath\",\"stall\",\"steam\",\"axial\",\"purer\",\"daily\",\"trail\",\"niche\",\"mealy\",\"juice\",\"nylon\",\"plump\",\"merry\",\"flail\",\"papal\",\"wheat\",\"berry\",\"cower\",\"erect\",\"brute\",\"leggy\",\"snipe\",\"sinew\",\"skier\",\"penny\",\"jumpy\",\"rally\",\"umbra\",\"scary\",\"modem\",\"gross\",\"avian\",\"greed\",\"satin\",\"tonic\",\"parka\",\"sniff\",\"livid\",\"stark\",\"trump\",\"giddy\",\"reuse\",\"taboo\",\"avoid\",\"quote\",\"devil\",\"liken\",\"gloss\",\"gayer\",\"beret\",\"noise\",\"gland\",\"dealt\",\"sling\",\"rumor\",\"opera\",\"thigh\",\"tonga\",\"flare\",\"wound\",\"white\",\"bulky\",\"etude\",\"horse\",\"circa\",\"paddy\",\"inbox\",\"fizzy\",\"grain\",\"exert\",\"surge\",\"gleam\",\"belle\",\"salvo\",\"crush\",\"fruit\",\"sappy\",\"taker\",\"tract\",\"ovine\",\"spiky\",\"frank\",\"reedy\",\"filth\",\"spasm\",\"heave\",\"mambo\",\"right\",\"clank\",\"trust\",\"lumen\",\"borne\",\"spook\",\"sauce\",\"amber\",\"lathe\",\"carat\",\"corer\",\"dirty\",\"slyly\",\"affix\",\"alloy\",\"taint\",\"sheep\",\"kinky\",\"wooly\",\"mauve\",\"flung\",\"yacht\",\"fried\",\"quail\",\"brunt\",\"grimy\",\"curvy\",\"cagey\",\"rinse\",\"deuce\",\"state\",\"grasp\",\"milky\",\"bison\",\"graft\",\"sandy\",\"baste\",\"flask\",\"hedge\",\"girly\",\"swash\",\"boney\",\"coupe\",\"endow\",\"abhor\",\"welch\",\"blade\",\"tight\",\"geese\",\"miser\",\"mirth\",\"cloud\",\"cabal\",\"leech\",\"close\",\"tenth\",\"pecan\",\"droit\",\"grail\",\"clone\",\"guise\",\"ralph\",\"tango\",\"biddy\",\"smith\",\"mower\",\"payee\",\"serif\",\"drape\",\"fifth\",\"spank\",\"glaze\",\"allot\",\"truck\",\"kayak\",\"virus\",\"testy\",\"tepee\",\"fully\",\"zonal\",\"metro\",\"curry\",\"grand\",\"banjo\",\"axion\",\"bezel\",\"occur\",\"chain\",\"nasal\",\"gooey\",\"filer\",\"brace\",\"allay\",\"pubic\",\"raven\",\"plead\",\"gnash\",\"flaky\",\"munch\",\"dully\",\"eking\",\"thing\",\"slink\",\"hurry\",\"theft\",\"shorn\",\"pygmy\",\"ranch\",\"wring\",\"lemon\",\"shore\",\"mamma\",\"froze\",\"newer\",\"style\",\"moose\",\"antic\",\"drown\",\"vegan\",\"chess\",\"guppy\",\"union\",\"lever\",\"lorry\",\"image\",\"cabby\",\"druid\",\"exact\",\"truth\",\"dopey\",\"spear\",\"cried\",\"chime\",\"crony\",\"stunk\",\"timid\",\"batch\",\"gauge\",\"rotor\",\"crack\",\"curve\",\"latte\",\"witch\",\"bunch\",\"repel\",\"anvil\",\"soapy\",\"meter\",\"broth\",\"madly\",\"dried\",\"scene\",\"known\",\"magma\",\"roost\",\"woman\",\"thong\",\"punch\",\"pasty\",\"downy\",\"knead\",\"whirl\",\"rapid\",\"clang\",\"anger\",\"drive\",\"goofy\",\"email\",\"music\",\"stuff\",\"bleep\",\"rider\",\"mecca\",\"folio\",\"setup\",\"verso\",\"quash\",\"fauna\",\"gummy\",\"happy\",\"newly\",\"fussy\",\"relic\",\"guava\",\"ratty\",\"fudge\",\"femur\",\"chirp\",\"forte\",\"alibi\",\"whine\",\"petty\",\"golly\",\"plait\",\"fleck\",\"felon\",\"gourd\",\"brown\",\"thrum\",\"ficus\",\"stash\",\"decry\",\"wiser\",\"junta\",\"visor\",\"daunt\",\"scree\",\"impel\",\"await\",\"press\",\"whose\",\"turbo\",\"stoop\",\"speak\",\"mangy\",\"eying\",\"inlet\",\"crone\",\"pulse\",\"mossy\",\"staid\",\"hence\",\"pinch\",\"teddy\",\"sully\",\"snore\",\"ripen\",\"snowy\",\"attic\",\"going\",\"leach\",\"mouth\",\"hound\",\"clump\",\"tonal\",\"bigot\",\"peril\",\"piece\",\"blame\",\"haute\",\"spied\",\"undid\",\"intro\",\"basal\",\"shine\",\"gecko\",\"rodeo\",\"guard\",\"steer\",\"loamy\",\"scamp\",\"scram\",\"manly\",\"hello\",\"vaunt\",\"organ\",\"feral\",\"knock\",\"extra\",\"condo\",\"adapt\",\"willy\",\"polka\",\"rayon\",\"skirt\",\"faith\",\"torso\",\"match\",\"mercy\",\"tepid\",\"sleek\",\"riser\",\"twixt\",\"peace\",\"flush\",\"catty\",\"login\",\"eject\",\"roger\",\"rival\",\"untie\",\"refit\",\"aorta\",\"adult\",\"judge\",\"rower\",\"artsy\",\"rural\",\"shave\"];\r\n\r\n    const obscureWords=[\"aahed\",\"aalii\",\"aargh\",\"aarti\",\"abaca\",\"abaci\",\"abacs\",\"abaft\",\"abaka\",\"abamp\",\"aband\",\"abash\",\"abask\",\"abaya\",\"abbas\",\"abbed\",\"abbes\",\"abcee\",\"abeam\",\"abear\",\"abele\",\"abers\",\"abets\",\"abies\",\"abler\",\"ables\",\"ablet\",\"ablow\",\"abmho\",\"abohm\",\"aboil\",\"aboma\",\"aboon\",\"abord\",\"abore\",\"abram\",\"abray\",\"abrim\",\"abrin\",\"abris\",\"absey\",\"absit\",\"abuna\",\"abune\",\"abuts\",\"abuzz\",\"abyes\",\"abysm\",\"acais\",\"acari\",\"accas\",\"accoy\",\"acerb\",\"acers\",\"aceta\",\"achar\",\"ached\",\"aches\",\"achoo\",\"acids\",\"acidy\",\"acing\",\"acini\",\"ackee\",\"acker\",\"acmes\",\"acmic\",\"acned\",\"acnes\",\"acock\",\"acold\",\"acred\",\"acres\",\"acros\",\"acted\",\"actin\",\"acton\",\"acyls\",\"adaws\",\"adays\",\"adbot\",\"addax\",\"added\",\"adder\",\"addio\",\"addle\",\"adeem\",\"adhan\",\"adieu\",\"adios\",\"adits\",\"adman\",\"admen\",\"admix\",\"adobo\",\"adown\",\"adoze\",\"adrad\",\"adred\",\"adsum\",\"aduki\",\"adunc\",\"adust\",\"advew\",\"adyta\",\"adzed\",\"adzes\",\"aecia\",\"aedes\",\"aegis\",\"aeons\",\"aerie\",\"aeros\",\"aesir\",\"afald\",\"afara\",\"afars\",\"afear\",\"aflaj\",\"afore\",\"afrit\",\"afros\",\"agama\",\"agami\",\"agars\",\"agast\",\"agave\",\"agaze\",\"agene\",\"agers\",\"agger\",\"aggie\",\"aggri\",\"aggro\",\"aggry\",\"aghas\",\"agila\",\"agios\",\"agism\",\"agist\",\"agita\",\"aglee\",\"aglet\",\"agley\",\"agloo\",\"aglus\",\"agmas\",\"agoge\",\"agone\",\"agons\",\"agood\",\"agria\",\"agrin\",\"agros\",\"agued\",\"agues\",\"aguna\",\"aguti\",\"aheap\",\"ahent\",\"ahigh\",\"ahind\",\"ahing\",\"ahint\",\"ahold\",\"ahull\",\"ahuru\",\"aidas\",\"aided\",\"aides\",\"aidoi\",\"aidos\",\"aiery\",\"aigas\",\"aight\",\"ailed\",\"aimed\",\"aimer\",\"ainee\",\"ainga\",\"aioli\",\"aired\",\"airer\",\"airns\",\"airth\",\"airts\",\"aitch\",\"aitus\",\"aiver\",\"aiyee\",\"aizle\",\"ajies\",\"ajiva\",\"ajuga\",\"ajwan\",\"akees\",\"akela\",\"akene\",\"aking\",\"akita\",\"akkas\",\"alaap\",\"alack\",\"alamo\",\"aland\",\"alane\",\"alang\",\"alans\",\"alant\",\"alapa\",\"alaps\",\"alary\",\"alate\",\"alays\",\"albas\",\"albee\",\"alcid\",\"alcos\",\"aldea\",\"alder\",\"aldol\",\"aleck\",\"alecs\",\"alefs\",\"aleft\",\"aleph\",\"alews\",\"aleye\",\"alfas\",\"algal\",\"algas\",\"algid\",\"algin\",\"algor\",\"algum\",\"alias\",\"alifs\",\"aline\",\"alist\",\"aliya\",\"alkie\",\"alkos\",\"alkyd\",\"alkyl\",\"allee\",\"allel\",\"allis\",\"allod\",\"allyl\",\"almah\",\"almas\",\"almeh\",\"almes\",\"almud\",\"almug\",\"alods\",\"aloed\",\"aloes\",\"aloha\",\"aloin\",\"aloos\",\"alowe\",\"altho\",\"altos\",\"alula\",\"alums\",\"alure\",\"alvar\",\"alway\",\"amahs\",\"amain\",\"amate\",\"amaut\",\"amban\",\"ambit\",\"ambos\",\"ambry\",\"ameba\",\"ameer\",\"amene\",\"amens\",\"ament\",\"amias\",\"amice\",\"amici\",\"amide\",\"amido\",\"amids\",\"amies\",\"amiga\",\"amigo\",\"amine\",\"amino\",\"amins\",\"amirs\",\"amlas\",\"amman\",\"ammon\",\"ammos\",\"amnia\",\"amnic\",\"amnio\",\"amoks\",\"amole\",\"amort\",\"amour\",\"amove\",\"amowt\",\"amped\",\"ampul\",\"amrit\",\"amuck\",\"amyls\",\"anana\",\"anata\",\"ancho\",\"ancle\",\"ancon\",\"andro\",\"anear\",\"anele\",\"anent\",\"angas\",\"anglo\",\"anigh\",\"anile\",\"anils\",\"anima\",\"animi\",\"anion\",\"anise\",\"anker\",\"ankhs\",\"ankus\",\"anlas\",\"annal\",\"annas\",\"annat\",\"anoas\",\"anole\",\"anomy\",\"ansae\",\"antae\",\"antar\",\"antas\",\"anted\",\"antes\",\"antis\",\"antra\",\"antre\",\"antsy\",\"anura\",\"anyon\",\"apace\",\"apage\",\"apaid\",\"apayd\",\"apays\",\"apeak\",\"apeek\",\"apers\",\"apert\",\"apery\",\"apgar\",\"aphis\",\"apian\",\"apiol\",\"apish\",\"apism\",\"apode\",\"apods\",\"apoop\",\"aport\",\"appal\",\"appay\",\"appel\",\"appro\",\"appui\",\"appuy\",\"apres\",\"apses\",\"apsis\",\"apsos\",\"apted\",\"apter\",\"aquae\",\"aquas\",\"araba\",\"araks\",\"arame\",\"arars\",\"arbas\",\"arced\",\"archi\",\"arcos\",\"arcus\",\"ardeb\",\"ardri\",\"aread\",\"areae\",\"areal\",\"arear\",\"areas\",\"areca\",\"aredd\",\"arede\",\"arefy\",\"areic\",\"arene\",\"arepa\",\"arere\",\"arete\",\"arets\",\"arett\",\"argal\",\"argan\",\"argil\",\"argle\",\"argol\",\"argon\",\"argot\",\"argus\",\"arhat\",\"arias\",\"ariel\",\"ariki\",\"arils\",\"ariot\",\"arish\",\"arked\",\"arled\",\"arles\",\"armed\",\"armer\",\"armet\",\"armil\",\"arnas\",\"arnut\",\"aroba\",\"aroha\",\"aroid\",\"arpas\",\"arpen\",\"arrah\",\"arras\",\"arret\",\"arris\",\"arroz\",\"arsed\",\"arses\",\"arsey\",\"arsis\",\"artal\",\"artel\",\"artic\",\"artis\",\"aruhe\",\"arums\",\"arval\",\"arvee\",\"arvos\",\"aryls\",\"asana\",\"ascon\",\"ascus\",\"asdic\",\"ashed\",\"ashes\",\"ashet\",\"asked\",\"asker\",\"askoi\",\"askos\",\"aspen\",\"asper\",\"aspic\",\"aspie\",\"aspis\",\"aspro\",\"assai\",\"assam\",\"asses\",\"assez\",\"assot\",\"aster\",\"astir\",\"astun\",\"asura\",\"asway\",\"aswim\",\"asyla\",\"ataps\",\"ataxy\",\"atigi\",\"atilt\",\"atimy\",\"atlas\",\"atman\",\"atmas\",\"atmos\",\"atocs\",\"atoke\",\"atoks\",\"atoms\",\"atomy\",\"atony\",\"atopy\",\"atria\",\"atrip\",\"attap\",\"attar\",\"atuas\",\"audad\",\"auger\",\"aught\",\"aulas\",\"aulic\",\"auloi\",\"aulos\",\"aumil\",\"aunes\",\"aunts\",\"aurae\",\"aural\",\"aurar\",\"auras\",\"aurei\",\"aures\",\"auric\",\"auris\",\"aurum\",\"autos\",\"auxin\",\"avale\",\"avant\",\"avast\",\"avels\",\"avens\",\"avers\",\"avgas\",\"avine\",\"avion\",\"avise\",\"aviso\",\"avize\",\"avows\",\"avyze\",\"awarn\",\"awato\",\"awave\",\"aways\",\"awdls\",\"aweel\",\"aweto\",\"awing\",\"awmry\",\"awned\",\"awner\",\"awols\",\"awork\",\"axels\",\"axile\",\"axils\",\"axing\",\"axite\",\"axled\",\"axles\",\"axman\",\"axmen\",\"axoid\",\"axone\",\"axons\",\"ayahs\",\"ayaya\",\"ayelp\",\"aygre\",\"ayins\",\"ayont\",\"ayres\",\"ayrie\",\"azans\",\"azide\",\"azido\",\"azine\",\"azlon\",\"azoic\",\"azole\",\"azons\",\"azote\",\"azoth\",\"azuki\",\"azurn\",\"azury\",\"azygy\",\"azyme\",\"azyms\",\"baaed\",\"baals\",\"babas\",\"babel\",\"babes\",\"babka\",\"baboo\",\r\n    \"babul\",\"babus\",\"bacca\",\"bacco\",\"baccy\",\"bacha\",\"bachs\",\"backs\",\"baddy\",\"baels\",\"baffs\",\"baffy\",\"bafts\",\"baghs\",\"bagie\",\"bahts\",\"bahus\",\"bahut\",\"bails\",\"bairn\",\"baisa\",\"baith\",\"baits\",\"baiza\",\"baize\",\"bajan\",\"bajra\",\"bajri\",\"bajus\",\"baked\",\"baken\",\"bakes\",\"bakra\",\"balas\",\"balds\",\"baldy\",\"baled\",\"bales\",\"balks\",\"balky\",\"balls\",\"bally\",\"balms\",\"baloo\",\"balsa\",\"balti\",\"balun\",\"balus\",\"bambi\",\"banak\",\"banco\",\"bancs\",\"banda\",\"bandh\",\"bands\",\"bandy\",\"baned\",\"banes\",\"bangs\",\"bania\",\"banks\",\"banns\",\"bants\",\"bantu\",\"banty\",\"banya\",\"bapus\",\"barbe\",\"barbs\",\"barby\",\"barca\",\"barde\",\"bardo\",\"bards\",\"bardy\",\"bared\",\"barer\",\"bares\",\"barfi\",\"barfs\",\"baric\",\"barks\",\"barky\",\"barms\",\"barmy\",\"barns\",\"barny\",\"barps\",\"barra\",\"barre\",\"barro\",\"barry\",\"barye\",\"basan\",\"based\",\"basen\",\"baser\",\"bases\",\"basho\",\"basij\",\"basks\",\"bason\",\"basse\",\"bassi\",\"basso\",\"bassy\",\"basta\",\"basti\",\"basto\",\"basts\",\"bated\",\"bates\",\"baths\",\"batik\",\"batta\",\"batts\",\"battu\",\"bauds\",\"bauks\",\"baulk\",\"baurs\",\"bavin\",\"bawds\",\"bawks\",\"bawls\",\"bawns\",\"bawrs\",\"bawty\",\"bayed\",\"bayer\",\"bayes\",\"bayle\",\"bayts\",\"bazar\",\"bazoo\",\"beads\",\"beaks\",\"beaky\",\"beals\",\"beams\",\"beamy\",\"beano\",\"beans\",\"beany\",\"beare\",\"bears\",\"beath\",\"beats\",\"beaty\",\"beaus\",\"beaut\",\"beaux\",\"bebop\",\"becap\",\"becke\",\"becks\",\"bedad\",\"bedel\",\"bedes\",\"bedew\",\"bedim\",\"bedye\",\"beedi\",\"beefs\",\"beeps\",\"beers\",\"beery\",\"beets\",\"befog\",\"begad\",\"begar\",\"begem\",\"begot\",\"begum\",\"beige\",\"beigy\",\"beins\",\"bekah\",\"belah\",\"belar\",\"belay\",\"belee\",\"belga\",\"bells\",\"belon\",\"belts\",\"bemad\",\"bemas\",\"bemix\",\"bemud\",\"bends\",\"bendy\",\"benes\",\"benet\",\"benga\",\"benis\",\"benne\",\"benni\",\"benny\",\"bento\",\"bents\",\"benty\",\"bepat\",\"beray\",\"beres\",\"bergs\",\"berko\",\"berks\",\"berme\",\"berms\",\"berob\",\"beryl\",\"besat\",\"besaw\",\"besee\",\"beses\",\"besit\",\"besom\",\"besot\",\"besti\",\"bests\",\"betas\",\"beted\",\"betes\",\"beths\",\"betid\",\"beton\",\"betta\",\"betty\",\"bever\",\"bevor\",\"bevue\",\"bevvy\",\"bewet\",\"bewig\",\"bezes\",\"bezil\",\"bezzy\",\"bhais\",\"bhaji\",\"bhang\",\"bhats\",\"bhels\",\"bhoot\",\"bhuna\",\"bhuts\",\"biach\",\"biali\",\"bialy\",\"bibbs\",\"bibes\",\"biccy\",\"bices\",\"bided\",\"bider\",\"bides\",\"bidet\",\"bidis\",\"bidon\",\"bield\",\"biers\",\"biffo\",\"biffs\",\"biffy\",\"bifid\",\"bigae\",\"biggs\",\"biggy\",\"bigha\",\"bight\",\"bigly\",\"bigos\",\"bijou\",\"biked\",\"biker\",\"bikes\",\"bikie\",\"bilbo\",\"bilby\",\"biled\",\"biles\",\"bilgy\",\"bilks\",\"bills\",\"bimah\",\"bimas\",\"bimbo\",\"binal\",\"bindi\",\"binds\",\"biner\",\"bines\",\"bings\",\"bingy\",\"binit\",\"binks\",\"bints\",\"biogs\",\"biont\",\"biota\",\"biped\",\"bipod\",\"birds\",\"birks\",\"birle\",\"birls\",\"biros\",\"birrs\",\"birse\",\"birsy\",\"bises\",\"bisks\",\"bisom\",\"bitch\",\"biter\",\"bites\",\"bitos\",\"bitou\",\"bitsy\",\"bitte\",\"bitts\",\"bivia\",\"bivvy\",\"bizes\",\"bizzo\",\"bizzy\",\"blabs\",\"blads\",\"blady\",\"blaer\",\"blaes\",\"blaff\",\"blags\",\"blahs\",\"blain\",\"blams\",\"blart\",\"blase\",\"blash\",\"blate\",\"blats\",\"blatt\",\"blaud\",\"blawn\",\"blaws\",\"blays\",\"blear\",\"blebs\",\"blech\",\"blees\",\"blent\",\"blert\",\"blest\",\"blets\",\"bleys\",\"blimy\",\"bling\",\"blini\",\"blins\",\"bliny\",\"blips\",\"blist\",\"blite\",\"blits\",\"blive\",\"blobs\",\"blocs\",\"blogs\",\"blook\",\"bloop\",\"blore\",\"blots\",\"blows\",\"blowy\",\"blubs\",\"blude\",\"bluds\",\"bludy\",\"blued\",\"blues\",\"bluet\",\"bluey\",\"bluid\",\"blume\",\"blunk\",\"blurs\",\"blype\",\"boabs\",\"boaks\",\"boars\",\"boart\",\"boats\",\"bobac\",\"bobak\",\"bobas\",\"bobol\",\"bobos\",\"bocca\",\"bocce\",\"bocci\",\"boche\",\"bocks\",\"boded\",\"bodes\",\"bodge\",\"bodhi\",\"bodle\",\"boeps\",\"boets\",\"boeuf\",\"boffo\",\"boffs\",\"bogan\",\"bogey\",\"boggy\",\"bogie\",\"bogle\",\"bogue\",\"bogus\",\"bohea\",\"bohos\",\"boils\",\"boing\",\"boink\",\"boite\",\"boked\",\"bokeh\",\"bokes\",\"bokos\",\"bolar\",\"bolas\",\"bolds\",\"boles\",\"bolix\",\"bolls\",\"bolos\",\"bolts\",\"bolus\",\"bomas\",\"bombe\",\"bombo\",\"bombs\",\"bonce\",\"bonds\",\"boned\",\"boner\",\"bones\",\"bongs\",\"bonie\",\"bonks\",\"bonne\",\"bonny\",\"bonza\",\"bonze\",\"booai\",\"booay\",\"boobs\",\"boody\",\"booed\",\"boofy\",\"boogy\",\"boohs\",\"books\",\"booky\",\"bools\",\"booms\",\"boomy\",\"boong\",\"boons\",\"boord\",\"boors\",\"boose\",\"boots\",\"boppy\",\"borak\",\"boral\",\"boras\",\"borde\",\"bords\",\"bored\",\"boree\",\"borel\",\"borer\",\"bores\",\"borgo\",\"boric\",\"borks\",\"borms\",\"borna\",\"boron\",\"borts\",\"borty\",\"bortz\",\"bosie\",\"bosks\",\"bosky\",\"boson\",\"bosun\",\"botas\",\"botel\",\"botes\",\"bothy\",\"botte\",\"botts\",\"botty\",\"bouge\",\"bouks\",\"boult\",\"bouns\",\"bourd\",\"bourg\",\"bourn\",\"bouse\",\"bousy\",\"bouts\",\"bovid\",\"bowat\",\"bowed\",\"bower\",\"bowes\",\"bowet\",\"bowie\",\"bowls\",\"bowne\",\"bowrs\",\"bowse\",\"boxed\",\"boxen\",\"boxes\",\"boxla\",\"boxty\",\"boyar\",\"boyau\",\"boyed\",\"boyfs\",\"boygs\",\"boyla\",\"boyos\",\"boysy\",\"bozos\",\"braai\",\"brach\",\"brack\",\"bract\",\"brads\",\"braes\",\"brags\",\"brail\",\"braks\",\"braky\",\"brame\",\"brane\",\"brank\",\"brans\",\"brant\",\"brast\",\"brats\",\"brava\",\"bravi\",\"braws\",\"braxy\",\"brays\",\"braza\",\"braze\",\"bream\",\"brede\",\"breds\",\"breem\",\"breer\",\"brees\",\"breid\",\"breis\",\"breme\",\"brens\",\"brent\",\"brere\",\"brers\",\"breve\",\"brews\",\"breys\",\"brier\",\"bries\",\"brigs\",\"briki\",\"briks\",\"brill\",\"brims\",\"brins\",\"brios\",\"brise\",\"briss\",\"brith\",\"brits\",\"britt\",\"brize\",\"broch\",\"brock\",\"brods\",\"brogh\",\"brogs\",\"brome\",\"bromo\",\"bronc\",\"brond\",\r\n    \"brool\",\"broos\",\"brose\",\"brosy\",\"brows\",\"brugh\",\"bruin\",\"bruit\",\"brule\",\"brume\",\"brung\",\"brusk\",\"brust\",\"bruts\",\"buats\",\"buaze\",\"bubal\",\"bubas\",\"bubba\",\"bubbe\",\"bubby\",\"bubus\",\"buchu\",\"bucko\",\"bucks\",\"bucku\",\"budas\",\"budis\",\"budos\",\"buffa\",\"buffe\",\"buffi\",\"buffo\",\"buffs\",\"buffy\",\"bufos\",\"bufty\",\"buhls\",\"buhrs\",\"buiks\",\"buist\",\"bukes\",\"bulbs\",\"bulgy\",\"bulks\",\"bulla\",\"bulls\",\"bulse\",\"bumbo\",\"bumfs\",\"bumph\",\"bumps\",\"bumpy\",\"bunas\",\"bunce\",\"bunco\",\"bunde\",\"bundh\",\"bunds\",\"bundt\",\"bundu\",\"bundy\",\"bungs\",\"bungy\",\"bunia\",\"bunje\",\"bunjy\",\"bunko\",\"bunks\",\"bunns\",\"bunts\",\"bunty\",\"bunya\",\"buoys\",\"buppy\",\"buran\",\"buras\",\"burbs\",\"burds\",\"buret\",\"burfi\",\"burgh\",\"burgs\",\"burin\",\"burka\",\"burke\",\"burks\",\"burls\",\"burns\",\"buroo\",\"burps\",\"burqa\",\"burro\",\"burrs\",\"burry\",\"bursa\",\"burse\",\"busby\",\"buses\",\"busks\",\"busky\",\"bussu\",\"busti\",\"busts\",\"busty\",\"buteo\",\"butes\",\"butle\",\"butoh\",\"butts\",\"butty\",\"butut\",\"butyl\",\"buzzy\",\"bwana\",\"bwazi\",\"byded\",\"bydes\",\"byked\",\"bykes\",\"byres\",\"byrls\",\"byssi\",\"bytes\",\"byway\",\"caaed\",\"cabas\",\"caber\",\"cabob\",\"caboc\",\"cabre\",\"cacas\",\"cacks\",\"cacky\",\"cadee\",\"cades\",\"cadge\",\"cadgy\",\"cadie\",\"cadis\",\"cadre\",\"caeca\",\"caese\",\"cafes\",\"caffs\",\"caged\",\"cager\",\"cages\",\"cagot\",\"cahow\",\"caids\",\"cains\",\"caird\",\"cajon\",\"cajun\",\"caked\",\"cakes\",\"cakey\",\"calfs\",\"calid\",\"calif\",\"calix\",\"calks\",\"calla\",\"calls\",\"calms\",\"calmy\",\"calos\",\"calpa\",\"calps\",\"calve\",\"calyx\",\"caman\",\"camas\",\"cames\",\"camis\",\"camos\",\"campi\",\"campo\",\"camps\",\"campy\",\"camus\",\"caned\",\"caneh\",\"caner\",\"canes\",\"cangs\",\"canid\",\"canna\",\"canns\",\"canso\",\"canst\",\"canto\",\"cants\",\"canty\",\"capas\",\"caped\",\"capes\",\"capex\",\"caphs\",\"capiz\",\"caple\",\"capon\",\"capos\",\"capot\",\"capri\",\"capul\",\"carap\",\"carbo\",\"carbs\",\"carby\",\"cardi\",\"cards\",\"cardy\",\"cared\",\"carer\",\"cares\",\"caret\",\"carex\",\"carks\",\"carle\",\"carls\",\"carns\",\"carny\",\"carob\",\"carom\",\"caron\",\"carpi\",\"carps\",\"carrs\",\"carse\",\"carta\",\"carte\",\"carts\",\"carvy\",\"casas\",\"casco\",\"cased\",\"cases\",\"casks\",\"casky\",\"casts\",\"casus\",\"cates\",\"cauda\",\"cauks\",\"cauld\",\"cauls\",\"caums\",\"caups\",\"cauri\",\"causa\",\"cavas\",\"caved\",\"cavel\",\"caver\",\"caves\",\"cavie\",\"cawed\",\"cawks\",\"caxon\",\"ceaze\",\"cebid\",\"cecal\",\"cecum\",\"ceded\",\"ceder\",\"cedes\",\"cedis\",\"ceiba\",\"ceili\",\"ceils\",\"celeb\",\"cella\",\"celli\",\"cells\",\"celom\",\"celts\",\"cense\",\"cento\",\"cents\",\"centu\",\"ceorl\",\"cepes\",\"cerci\",\"cered\",\"ceres\",\"cerge\",\"ceria\",\"ceric\",\"cerne\",\"ceroc\",\"ceros\",\"certs\",\"certy\",\"cesse\",\"cesta\",\"cesti\",\"cetes\",\"cetyl\",\"cezve\",\"chace\",\"chack\",\"chaco\",\"chado\",\"chads\",\"chaft\",\"chais\",\"chals\",\"chams\",\"chana\",\"chang\",\"chank\",\"chape\",\"chaps\",\"chapt\",\"chara\",\"chare\",\"chark\",\"charr\",\"chars\",\"chary\",\"chats\",\"chave\",\"chavs\",\"chawk\",\"chaws\",\"chaya\",\"chays\",\"cheep\",\"chefs\",\"cheka\",\"chela\",\"chelp\",\"chemo\",\"chems\",\"chere\",\"chert\",\"cheth\",\"chevy\",\"chews\",\"chewy\",\"chiao\",\"chias\",\"chibs\",\"chica\",\"chich\",\"chico\",\"chics\",\"chiel\",\"chiks\",\"chile\",\"chimb\",\"chimo\",\"chimp\",\"chine\",\"ching\",\"chink\",\"chino\",\"chins\",\"chips\",\"chirk\",\"chirl\",\"chirm\",\"chiro\",\"chirr\",\"chirt\",\"chiru\",\"chits\",\"chive\",\"chivs\",\"chivy\",\"chizz\",\"choco\",\"chocs\",\"chode\",\"chogs\",\"choil\",\"choko\",\"choky\",\"chola\",\"choli\",\"cholo\",\"chomp\",\"chons\",\"choof\",\"chook\",\"choom\",\"choon\",\"chops\",\"chota\",\"chott\",\"chout\",\"choux\",\"chowk\",\"chows\",\"chubs\",\"chufa\",\"chuff\",\"chugs\",\"chums\",\"churl\",\"churr\",\"chuse\",\"chuts\",\"chyle\",\"chyme\",\"chynd\",\"cibol\",\"cided\",\"cides\",\"ciels\",\"ciggy\",\"cilia\",\"cills\",\"cimar\",\"cimex\",\"cinct\",\"cines\",\"cinqs\",\"cions\",\"cippi\",\"circs\",\"cires\",\"cirls\",\"cirri\",\"cisco\",\"cissy\",\"cists\",\"cital\",\"cited\",\"citer\",\"cites\",\"cives\",\"civet\",\"civie\",\"civvy\",\"clach\",\"clade\",\"clads\",\"claes\",\"clags\",\"clame\",\"clams\",\"clans\",\"claps\",\"clapt\",\"claro\",\"clart\",\"clary\",\"clast\",\"clats\",\"claut\",\"clave\",\"clavi\",\"claws\",\"clays\",\"cleck\",\"cleek\",\"cleep\",\"clefs\",\"clegs\",\"cleik\",\"clems\",\"clepe\",\"clept\",\"cleve\",\"clews\",\"clied\",\"clies\",\"clift\",\"clime\",\"cline\",\"clint\",\"clipe\",\"clips\",\"clipt\",\"clits\",\"cloam\",\"clods\",\"cloff\",\"clogs\",\"cloke\",\"clomb\",\"clomp\",\"clonk\",\"clons\",\"cloop\",\"cloot\",\"clops\",\"clote\",\"clots\",\"clour\",\"clous\",\"clows\",\"cloye\",\"cloys\",\"cloze\",\"clubs\",\"clues\",\"cluey\",\"clunk\",\"clype\",\"cnida\",\"coact\",\"coady\",\"coala\",\"coals\",\"coaly\",\"coapt\",\"coarb\",\"coate\",\"coati\",\"coats\",\"cobbs\",\"cobby\",\"cobia\",\"coble\",\"cobza\",\"cocas\",\"cocci\",\"cocco\",\"cocks\",\"cocky\",\"cocos\",\"codas\",\"codec\",\"coded\",\"coden\",\"coder\",\"codes\",\"codex\",\"codon\",\"coeds\",\"coffs\",\"cogie\",\"cogon\",\"cogue\",\"cohab\",\"cohen\",\"cohoe\",\"cohog\",\"cohos\",\"coifs\",\"coign\",\"coils\",\"coins\",\"coirs\",\"coits\",\"coked\",\"cokes\",\"colas\",\"colby\",\"colds\",\"coled\",\"coles\",\"coley\",\"colic\",\"colin\",\"colls\",\"colly\",\"colog\",\"colts\",\"colza\",\"comae\",\"comal\",\"comas\",\"combe\",\"combi\",\"combo\",\"combs\",\"comby\",\"comer\",\"comes\",\"comix\",\"commo\",\"comms\",\"commy\",\"compo\",\"comps\",\"compt\",\"comte\",\"comus\",\"coned\",\"cones\",\"coney\",\"confs\",\"conga\",\"conge\",\"congo\",\"conia\",\"conin\",\"conks\",\"conky\",\"conne\",\"conns\",\"conte\",\"conto\",\"conus\",\"convo\",\"cooch\",\"cooed\",\"cooee\",\"cooer\",\r\n    \"cooey\",\"coofs\",\"cooks\",\"cooky\",\"cools\",\"cooly\",\"coomb\",\"cooms\",\"coomy\",\"coons\",\"coops\",\"coopt\",\"coost\",\"coots\",\"cooze\",\"copal\",\"copay\",\"coped\",\"copen\",\"coper\",\"copes\",\"coppy\",\"copra\",\"copsy\",\"coqui\",\"coram\",\"corbe\",\"corby\",\"cords\",\"cored\",\"cores\",\"corey\",\"corgi\",\"coria\",\"corks\",\"corky\",\"corms\",\"corni\",\"corno\",\"corns\",\"cornu\",\"corps\",\"corse\",\"corso\",\"cosec\",\"cosed\",\"coses\",\"coset\",\"cosey\",\"cosie\",\"costa\",\"coste\",\"costs\",\"cotan\",\"coted\",\"cotes\",\"coths\",\"cotta\",\"cotts\",\"coude\",\"coups\",\"courb\",\"courd\",\"coure\",\"cours\",\"couta\",\"couth\",\"coved\",\"coves\",\"covin\",\"cowal\",\"cowan\",\"cowed\",\"cowks\",\"cowls\",\"cowps\",\"cowry\",\"coxae\",\"coxal\",\"coxed\",\"coxes\",\"coxib\",\"coyau\",\"coyed\",\"coyer\",\"coypu\",\"cozed\",\"cozen\",\"cozes\",\"cozey\",\"cozie\",\"craal\",\"crabs\",\"crags\",\"craic\",\"craig\",\"crake\",\"crame\",\"crams\",\"crans\",\"crape\",\"craps\",\"crapy\",\"crare\",\"craws\",\"crays\",\"creds\",\"creel\",\"crees\",\"crems\",\"crena\",\"creps\",\"crepy\",\"crewe\",\"crews\",\"crias\",\"cribs\",\"cries\",\"crims\",\"crine\",\"crios\",\"cripe\",\"crips\",\"crise\",\"crith\",\"crits\",\"croci\",\"crocs\",\"croft\",\"crogs\",\"cromb\",\"crome\",\"cronk\",\"crons\",\"crool\",\"croon\",\"crops\",\"crore\",\"crost\",\"crout\",\"crows\",\"croze\",\"cruck\",\"crudo\",\"cruds\",\"crudy\",\"crues\",\"cruet\",\"cruft\",\"crunk\",\"cruor\",\"crura\",\"cruse\",\"crusy\",\"cruve\",\"crwth\",\"cryer\",\"ctene\",\"cubby\",\"cubeb\",\"cubed\",\"cuber\",\"cubes\",\"cubit\",\"cuddy\",\"cuffo\",\"cuffs\",\"cuifs\",\"cuing\",\"cuish\",\"cuits\",\"cukes\",\"culch\",\"culet\",\"culex\",\"culls\",\"cully\",\"culms\",\"culpa\",\"culti\",\"cults\",\"culty\",\"cumec\",\"cundy\",\"cunei\",\"cunit\",\"cunts\",\"cupel\",\"cupid\",\"cuppa\",\"cuppy\",\"curat\",\"curbs\",\"curch\",\"curds\",\"curdy\",\"cured\",\"curer\",\"cures\",\"curet\",\"curfs\",\"curia\",\"curie\",\"curli\",\"curls\",\"curns\",\"curny\",\"currs\",\"cursi\",\"curst\",\"cusec\",\"cushy\",\"cusks\",\"cusps\",\"cuspy\",\"cusso\",\"cusum\",\"cutch\",\"cuter\",\"cutes\",\"cutey\",\"cutin\",\"cutis\",\"cutto\",\"cutty\",\"cutup\",\"cuvee\",\"cuzes\",\"cwtch\",\"cyano\",\"cyans\",\"cycad\",\"cycas\",\"cyclo\",\"cyder\",\"cylix\",\"cymae\",\"cymar\",\"cymas\",\"cymes\",\"cymol\",\"cysts\",\"cytes\",\"cyton\",\"czars\",\"daals\",\"dabba\",\"daces\",\"dacha\",\"dacks\",\"dadah\",\"dadas\",\"dados\",\"daffs\",\"daffy\",\"dagga\",\"daggy\",\"dagos\",\"dahls\",\"daiko\",\"daine\",\"daint\",\"daker\",\"daled\",\"dales\",\"dalis\",\"dalle\",\"dalts\",\"daman\",\"damar\",\"dames\",\"damme\",\"damns\",\"damps\",\"dampy\",\"dancy\",\"dangs\",\"danio\",\"danks\",\"danny\",\"dants\",\"daraf\",\"darbs\",\"darcy\",\"dared\",\"darer\",\"dares\",\"darga\",\"dargs\",\"daric\",\"daris\",\"darks\",\"darky\",\"darns\",\"darre\",\"darts\",\"darzi\",\"dashi\",\"dashy\",\"datal\",\"dated\",\"dater\",\"dates\",\"datos\",\"datto\",\"daube\",\"daubs\",\"dauby\",\"dauds\",\"dault\",\"daurs\",\"dauts\",\"daven\",\"davit\",\"dawah\",\"dawds\",\"dawed\",\"dawen\",\"dawks\",\"dawns\",\"dawts\",\"dayan\",\"daych\",\"daynt\",\"dazed\",\"dazer\",\"dazes\",\"deads\",\"deair\",\"deals\",\"deans\",\"deare\",\"dearn\",\"dears\",\"deary\",\"deash\",\"deave\",\"deaws\",\"deawy\",\"debag\",\"debby\",\"debel\",\"debes\",\"debts\",\"debud\",\"debur\",\"debus\",\"debye\",\"decad\",\"decaf\",\"decan\",\"decko\",\"decks\",\"decos\",\"dedal\",\"deeds\",\"deedy\",\"deely\",\"deems\",\"deens\",\"deeps\",\"deere\",\"deers\",\"deets\",\"deeve\",\"deevs\",\"defat\",\"deffo\",\"defis\",\"defog\",\"degas\",\"degum\",\"degus\",\"deice\",\"deids\",\"deify\",\"deils\",\"deism\",\"deist\",\"deked\",\"dekes\",\"dekko\",\"deled\",\"deles\",\"delfs\",\"delft\",\"delis\",\"dells\",\"delly\",\"delos\",\"delph\",\"delts\",\"deman\",\"demes\",\"demic\",\"demit\",\"demob\",\"demoi\",\"demos\",\"dempt\",\"denar\",\"denay\",\"dench\",\"denes\",\"denet\",\"denis\",\"dents\",\"deoxy\",\"derat\",\"deray\",\"dered\",\"deres\",\"derig\",\"derma\",\"derms\",\"derns\",\"derny\",\"deros\",\"derro\",\"derry\",\"derth\",\"dervs\",\"desex\",\"deshi\",\"desis\",\"desks\",\"desse\",\"devas\",\"devel\",\"devis\",\"devon\",\"devos\",\"devot\",\"dewan\",\"dewar\",\"dewax\",\"dewed\",\"dexes\",\"dexie\",\"dhaba\",\"dhaks\",\"dhals\",\"dhikr\",\"dhobi\",\"dhole\",\"dholl\",\"dhols\",\"dhoti\",\"dhows\",\"dhuti\",\"diact\",\"dials\",\"diane\",\"diazo\",\"dibbs\",\"diced\",\"dicer\",\"dices\",\"dicht\",\"dicks\",\"dicky\",\"dicot\",\"dicta\",\"dicts\",\"dicty\",\"diddy\",\"didie\",\"didos\",\"didst\",\"diebs\",\"diels\",\"diene\",\"diets\",\"diffs\",\"dight\",\"dikas\",\"diked\",\"diker\",\"dikes\",\"dikey\",\"dildo\",\"dilli\",\"dills\",\"dimbo\",\"dimer\",\"dimes\",\"dimps\",\"dinar\",\"dined\",\"dines\",\"dinge\",\"dings\",\"dinic\",\"dinks\",\"dinky\",\"dinna\",\"dinos\",\"dints\",\"diols\",\"diota\",\"dippy\",\"dipso\",\"diram\",\"direr\",\"dirke\",\"dirks\",\"dirls\",\"dirts\",\"disas\",\"disci\",\"discs\",\"dishy\",\"disks\",\"disme\",\"dital\",\"ditas\",\"dited\",\"dites\",\"ditsy\",\"ditts\",\"ditzy\",\"divan\",\"divas\",\"dived\",\"dives\",\"divis\",\"divna\",\"divos\",\"divot\",\"divvy\",\"diwan\",\"dixie\",\"dixit\",\"diyas\",\"dizen\",\"djinn\",\"djins\",\"doabs\",\"doats\",\"dobby\",\"dobes\",\"dobie\",\"dobla\",\"dobra\",\"dobro\",\"docht\",\"docks\",\"docos\",\"docus\",\"doddy\",\"dodos\",\"doeks\",\"doers\",\"doest\",\"doeth\",\"doffs\",\"dogan\",\"doges\",\"dogey\",\"doggo\",\"doggy\",\"dogie\",\"dohyo\",\"doilt\",\"doily\",\"doits\",\"dojos\",\"dolce\",\"dolci\",\"doled\",\"doles\",\"dolia\",\"dolls\",\"dolma\",\"dolor\",\"dolos\",\"dolts\",\"domal\",\"domed\",\"domes\",\"domic\",\"donah\",\"donas\",\"donee\",\"doner\",\"donga\",\"dongs\",\"donko\",\"donna\",\"donne\",\"donny\",\"donsy\",\"doobs\",\"dooce\",\"doody\",\"dooks\",\"doole\",\"dools\",\"dooly\",\"dooms\",\"doomy\",\"doona\",\"doorn\",\"doors\",\r\n    \"doozy\",\"dopas\",\"doped\",\"doper\",\"dopes\",\"dorad\",\"dorba\",\"dorbs\",\"doree\",\"dores\",\"doric\",\"doris\",\"dorks\",\"dorky\",\"dorms\",\"dormy\",\"dorps\",\"dorrs\",\"dorsa\",\"dorse\",\"dorts\",\"dorty\",\"dosai\",\"dosas\",\"dosed\",\"doseh\",\"doser\",\"doses\",\"dosha\",\"dotal\",\"doted\",\"doter\",\"dotes\",\"dotty\",\"douar\",\"douce\",\"doucs\",\"douks\",\"doula\",\"douma\",\"doums\",\"doups\",\"doura\",\"douse\",\"douts\",\"doved\",\"doven\",\"dover\",\"doves\",\"dovie\",\"dowar\",\"dowds\",\"dowed\",\"dower\",\"dowie\",\"dowle\",\"dowls\",\"dowly\",\"downa\",\"downs\",\"dowps\",\"dowse\",\"dowts\",\"doxed\",\"doxes\",\"doxie\",\"doyen\",\"doyly\",\"dozed\",\"dozer\",\"dozes\",\"drabs\",\"drack\",\"draco\",\"draff\",\"drags\",\"drail\",\"drams\",\"drant\",\"draps\",\"drats\",\"drave\",\"draws\",\"drays\",\"drear\",\"dreck\",\"dreed\",\"dreer\",\"drees\",\"dregs\",\"dreks\",\"drent\",\"drere\",\"drest\",\"dreys\",\"dribs\",\"drice\",\"dries\",\"drily\",\"drips\",\"dript\",\"droid\",\"droil\",\"droke\",\"drole\",\"drome\",\"drony\",\"droob\",\"droog\",\"drook\",\"drops\",\"dropt\",\"drouk\",\"drows\",\"drubs\",\"drugs\",\"drums\",\"drupe\",\"druse\",\"drusy\",\"druxy\",\"dryad\",\"dryas\",\"dsobo\",\"dsomo\",\"duads\",\"duals\",\"duans\",\"duars\",\"dubbo\",\"ducal\",\"ducat\",\"duces\",\"ducks\",\"ducky\",\"ducts\",\"duddy\",\"duded\",\"dudes\",\"duels\",\"duets\",\"duett\",\"duffs\",\"dufus\",\"duing\",\"duits\",\"dukas\",\"duked\",\"dukes\",\"dukka\",\"dulce\",\"dules\",\"dulia\",\"dulls\",\"dulse\",\"dumas\",\"dumbo\",\"dumbs\",\"dumka\",\"dumky\",\"dumps\",\"dunam\",\"dunch\",\"dunes\",\"dungs\",\"dungy\",\"dunks\",\"dunno\",\"dunny\",\"dunsh\",\"dunts\",\"duomi\",\"duomo\",\"duped\",\"duper\",\"dupes\",\"duple\",\"duply\",\"duppy\",\"dural\",\"duras\",\"dured\",\"dures\",\"durgy\",\"durns\",\"duroc\",\"duros\",\"duroy\",\"durra\",\"durrs\",\"durry\",\"durst\",\"durum\",\"durzi\",\"dusks\",\"dusts\",\"duxes\",\"dwaal\",\"dwale\",\"dwalm\",\"dwams\",\"dwang\",\"dwaum\",\"dweeb\",\"dwile\",\"dwine\",\"dyads\",\"dyers\",\"dyked\",\"dykes\",\"dykey\",\"dykon\",\"dynel\",\"dynes\",\"dzhos\",\"eagre\",\"ealed\",\"eales\",\"eaned\",\"eards\",\"eared\",\"earls\",\"earns\",\"earnt\",\"earst\",\"eased\",\"easer\",\"eases\",\"easle\",\"easts\",\"eathe\",\"eaved\",\"eaves\",\"ebbed\",\"ebbet\",\"ebons\",\"ebook\",\"ecads\",\"eched\",\"eches\",\"echos\",\"ecrus\",\"edema\",\"edged\",\"edger\",\"edges\",\"edile\",\"edits\",\"educe\",\"educt\",\"eejit\",\"eensy\",\"eeven\",\"eevns\",\"effed\",\"egads\",\"egers\",\"egest\",\"eggar\",\"egged\",\"egger\",\"egmas\",\"ehing\",\"eider\",\"eidos\",\"eigne\",\"eiked\",\"eikon\",\"eilds\",\"eisel\",\"ejido\",\"ekkas\",\"elain\",\"eland\",\"elans\",\"elchi\",\"eldin\",\"elemi\",\"elfed\",\"eliad\",\"elint\",\"elmen\",\"eloge\",\"elogy\",\"eloin\",\"elops\",\"elpee\",\"elsin\",\"elute\",\"elvan\",\"elven\",\"elver\",\"elves\",\"emacs\",\"embar\",\"embay\",\"embog\",\"embow\",\"embox\",\"embus\",\"emeer\",\"emend\",\"emerg\",\"emery\",\"emeus\",\"emics\",\"emirs\",\"emits\",\"emmas\",\"emmer\",\"emmet\",\"emmew\",\"emmys\",\"emoji\",\"emong\",\"emote\",\"emove\",\"empts\",\"emule\",\"emure\",\"emyde\",\"emyds\",\"enarm\",\"enate\",\"ended\",\"ender\",\"endew\",\"endue\",\"enews\",\"enfix\",\"eniac\",\"enlit\",\"enmew\",\"ennog\",\"enoki\",\"enols\",\"enorm\",\"enows\",\"enrol\",\"ensew\",\"ensky\",\"entia\",\"enure\",\"enurn\",\"envoi\",\"enzym\",\"eorls\",\"eosin\",\"epact\",\"epees\",\"ephah\",\"ephas\",\"ephod\",\"ephor\",\"epics\",\"epode\",\"epopt\",\"epris\",\"eques\",\"equid\",\"erbia\",\"erevs\",\"ergon\",\"ergos\",\"ergot\",\"erhus\",\"erica\",\"erick\",\"erics\",\"ering\",\"erned\",\"ernes\",\"erose\",\"erred\",\"erses\",\"eruct\",\"erugo\",\"eruvs\",\"erven\",\"ervil\",\"escar\",\"escot\",\"esile\",\"eskar\",\"esker\",\"esnes\",\"esses\",\"estoc\",\"estop\",\"estro\",\"etage\",\"etape\",\"etats\",\"etens\",\"ethal\",\"ethne\",\"ethyl\",\"etics\",\"etnas\",\"ettin\",\"ettle\",\"etuis\",\"etwee\",\"etyma\",\"eughs\",\"euked\",\"eupad\",\"euros\",\"eusol\",\"evens\",\"evert\",\"evets\",\"evhoe\",\"evils\",\"evite\",\"evohe\",\"ewers\",\"ewest\",\"ewhow\",\"ewked\",\"exams\",\"exeat\",\"execs\",\"exeem\",\"exeme\",\"exfil\",\"exies\",\"exine\",\"exing\",\"exits\",\"exode\",\"exome\",\"exons\",\"expat\",\"expos\",\"exude\",\"exuls\",\"exurb\",\"eyass\",\"eyers\",\"eyots\",\"eyras\",\"eyres\",\"eyrie\",\"eyrir\",\"ezine\",\"fabby\",\"faced\",\"facer\",\"faces\",\"facia\",\"facta\",\"facts\",\"faddy\",\"faded\",\"fader\",\"fades\",\"fadge\",\"fados\",\"faena\",\"faery\",\"faffs\",\"faffy\",\"faggy\",\"fagin\",\"fagot\",\"faiks\",\"fails\",\"faine\",\"fains\",\"fairs\",\"faked\",\"faker\",\"fakes\",\"fakey\",\"fakie\",\"fakir\",\"falaj\",\"falls\",\"famed\",\"fames\",\"fanal\",\"fands\",\"fanes\",\"fanga\",\"fango\",\"fangs\",\"fanks\",\"fanon\",\"fanos\",\"fanum\",\"faqir\",\"farad\",\"farci\",\"farcy\",\"fards\",\"fared\",\"farer\",\"fares\",\"farle\",\"farls\",\"farms\",\"faros\",\"farro\",\"farse\",\"farts\",\"fasci\",\"fasti\",\"fasts\",\"fated\",\"fates\",\"fatly\",\"fatso\",\"fatwa\",\"faugh\",\"fauld\",\"fauns\",\"faurd\",\"fauts\",\"fauve\",\"favas\",\"favel\",\"faver\",\"faves\",\"favus\",\"fawns\",\"fawny\",\"faxed\",\"faxes\",\"fayed\",\"fayer\",\"fayne\",\"fayre\",\"fazed\",\"fazes\",\"feals\",\"feare\",\"fears\",\"feart\",\"fease\",\"feats\",\"feaze\",\"feces\",\"fecht\",\"fecit\",\"fecks\",\"fedex\",\"feebs\",\"feeds\",\"feels\",\"feens\",\"feers\",\"feese\",\"feeze\",\"fehme\",\"feint\",\"feist\",\"felch\",\"felid\",\"fells\",\"felly\",\"felts\",\"felty\",\"femal\",\"femes\",\"femmy\",\"fends\",\"fendy\",\"fenis\",\"fenks\",\"fenny\",\"fents\",\"feods\",\"feoff\",\"ferer\",\"feres\",\"feria\",\"ferly\",\"fermi\",\"ferms\",\"ferns\",\"ferny\",\"fesse\",\"festa\",\"fests\",\"festy\",\"fetas\",\"feted\",\"fetes\",\"fetor\",\"fetta\",\"fetts\",\"fetwa\",\"feuar\",\"feuds\",\"feued\",\"feyed\",\"feyer\",\"feyly\",\"fezes\",\"fezzy\",\"fiars\",\"fiats\",\"fibro\",\r\n    \"fices\",\"fiche\",\"fichu\",\"ficin\",\"ficos\",\"fides\",\"fidge\",\"fidos\",\"fiefs\",\"fient\",\"fiere\",\"fiers\",\"fiest\",\"fifed\",\"fifer\",\"fifes\",\"fifis\",\"figgy\",\"figos\",\"fiked\",\"fikes\",\"filar\",\"filch\",\"filed\",\"files\",\"filii\",\"filks\",\"fille\",\"fillo\",\"fills\",\"filmi\",\"films\",\"filos\",\"filum\",\"finca\",\"finds\",\"fined\",\"fines\",\"finis\",\"finks\",\"finny\",\"finos\",\"fiord\",\"fiqhs\",\"fique\",\"fired\",\"firer\",\"fires\",\"firie\",\"firks\",\"firms\",\"firns\",\"firry\",\"firth\",\"fiscs\",\"fisks\",\"fists\",\"fisty\",\"fitch\",\"fitly\",\"fitna\",\"fitte\",\"fitts\",\"fiver\",\"fives\",\"fixed\",\"fixes\",\"fixit\",\"fjeld\",\"flabs\",\"flaff\",\"flags\",\"flaks\",\"flamm\",\"flams\",\"flamy\",\"flane\",\"flans\",\"flaps\",\"flary\",\"flats\",\"flava\",\"flawn\",\"flaws\",\"flawy\",\"flaxy\",\"flays\",\"fleam\",\"fleas\",\"fleek\",\"fleer\",\"flees\",\"flegs\",\"fleme\",\"fleur\",\"flews\",\"flexi\",\"flexo\",\"fleys\",\"flics\",\"flied\",\"flies\",\"flimp\",\"flims\",\"flips\",\"flirs\",\"flisk\",\"flite\",\"flits\",\"flitt\",\"flobs\",\"flocs\",\"floes\",\"flogs\",\"flong\",\"flops\",\"flors\",\"flory\",\"flosh\",\"flota\",\"flote\",\"flows\",\"flubs\",\"flued\",\"flues\",\"fluey\",\"fluky\",\"flump\",\"fluor\",\"flurr\",\"fluty\",\"fluyt\",\"flyby\",\"flype\",\"flyte\",\"foals\",\"foams\",\"foehn\",\"fogey\",\"fogie\",\"fogle\",\"fogou\",\"fohns\",\"foids\",\"foils\",\"foins\",\"folds\",\"foley\",\"folia\",\"folic\",\"folie\",\"folks\",\"folky\",\"fomes\",\"fonda\",\"fonds\",\"fondu\",\"fones\",\"fonly\",\"fonts\",\"foods\",\"foody\",\"fools\",\"foots\",\"footy\",\"foram\",\"forbs\",\"forby\",\"fordo\",\"fords\",\"forel\",\"fores\",\"forex\",\"forks\",\"forky\",\"forme\",\"forms\",\"forts\",\"forza\",\"forze\",\"fossa\",\"fosse\",\"fouat\",\"fouds\",\"fouer\",\"fouet\",\"foule\",\"fouls\",\"fount\",\"fours\",\"fouth\",\"fovea\",\"fowls\",\"fowth\",\"foxed\",\"foxes\",\"foxie\",\"foyle\",\"foyne\",\"frabs\",\"frack\",\"fract\",\"frags\",\"fraim\",\"franc\",\"frape\",\"fraps\",\"frass\",\"frate\",\"frati\",\"frats\",\"fraus\",\"frays\",\"frees\",\"freet\",\"freit\",\"fremd\",\"frena\",\"freon\",\"frere\",\"frets\",\"fribs\",\"frier\",\"fries\",\"frigs\",\"frise\",\"frist\",\"frith\",\"frits\",\"fritt\",\"frize\",\"frizz\",\"froes\",\"frogs\",\"frons\",\"frore\",\"frorn\",\"frory\",\"frosh\",\"frows\",\"frowy\",\"frugs\",\"frump\",\"frush\",\"frust\",\"fryer\",\"fubar\",\"fubby\",\"fubsy\",\"fucks\",\"fucus\",\"fuddy\",\"fudgy\",\"fuels\",\"fuero\",\"fuffs\",\"fuffy\",\"fugal\",\"fuggy\",\"fugie\",\"fugio\",\"fugle\",\"fugly\",\"fugus\",\"fujis\",\"fulls\",\"fumed\",\"fumer\",\"fumes\",\"fumet\",\"fundi\",\"funds\",\"fundy\",\"fungo\",\"fungs\",\"funks\",\"fural\",\"furan\",\"furca\",\"furls\",\"furol\",\"furrs\",\"furth\",\"furze\",\"furzy\",\"fused\",\"fusee\",\"fusel\",\"fuses\",\"fusil\",\"fusks\",\"fusts\",\"fusty\",\"futon\",\"fuzed\",\"fuzee\",\"fuzes\",\"fuzil\",\"fyces\",\"fyked\",\"fykes\",\"fyles\",\"fyrds\",\"fytte\",\"gabba\",\"gabby\",\"gable\",\"gaddi\",\"gades\",\"gadge\",\"gadid\",\"gadis\",\"gadje\",\"gadjo\",\"gadso\",\"gaffs\",\"gaged\",\"gager\",\"gages\",\"gaids\",\"gains\",\"gairs\",\"gaita\",\"gaits\",\"gaitt\",\"gajos\",\"galah\",\"galas\",\"galax\",\"galea\",\"galed\",\"gales\",\"galls\",\"gally\",\"galop\",\"galut\",\"galvo\",\"gamas\",\"gamay\",\"gamba\",\"gambe\",\"gambo\",\"gambs\",\"gamed\",\"games\",\"gamey\",\"gamic\",\"gamin\",\"gamme\",\"gammy\",\"gamps\",\"ganch\",\"gandy\",\"ganef\",\"ganev\",\"gangs\",\"ganja\",\"ganof\",\"gants\",\"gaols\",\"gaped\",\"gaper\",\"gapes\",\"gapos\",\"gappy\",\"garbe\",\"garbo\",\"garbs\",\"garda\",\"gares\",\"garis\",\"garms\",\"garni\",\"garre\",\"garth\",\"garum\",\"gases\",\"gasps\",\"gaspy\",\"gasts\",\"gatch\",\"gated\",\"gater\",\"gates\",\"gaths\",\"gator\",\"gauch\",\"gaucy\",\"gauds\",\"gauje\",\"gault\",\"gaums\",\"gaumy\",\"gaups\",\"gaurs\",\"gauss\",\"gauzy\",\"gavot\",\"gawcy\",\"gawds\",\"gawks\",\"gawps\",\"gawsy\",\"gayal\",\"gazal\",\"gazar\",\"gazed\",\"gazes\",\"gazon\",\"gazoo\",\"geals\",\"geans\",\"geare\",\"gears\",\"geats\",\"gebur\",\"gecks\",\"geeks\",\"geeps\",\"geest\",\"geist\",\"geits\",\"gelds\",\"gelee\",\"gelid\",\"gelly\",\"gelts\",\"gemel\",\"gemma\",\"gemmy\",\"gemot\",\"genal\",\"genas\",\"genes\",\"genet\",\"genic\",\"genii\",\"genip\",\"genny\",\"genoa\",\"genom\",\"genro\",\"gents\",\"genty\",\"genua\",\"genus\",\"geode\",\"geoid\",\"gerah\",\"gerbe\",\"geres\",\"gerle\",\"germs\",\"germy\",\"gerne\",\"gesse\",\"gesso\",\"geste\",\"gests\",\"getas\",\"getup\",\"geums\",\"geyan\",\"geyer\",\"ghast\",\"ghats\",\"ghaut\",\"ghazi\",\"ghees\",\"ghest\",\"ghyll\",\"gibed\",\"gibel\",\"giber\",\"gibes\",\"gibli\",\"gibus\",\"gifts\",\"gigas\",\"gighe\",\"gigot\",\"gigue\",\"gilas\",\"gilds\",\"gilet\",\"gills\",\"gilly\",\"gilpy\",\"gilts\",\"gimel\",\"gimme\",\"gimps\",\"gimpy\",\"ginch\",\"ginge\",\"gings\",\"ginks\",\"ginny\",\"ginzo\",\"gipon\",\"gippo\",\"gippy\",\"girds\",\"girls\",\"girns\",\"giron\",\"giros\",\"girrs\",\"girsh\",\"girts\",\"gismo\",\"gisms\",\"gists\",\"gitch\",\"gites\",\"giust\",\"gived\",\"gives\",\"gizmo\",\"glace\",\"glads\",\"glady\",\"glaik\",\"glair\",\"glams\",\"glans\",\"glary\",\"glaum\",\"glaur\",\"glazy\",\"gleba\",\"glebe\",\"gleby\",\"glede\",\"gleds\",\"gleed\",\"gleek\",\"glees\",\"gleet\",\"gleis\",\"glens\",\"glent\",\"gleys\",\"glial\",\"glias\",\"glibs\",\"gliff\",\"glift\",\"glike\",\"glime\",\"glims\",\"glisk\",\"glits\",\"glitz\",\"gloam\",\"globi\",\"globs\",\"globy\",\"glode\",\"glogg\",\"gloms\",\"gloop\",\"glops\",\"glost\",\"glout\",\"glows\",\"gloze\",\"glued\",\"gluer\",\"glues\",\"gluey\",\"glugs\",\"glume\",\"glums\",\"gluon\",\"glute\",\"gluts\",\"gnarl\",\"gnarr\",\"gnars\",\"gnats\",\"gnawn\",\"gnaws\",\"gnows\",\"goads\",\"goafs\",\"goals\",\"goary\",\"goats\",\"goaty\",\"goban\",\"gobar\",\"gobbi\",\"gobbo\",\"gobby\",\"gobis\",\"gobos\",\"godet\",\"godso\",\"goels\",\"goers\",\"goest\",\"goeth\",\"goety\",\r\n    \"gofer\",\"goffs\",\"gogga\",\"gogos\",\"goier\",\"gojis\",\"golds\",\"goldy\",\"goles\",\"golfs\",\"golpe\",\"golps\",\"gombo\",\"gomer\",\"gompa\",\"gonch\",\"gonef\",\"gongs\",\"gonia\",\"gonif\",\"gonks\",\"gonna\",\"gonof\",\"gonys\",\"gonzo\",\"gooby\",\"goods\",\"goofs\",\"googs\",\"gooks\",\"gooky\",\"goold\",\"gools\",\"gooly\",\"goons\",\"goony\",\"goops\",\"goopy\",\"goors\",\"goory\",\"goosy\",\"gopak\",\"gopik\",\"goral\",\"goras\",\"gored\",\"gores\",\"goris\",\"gorms\",\"gormy\",\"gorps\",\"gorse\",\"gorsy\",\"gosht\",\"gosse\",\"gotch\",\"goths\",\"gothy\",\"gotta\",\"gouch\",\"gouks\",\"goura\",\"gouts\",\"gouty\",\"gowan\",\"gowds\",\"gowfs\",\"gowks\",\"gowls\",\"gowns\",\"goxes\",\"goyim\",\"goyle\",\"graal\",\"grabs\",\"grads\",\"graff\",\"graip\",\"grama\",\"grame\",\"gramp\",\"grams\",\"grana\",\"grans\",\"grapy\",\"gravs\",\"grays\",\"grebe\",\"grebo\",\"grece\",\"greek\",\"grees\",\"grege\",\"grego\",\"grein\",\"grens\",\"grese\",\"greve\",\"grews\",\"greys\",\"grice\",\"gride\",\"grids\",\"griff\",\"grift\",\"grigs\",\"grike\",\"grins\",\"griot\",\"grips\",\"gript\",\"gripy\",\"grise\",\"grist\",\"grisy\",\"grith\",\"grits\",\"grize\",\"groat\",\"grody\",\"grogs\",\"groks\",\"groma\",\"grone\",\"groof\",\"grosz\",\"grots\",\"grouf\",\"grovy\",\"grows\",\"grrls\",\"grrrl\",\"grubs\",\"grued\",\"grues\",\"grufe\",\"grume\",\"grump\",\"grund\",\"gryce\",\"gryde\",\"gryke\",\"grype\",\"grypt\",\"guaco\",\"guana\",\"guano\",\"guans\",\"guars\",\"gucks\",\"gucky\",\"gudes\",\"guffs\",\"gugas\",\"guids\",\"guimp\",\"guiro\",\"gulag\",\"gular\",\"gulas\",\"gules\",\"gulet\",\"gulfs\",\"gulfy\",\"gulls\",\"gulph\",\"gulps\",\"gulpy\",\"gumma\",\"gummi\",\"gumps\",\"gundy\",\"gunge\",\"gungy\",\"gunks\",\"gunky\",\"gunny\",\"guqin\",\"gurdy\",\"gurge\",\"gurls\",\"gurly\",\"gurns\",\"gurry\",\"gursh\",\"gurus\",\"gushy\",\"gusla\",\"gusle\",\"gusli\",\"gussy\",\"gusts\",\"gutsy\",\"gutta\",\"gutty\",\"guyed\",\"guyle\",\"guyot\",\"guyse\",\"gwine\",\"gyals\",\"gyans\",\"gybed\",\"gybes\",\"gyeld\",\"gymps\",\"gynae\",\"gynie\",\"gynny\",\"gynos\",\"gyoza\",\"gypos\",\"gyppo\",\"gyppy\",\"gyral\",\"gyred\",\"gyres\",\"gyron\",\"gyros\",\"gyrus\",\"gytes\",\"gyved\",\"gyves\",\"haafs\",\"haars\",\"hable\",\"habus\",\"hacek\",\"hacks\",\"hadal\",\"haded\",\"hades\",\"hadji\",\"hadst\",\"haems\",\"haets\",\"haffs\",\"hafiz\",\"hafts\",\"haggs\",\"hahas\",\"haick\",\"haika\",\"haiks\",\"haiku\",\"hails\",\"haily\",\"hains\",\"haint\",\"hairs\",\"haith\",\"hajes\",\"hajis\",\"hajji\",\"hakam\",\"hakas\",\"hakea\",\"hakes\",\"hakim\",\"hakus\",\"halal\",\"haled\",\"haler\",\"hales\",\"halfa\",\"halfs\",\"halid\",\"hallo\",\"halls\",\"halma\",\"halms\",\"halon\",\"halos\",\"halse\",\"halts\",\"halva\",\"halwa\",\"hamal\",\"hamba\",\"hamed\",\"hames\",\"hammy\",\"hamza\",\"hanap\",\"hance\",\"hanch\",\"hands\",\"hangi\",\"hangs\",\"hanks\",\"hanky\",\"hansa\",\"hanse\",\"hants\",\"haole\",\"haoma\",\"hapax\",\"haply\",\"happi\",\"hapus\",\"haram\",\"hards\",\"hared\",\"hares\",\"harim\",\"harks\",\"harls\",\"harms\",\"harns\",\"haros\",\"harps\",\"harts\",\"hashy\",\"hasks\",\"hasps\",\"hasta\",\"hated\",\"hates\",\"hatha\",\"hauds\",\"haufs\",\"haugh\",\"hauld\",\"haulm\",\"hauls\",\"hault\",\"hauns\",\"hause\",\"haver\",\"haves\",\"hawed\",\"hawks\",\"hawms\",\"hawse\",\"hayed\",\"hayer\",\"hayey\",\"hayle\",\"hazan\",\"hazed\",\"hazer\",\"hazes\",\"heads\",\"heald\",\"heals\",\"heame\",\"heaps\",\"heapy\",\"heare\",\"hears\",\"heast\",\"heats\",\"heben\",\"hebes\",\"hecht\",\"hecks\",\"heder\",\"hedgy\",\"heeds\",\"heedy\",\"heels\",\"heeze\",\"hefte\",\"hefts\",\"heids\",\"heigh\",\"heils\",\"heirs\",\"hejab\",\"hejra\",\"heled\",\"heles\",\"helio\",\"hells\",\"helms\",\"helos\",\"helot\",\"helps\",\"helve\",\"hemal\",\"hemes\",\"hemic\",\"hemin\",\"hemps\",\"hempy\",\"hench\",\"hends\",\"henge\",\"henna\",\"henny\",\"henry\",\"hents\",\"hepar\",\"herbs\",\"herby\",\"herds\",\"heres\",\"herls\",\"herma\",\"herms\",\"herns\",\"heros\",\"herry\",\"herse\",\"hertz\",\"herye\",\"hesps\",\"hests\",\"hetes\",\"heths\",\"heuch\",\"heugh\",\"hevea\",\"hewed\",\"hewer\",\"hewgh\",\"hexad\",\"hexed\",\"hexer\",\"hexes\",\"hexyl\",\"heyed\",\"hiant\",\"hicks\",\"hided\",\"hider\",\"hides\",\"hiems\",\"highs\",\"hight\",\"hijab\",\"hijra\",\"hiked\",\"hiker\",\"hikes\",\"hikoi\",\"hilar\",\"hilch\",\"hillo\",\"hills\",\"hilts\",\"hilum\",\"hilus\",\"himbo\",\"hinau\",\"hinds\",\"hings\",\"hinky\",\"hinny\",\"hints\",\"hiois\",\"hiply\",\"hired\",\"hiree\",\"hirer\",\"hires\",\"hissy\",\"hists\",\"hithe\",\"hived\",\"hiver\",\"hives\",\"hizen\",\"hoaed\",\"hoagy\",\"hoars\",\"hoary\",\"hoast\",\"hobos\",\"hocks\",\"hocus\",\"hodad\",\"hodja\",\"hoers\",\"hogan\",\"hogen\",\"hoggs\",\"hoghs\",\"hohed\",\"hoick\",\"hoied\",\"hoiks\",\"hoing\",\"hoise\",\"hokas\",\"hoked\",\"hokes\",\"hokey\",\"hokis\",\"hokku\",\"hokum\",\"holds\",\"holed\",\"holes\",\"holey\",\"holks\",\"holla\",\"hollo\",\"holme\",\"holms\",\"holon\",\"holos\",\"holts\",\"homas\",\"homed\",\"homes\",\"homey\",\"homie\",\"homme\",\"homos\",\"honan\",\"honda\",\"honds\",\"honed\",\"honer\",\"hones\",\"hongi\",\"hongs\",\"honks\",\"honky\",\"hooch\",\"hoods\",\"hoody\",\"hooey\",\"hoofs\",\"hooka\",\"hooks\",\"hooky\",\"hooly\",\"hoons\",\"hoops\",\"hoord\",\"hoors\",\"hoosh\",\"hoots\",\"hooty\",\"hoove\",\"hopak\",\"hoped\",\"hoper\",\"hopes\",\"hoppy\",\"horah\",\"horal\",\"horas\",\"horis\",\"horks\",\"horme\",\"horns\",\"horst\",\"horsy\",\"hosed\",\"hosel\",\"hosen\",\"hoser\",\"hoses\",\"hosey\",\"hosta\",\"hosts\",\"hotch\",\"hoten\",\"hotty\",\"houff\",\"houfs\",\"hough\",\"houri\",\"hours\",\"houts\",\"hovea\",\"hoved\",\"hoven\",\"hoves\",\"howbe\",\"howes\",\"howff\",\"howfs\",\"howks\",\"howls\",\"howre\",\"howso\",\"hoxed\",\"hoxes\",\"hoyas\",\"hoyed\",\"hoyle\",\"hubby\",\"hucks\",\"hudna\",\"hudud\",\"huers\",\"huffs\",\"huffy\",\"huger\",\"huggy\",\"huhus\",\"huias\",\"hulas\",\"hules\",\"hulks\",\"hulky\",\"hullo\",\"hulls\",\"hully\",\"humas\",\r\n    \"humfs\",\"humic\",\"humps\",\"humpy\",\"hunks\",\"hunts\",\"hurds\",\"hurls\",\"hurly\",\"hurra\",\"hurst\",\"hurts\",\"hushy\",\"husks\",\"husos\",\"hutia\",\"huzza\",\"huzzy\",\"hwyls\",\"hydra\",\"hyens\",\"hygge\",\"hying\",\"hykes\",\"hylas\",\"hyleg\",\"hyles\",\"hylic\",\"hymns\",\"hynde\",\"hyoid\",\"hyped\",\"hypes\",\"hypha\",\"hyphy\",\"hypos\",\"hyrax\",\"hyson\",\"hythe\",\"iambi\",\"iambs\",\"ibrik\",\"icers\",\"iched\",\"iches\",\"ichor\",\"icier\",\"icker\",\"ickle\",\"icons\",\"ictal\",\"ictic\",\"ictus\",\"idant\",\"ideas\",\"idees\",\"ident\",\"idled\",\"idles\",\"idola\",\"idols\",\"idyls\",\"iftar\",\"igapo\",\"igged\",\"iglus\",\"ihram\",\"ikans\",\"ikats\",\"ikons\",\"ileac\",\"ileal\",\"ileum\",\"ileus\",\"iliad\",\"ilial\",\"ilium\",\"iller\",\"illth\",\"imago\",\"imams\",\"imari\",\"imaum\",\"imbar\",\"imbed\",\"imide\",\"imido\",\"imids\",\"imine\",\"imino\",\"immew\",\"immit\",\"immix\",\"imped\",\"impis\",\"impot\",\"impro\",\"imshi\",\"imshy\",\"inapt\",\"inarm\",\"inbye\",\"incel\",\"incle\",\"incog\",\"incus\",\"incut\",\"indew\",\"india\",\"indie\",\"indol\",\"indow\",\"indri\",\"indue\",\"inerm\",\"infix\",\"infos\",\"infra\",\"ingan\",\"ingle\",\"inion\",\"inked\",\"inker\",\"inkle\",\"inned\",\"innit\",\"inorb\",\"inrun\",\"inset\",\"inspo\",\"intel\",\"intil\",\"intis\",\"intra\",\"inula\",\"inure\",\"inurn\",\"inust\",\"invar\",\"inwit\",\"iodic\",\"iodid\",\"iodin\",\"iotas\",\"ippon\",\"irade\",\"irids\",\"iring\",\"irked\",\"iroko\",\"irone\",\"irons\",\"isbas\",\"ishes\",\"isled\",\"isles\",\"isnae\",\"issei\",\"istle\",\"items\",\"ither\",\"ivied\",\"ivies\",\"ixias\",\"ixnay\",\"ixora\",\"ixtle\",\"izard\",\"izars\",\"izzat\",\"jaaps\",\"jabot\",\"jacal\",\"jacks\",\"jacky\",\"jaded\",\"jades\",\"jafas\",\"jaffa\",\"jagas\",\"jager\",\"jaggs\",\"jaggy\",\"jagir\",\"jagra\",\"jails\",\"jaker\",\"jakes\",\"jakey\",\"jalap\",\"jalop\",\"jambe\",\"jambo\",\"jambs\",\"jambu\",\"james\",\"jammy\",\"jamon\",\"janes\",\"janns\",\"janny\",\"janty\",\"japan\",\"japed\",\"japer\",\"japes\",\"jarks\",\"jarls\",\"jarps\",\"jarta\",\"jarul\",\"jasey\",\"jaspe\",\"jasps\",\"jatos\",\"jauks\",\"jaups\",\"javas\",\"javel\",\"jawan\",\"jawed\",\"jaxie\",\"jeans\",\"jeats\",\"jebel\",\"jedis\",\"jeels\",\"jeely\",\"jeeps\",\"jeers\",\"jeeze\",\"jefes\",\"jeffs\",\"jehad\",\"jehus\",\"jelab\",\"jello\",\"jells\",\"jembe\",\"jemmy\",\"jenny\",\"jeons\",\"jerid\",\"jerks\",\"jerry\",\"jesse\",\"jests\",\"jesus\",\"jetes\",\"jeton\",\"jeune\",\"jewed\",\"jewie\",\"jhala\",\"jiaos\",\"jibba\",\"jibbs\",\"jibed\",\"jiber\",\"jibes\",\"jiffs\",\"jiggy\",\"jigot\",\"jihad\",\"jills\",\"jilts\",\"jimmy\",\"jimpy\",\"jingo\",\"jinks\",\"jinne\",\"jinni\",\"jinns\",\"jirds\",\"jirga\",\"jirre\",\"jisms\",\"jived\",\"jiver\",\"jives\",\"jivey\",\"jnana\",\"jobed\",\"jobes\",\"jocko\",\"jocks\",\"jocky\",\"jocos\",\"jodel\",\"joeys\",\"johns\",\"joins\",\"joked\",\"jokes\",\"jokey\",\"jokol\",\"joled\",\"joles\",\"jolls\",\"jolts\",\"jolty\",\"jomon\",\"jomos\",\"jones\",\"jongs\",\"jonty\",\"jooks\",\"joram\",\"jorum\",\"jotas\",\"jotty\",\"jotun\",\"joual\",\"jougs\",\"jouks\",\"joule\",\"jours\",\"jowar\",\"jowed\",\"jowls\",\"jowly\",\"joyed\",\"jubas\",\"jubes\",\"jucos\",\"judas\",\"judgy\",\"judos\",\"jugal\",\"jugum\",\"jujus\",\"juked\",\"jukes\",\"jukus\",\"julep\",\"jumar\",\"jumby\",\"jumps\",\"junco\",\"junks\",\"junky\",\"jupes\",\"jupon\",\"jural\",\"jurat\",\"jurel\",\"jures\",\"justs\",\"jutes\",\"jutty\",\"juves\",\"juvie\",\"kaama\",\"kabab\",\"kabar\",\"kabob\",\"kacha\",\"kacks\",\"kadai\",\"kades\",\"kadis\",\"kafir\",\"kagos\",\"kagus\",\"kahal\",\"kaiak\",\"kaids\",\"kaies\",\"kaifs\",\"kaika\",\"kaiks\",\"kails\",\"kaims\",\"kaing\",\"kains\",\"kakas\",\"kakis\",\"kalam\",\"kales\",\"kalif\",\"kalis\",\"kalpa\",\"kamas\",\"kames\",\"kamik\",\"kamis\",\"kamme\",\"kanae\",\"kanas\",\"kandy\",\"kaneh\",\"kanes\",\"kanga\",\"kangs\",\"kanji\",\"kants\",\"kanzu\",\"kaons\",\"kapas\",\"kaphs\",\"kapok\",\"kapow\",\"kapus\",\"kaput\",\"karas\",\"karat\",\"karks\",\"karns\",\"karoo\",\"karos\",\"karri\",\"karst\",\"karsy\",\"karts\",\"karzy\",\"kasha\",\"kasme\",\"katal\",\"katas\",\"katis\",\"katti\",\"kaugh\",\"kauri\",\"kauru\",\"kaury\",\"kaval\",\"kavas\",\"kawas\",\"kawau\",\"kawed\",\"kayle\",\"kayos\",\"kazis\",\"kazoo\",\"kbars\",\"kebar\",\"kebob\",\"kecks\",\"kedge\",\"kedgy\",\"keech\",\"keefs\",\"keeks\",\"keels\",\"keema\",\"keeno\",\"keens\",\"keeps\",\"keets\",\"keeve\",\"kefir\",\"kehua\",\"keirs\",\"kelep\",\"kelim\",\"kells\",\"kelly\",\"kelps\",\"kelpy\",\"kelts\",\"kelty\",\"kembo\",\"kembs\",\"kemps\",\"kempt\",\"kempy\",\"kenaf\",\"kench\",\"kendo\",\"kenos\",\"kente\",\"kents\",\"kepis\",\"kerbs\",\"kerel\",\"kerfs\",\"kerky\",\"kerma\",\"kerne\",\"kerns\",\"keros\",\"kerry\",\"kerve\",\"kesar\",\"kests\",\"ketas\",\"ketch\",\"ketes\",\"ketol\",\"kevel\",\"kevil\",\"kexes\",\"keyed\",\"keyer\",\"khadi\",\"khafs\",\"khans\",\"khaph\",\"khats\",\"khaya\",\"khazi\",\"kheda\",\"kheth\",\"khets\",\"khoja\",\"khors\",\"khoum\",\"khuds\",\"kiaat\",\"kiack\",\"kiang\",\"kibbe\",\"kibbi\",\"kibei\",\"kibes\",\"kibla\",\"kicks\",\"kicky\",\"kiddo\",\"kiddy\",\"kidel\",\"kidge\",\"kiefs\",\"kiers\",\"kieve\",\"kievs\",\"kight\",\"kikes\",\"kikoi\",\"kiley\",\"kilim\",\"kills\",\"kilns\",\"kilos\",\"kilps\",\"kilts\",\"kilty\",\"kimbo\",\"kinas\",\"kinda\",\"kinds\",\"kindy\",\"kines\",\"kings\",\"kinin\",\"kinks\",\"kinos\",\"kiore\",\"kipes\",\"kippa\",\"kipps\",\"kirby\",\"kirks\",\"kirns\",\"kirri\",\"kisan\",\"kissy\",\"kists\",\"kited\",\"kiter\",\"kites\",\"kithe\",\"kiths\",\"kitul\",\"kivas\",\"kiwis\",\"klang\",\"klaps\",\"klett\",\"klick\",\"klieg\",\"kliks\",\"klong\",\"kloof\",\"kluge\",\"klutz\",\"knags\",\"knaps\",\"knarl\",\"knars\",\"knaur\",\"knawe\",\"knees\",\"knell\",\"knish\",\"knits\",\"knive\",\"knobs\",\"knops\",\"knosp\",\"knots\",\"knout\",\"knowe\",\"knows\",\"knubs\",\"knurl\",\"knurr\",\"knurs\",\"knuts\",\"koans\",\"koaps\",\"koban\",\"kobos\",\"koels\",\r\n    \"koffs\",\"kofta\",\"kogal\",\"kohas\",\"kohen\",\"kohls\",\"koine\",\"kojis\",\"kokam\",\"kokas\",\"koker\",\"kokra\",\"kokum\",\"kolas\",\"kolos\",\"kombu\",\"konbu\",\"kondo\",\"konks\",\"kooks\",\"kooky\",\"koori\",\"kopek\",\"kophs\",\"kopje\",\"koppa\",\"korai\",\"koras\",\"korat\",\"kores\",\"korma\",\"koros\",\"korun\",\"korus\",\"koses\",\"kotch\",\"kotos\",\"kotow\",\"koura\",\"kraal\",\"krabs\",\"kraft\",\"krais\",\"krait\",\"krang\",\"krans\",\"kranz\",\"kraut\",\"krays\",\"kreep\",\"kreng\",\"krewe\",\"krona\",\"krone\",\"kroon\",\"krubi\",\"krunk\",\"ksars\",\"kubie\",\"kudos\",\"kudus\",\"kudzu\",\"kufis\",\"kugel\",\"kuias\",\"kukri\",\"kukus\",\"kulak\",\"kulan\",\"kulas\",\"kulfi\",\"kumis\",\"kumys\",\"kuris\",\"kurre\",\"kurta\",\"kurus\",\"kusso\",\"kutas\",\"kutch\",\"kutis\",\"kutus\",\"kuzus\",\"kvass\",\"kvell\",\"kwela\",\"kyack\",\"kyaks\",\"kyang\",\"kyars\",\"kyats\",\"kybos\",\"kydst\",\"kyles\",\"kylie\",\"kylin\",\"kylix\",\"kyloe\",\"kynde\",\"kynds\",\"kypes\",\"kyrie\",\"kytes\",\"kythe\",\"laari\",\"labda\",\"labia\",\"labis\",\"labra\",\"laced\",\"lacer\",\"laces\",\"lacet\",\"lacey\",\"lacks\",\"laddy\",\"laded\",\"lader\",\"lades\",\"laers\",\"laevo\",\"lagan\",\"lahal\",\"lahar\",\"laich\",\"laics\",\"laids\",\"laigh\",\"laika\",\"laiks\",\"laird\",\"lairs\",\"lairy\",\"laith\",\"laity\",\"laked\",\"laker\",\"lakes\",\"lakhs\",\"lakin\",\"laksa\",\"laldy\",\"lalls\",\"lamas\",\"lambs\",\"lamby\",\"lamed\",\"lamer\",\"lames\",\"lamia\",\"lammy\",\"lamps\",\"lanai\",\"lanas\",\"lanch\",\"lande\",\"lands\",\"lanes\",\"lanks\",\"lants\",\"lapin\",\"lapis\",\"lapje\",\"larch\",\"lards\",\"lardy\",\"laree\",\"lares\",\"largo\",\"laris\",\"larks\",\"larky\",\"larns\",\"larnt\",\"larum\",\"lased\",\"laser\",\"lases\",\"lassi\",\"lassu\",\"lassy\",\"lasts\",\"latah\",\"lated\",\"laten\",\"latex\",\"lathi\",\"laths\",\"lathy\",\"latke\",\"latus\",\"lauan\",\"lauch\",\"lauds\",\"laufs\",\"laund\",\"laura\",\"laval\",\"lavas\",\"laved\",\"laver\",\"laves\",\"lavra\",\"lavvy\",\"lawed\",\"lawer\",\"lawin\",\"lawks\",\"lawns\",\"lawny\",\"laxed\",\"laxer\",\"laxes\",\"laxly\",\"layed\",\"layin\",\"layup\",\"lazar\",\"lazed\",\"lazes\",\"lazos\",\"lazzi\",\"lazzo\",\"leads\",\"leady\",\"leafs\",\"leaks\",\"leams\",\"leans\",\"leany\",\"leaps\",\"leare\",\"lears\",\"leary\",\"leats\",\"leavy\",\"leaze\",\"leben\",\"leccy\",\"ledes\",\"ledgy\",\"ledum\",\"leear\",\"leeks\",\"leeps\",\"leers\",\"leese\",\"leets\",\"leeze\",\"lefte\",\"lefts\",\"leger\",\"leges\",\"legge\",\"leggo\",\"legit\",\"lehrs\",\"lehua\",\"leirs\",\"leish\",\"leman\",\"lemed\",\"lemel\",\"lemes\",\"lemma\",\"lemme\",\"lends\",\"lenes\",\"lengs\",\"lenis\",\"lenos\",\"lense\",\"lenti\",\"lento\",\"leone\",\"lepid\",\"lepra\",\"lepta\",\"lered\",\"leres\",\"lerps\",\"lesbo\",\"leses\",\"lests\",\"letch\",\"lethe\",\"letup\",\"leuch\",\"leuco\",\"leuds\",\"leugh\",\"levas\",\"levee\",\"leves\",\"levin\",\"levis\",\"lewis\",\"lexes\",\"lexis\",\"lezes\",\"lezza\",\"lezzy\",\"liana\",\"liane\",\"liang\",\"liard\",\"liars\",\"liart\",\"liber\",\"libra\",\"libri\",\"lichi\",\"licht\",\"licit\",\"licks\",\"lidar\",\"lidos\",\"liefs\",\"liens\",\"liers\",\"lieus\",\"lieve\",\"lifer\",\"lifes\",\"lifts\",\"ligan\",\"liger\",\"ligge\",\"ligne\",\"liked\",\"liker\",\"likes\",\"likin\",\"lills\",\"lilos\",\"lilts\",\"liman\",\"limas\",\"limax\",\"limba\",\"limbi\",\"limbs\",\"limby\",\"limed\",\"limen\",\"limes\",\"limey\",\"limma\",\"limns\",\"limos\",\"limpa\",\"limps\",\"linac\",\"linch\",\"linds\",\"lindy\",\"lined\",\"lines\",\"liney\",\"linga\",\"lings\",\"lingy\",\"linin\",\"links\",\"linky\",\"linns\",\"linny\",\"linos\",\"lints\",\"linty\",\"linum\",\"linux\",\"lions\",\"lipas\",\"lipes\",\"lipin\",\"lipos\",\"lippy\",\"liras\",\"lirks\",\"lirot\",\"lisks\",\"lisle\",\"lisps\",\"lists\",\"litai\",\"litas\",\"lited\",\"liter\",\"lites\",\"litho\",\"liths\",\"litre\",\"lived\",\"liven\",\"lives\",\"livor\",\"livre\",\"llano\",\"loach\",\"loads\",\"loafs\",\"loams\",\"loans\",\"loast\",\"loave\",\"lobar\",\"lobed\",\"lobes\",\"lobos\",\"lobus\",\"loche\",\"lochs\",\"locie\",\"locis\",\"locks\",\"locos\",\"locum\",\"loden\",\"lodes\",\"loess\",\"lofts\",\"logan\",\"loges\",\"loggy\",\"logia\",\"logie\",\"logoi\",\"logon\",\"logos\",\"lohan\",\"loids\",\"loins\",\"loipe\",\"loirs\",\"lokes\",\"lolls\",\"lolly\",\"lolog\",\"lomas\",\"lomed\",\"lomes\",\"loner\",\"longa\",\"longe\",\"longs\",\"looby\",\"looed\",\"looey\",\"loofa\",\"loofs\",\"looie\",\"looks\",\"looky\",\"looms\",\"loons\",\"loony\",\"loops\",\"loord\",\"loots\",\"loped\",\"loper\",\"lopes\",\"loppy\",\"loral\",\"loran\",\"lords\",\"lordy\",\"lorel\",\"lores\",\"loric\",\"loris\",\"losed\",\"losel\",\"losen\",\"loses\",\"lossy\",\"lotah\",\"lotas\",\"lotes\",\"lotic\",\"lotos\",\"lotsa\",\"lotta\",\"lotte\",\"lotto\",\"lotus\",\"loued\",\"lough\",\"louie\",\"louis\",\"louma\",\"lound\",\"louns\",\"loupe\",\"loups\",\"loure\",\"lours\",\"loury\",\"louts\",\"lovat\",\"loved\",\"loves\",\"lovey\",\"lovie\",\"lowan\",\"lowed\",\"lowes\",\"lownd\",\"lowne\",\"lowns\",\"lowps\",\"lowry\",\"lowse\",\"lowts\",\"loxed\",\"loxes\",\"lozen\",\"luach\",\"luaus\",\"lubed\",\"lubes\",\"lubra\",\"luces\",\"lucks\",\"lucre\",\"ludes\",\"ludic\",\"ludos\",\"luffa\",\"luffs\",\"luged\",\"luger\",\"luges\",\"lulls\",\"lulus\",\"lumas\",\"lumbi\",\"lumme\",\"lummy\",\"lumps\",\"lunas\",\"lunes\",\"lunet\",\"lungi\",\"lungs\",\"lunks\",\"lunts\",\"lupin\",\"lured\",\"lurer\",\"lures\",\"lurex\",\"lurgi\",\"lurgy\",\"lurks\",\"lurry\",\"lurve\",\"luser\",\"lushy\",\"lusks\",\"lusts\",\"lusus\",\"lutea\",\"luted\",\"luter\",\"lutes\",\"luvvy\",\"luxed\",\"luxer\",\"luxes\",\"lweis\",\"lyams\",\"lyard\",\"lyart\",\"lyase\",\"lycea\",\"lycee\",\"lycra\",\"lymes\",\"lynes\",\"lyres\",\"lysed\",\"lyses\",\"lysin\",\"lysis\",\"lysol\",\"lyssa\",\"lyted\",\"lytes\",\"lythe\",\"lytic\",\"lytta\",\"maaed\",\"maare\",\"maars\",\"mabes\",\"macas\",\"maced\",\"macer\",\"maces\",\"mache\",\"machi\",\"machs\",\r\n    \"macks\",\"macle\",\"macon\",\"madge\",\"madid\",\"madre\",\"maerl\",\"mafic\",\"mages\",\"maggs\",\"magot\",\"magus\",\"mahoe\",\"mahua\",\"mahwa\",\"maids\",\"maiko\",\"maiks\",\"maile\",\"maill\",\"mails\",\"maims\",\"mains\",\"maire\",\"mairs\",\"maise\",\"maist\",\"makar\",\"makes\",\"makis\",\"makos\",\"malam\",\"malar\",\"malas\",\"malax\",\"males\",\"malic\",\"malik\",\"malis\",\"malls\",\"malms\",\"malmy\",\"malts\",\"malty\",\"malus\",\"malva\",\"malwa\",\"mamas\",\"mamba\",\"mamee\",\"mamey\",\"mamie\",\"manas\",\"manat\",\"mandi\",\"maneb\",\"maned\",\"maneh\",\"manes\",\"manet\",\"mangs\",\"manis\",\"manky\",\"manna\",\"manos\",\"manse\",\"manta\",\"manto\",\"manty\",\"manul\",\"manus\",\"mapau\",\"maqui\",\"marae\",\"marah\",\"maras\",\"marcs\",\"mardy\",\"mares\",\"marge\",\"margs\",\"maria\",\"marid\",\"marka\",\"marks\",\"marle\",\"marls\",\"marly\",\"marms\",\"maron\",\"maror\",\"marra\",\"marri\",\"marse\",\"marts\",\"marvy\",\"masas\",\"mased\",\"maser\",\"mases\",\"mashy\",\"masks\",\"massa\",\"massy\",\"masts\",\"masty\",\"masus\",\"matai\",\"mated\",\"mater\",\"mates\",\"maths\",\"matin\",\"matlo\",\"matte\",\"matts\",\"matza\",\"matzo\",\"mauby\",\"mauds\",\"mauls\",\"maund\",\"mauri\",\"mausy\",\"mauts\",\"mauzy\",\"maven\",\"mavie\",\"mavin\",\"mavis\",\"mawed\",\"mawks\",\"mawky\",\"mawns\",\"mawrs\",\"maxed\",\"maxes\",\"maxis\",\"mayan\",\"mayas\",\"mayed\",\"mayos\",\"mayst\",\"mazed\",\"mazer\",\"mazes\",\"mazey\",\"mazut\",\"mbira\",\"meads\",\"meals\",\"meane\",\"means\",\"meany\",\"meare\",\"mease\",\"meath\",\"meats\",\"mebos\",\"mechs\",\"mecks\",\"medii\",\"medle\",\"meeds\",\"meers\",\"meets\",\"meffs\",\"meins\",\"meint\",\"meiny\",\"meith\",\"mekka\",\"melas\",\"melba\",\"melds\",\"melic\",\"melik\",\"mells\",\"melts\",\"melty\",\"memes\",\"memos\",\"menad\",\"mends\",\"mened\",\"menes\",\"menge\",\"mengs\",\"mensa\",\"mense\",\"mensh\",\"menta\",\"mento\",\"menus\",\"meous\",\"meows\",\"merch\",\"mercs\",\"merde\",\"mered\",\"merel\",\"merer\",\"meres\",\"meril\",\"meris\",\"merks\",\"merle\",\"merls\",\"merse\",\"mesal\",\"mesas\",\"mesel\",\"meses\",\"meshy\",\"mesic\",\"mesne\",\"meson\",\"messy\",\"mesto\",\"meted\",\"metes\",\"metho\",\"meths\",\"metic\",\"metif\",\"metis\",\"metol\",\"metre\",\"meuse\",\"meved\",\"meves\",\"mewed\",\"mewls\",\"meynt\",\"mezes\",\"mezze\",\"mezzo\",\"mhorr\",\"miaou\",\"miaow\",\"miasm\",\"miaul\",\"micas\",\"miche\",\"micht\",\"micks\",\"micky\",\"micos\",\"micra\",\"middy\",\"midgy\",\"midis\",\"miens\",\"mieve\",\"miffs\",\"miffy\",\"mifty\",\"miggs\",\"mihas\",\"mihis\",\"miked\",\"mikes\",\"mikra\",\"mikva\",\"milch\",\"milds\",\"miler\",\"miles\",\"milfs\",\"milia\",\"milko\",\"milks\",\"mille\",\"mills\",\"milor\",\"milos\",\"milpa\",\"milts\",\"milty\",\"miltz\",\"mimed\",\"mimeo\",\"mimer\",\"mimes\",\"mimsy\",\"minae\",\"minar\",\"minas\",\"mincy\",\"minds\",\"mined\",\"mines\",\"minge\",\"mings\",\"mingy\",\"minis\",\"minke\",\"minks\",\"minny\",\"minos\",\"mints\",\"mired\",\"mires\",\"mirex\",\"mirid\",\"mirin\",\"mirks\",\"mirky\",\"mirly\",\"miros\",\"mirvs\",\"mirza\",\"misch\",\"misdo\",\"mises\",\"misgo\",\"misos\",\"missa\",\"mists\",\"misty\",\"mitch\",\"miter\",\"mites\",\"mitis\",\"mitre\",\"mitts\",\"mixed\",\"mixen\",\"mixer\",\"mixes\",\"mixte\",\"mixup\",\"mizen\",\"mizzy\",\"mneme\",\"moans\",\"moats\",\"mobby\",\"mobes\",\"mobey\",\"mobie\",\"moble\",\"mochi\",\"mochs\",\"mochy\",\"mocks\",\"moder\",\"modes\",\"modge\",\"modii\",\"modus\",\"moers\",\"mofos\",\"moggy\",\"mohel\",\"mohos\",\"mohrs\",\"mohua\",\"mohur\",\"moile\",\"moils\",\"moira\",\"moire\",\"moits\",\"mojos\",\"mokes\",\"mokis\",\"mokos\",\"molal\",\"molas\",\"molds\",\"moled\",\"moles\",\"molla\",\"molls\",\"molly\",\"molto\",\"molts\",\"molys\",\"momes\",\"momma\",\"mommy\",\"momus\",\"monad\",\"monal\",\"monas\",\"monde\",\"mondo\",\"moner\",\"mongo\",\"mongs\",\"monic\",\"monie\",\"monks\",\"monos\",\"monte\",\"monty\",\"moobs\",\"mooch\",\"moods\",\"mooed\",\"mooks\",\"moola\",\"mooli\",\"mools\",\"mooly\",\"moong\",\"moons\",\"moony\",\"moops\",\"moors\",\"moory\",\"moots\",\"moove\",\"moped\",\"moper\",\"mopes\",\"mopey\",\"moppy\",\"mopsy\",\"mopus\",\"morae\",\"moras\",\"morat\",\"moray\",\"morel\",\"mores\",\"moria\",\"morne\",\"morns\",\"morra\",\"morro\",\"morse\",\"morts\",\"mosed\",\"moses\",\"mosey\",\"mosks\",\"mosso\",\"moste\",\"mosts\",\"moted\",\"moten\",\"motes\",\"motet\",\"motey\",\"moths\",\"mothy\",\"motis\",\"motte\",\"motts\",\"motty\",\"motus\",\"motza\",\"mouch\",\"moues\",\"mould\",\"mouls\",\"moups\",\"moust\",\"mousy\",\"moved\",\"moves\",\"mowas\",\"mowed\",\"mowra\",\"moxas\",\"moxie\",\"moyas\",\"moyle\",\"moyls\",\"mozed\",\"mozes\",\"mozos\",\"mpret\",\"mucho\",\"mucic\",\"mucid\",\"mucin\",\"mucks\",\"mucor\",\"mucro\",\"mudge\",\"mudir\",\"mudra\",\"muffs\",\"mufti\",\"mugga\",\"muggs\",\"muggy\",\"muhly\",\"muids\",\"muils\",\"muirs\",\"muist\",\"mujik\",\"mulct\",\"muled\",\"mules\",\"muley\",\"mulga\",\"mulie\",\"mulla\",\"mulls\",\"mulse\",\"mulsh\",\"mumms\",\"mumps\",\"mumsy\",\"mumus\",\"munga\",\"munge\",\"mungo\",\"mungs\",\"munis\",\"munts\",\"muntu\",\"muons\",\"muras\",\"mured\",\"mures\",\"murex\",\"murid\",\"murks\",\"murls\",\"murly\",\"murra\",\"murre\",\"murri\",\"murrs\",\"murry\",\"murti\",\"murva\",\"musar\",\"musca\",\"mused\",\"muser\",\"muses\",\"muset\",\"musha\",\"musit\",\"musks\",\"musos\",\"musse\",\"mussy\",\"musth\",\"musts\",\"mutch\",\"muted\",\"muter\",\"mutes\",\"mutha\",\"mutis\",\"muton\",\"mutts\",\"muxed\",\"muxes\",\"muzak\",\"muzzy\",\"mvule\",\"myall\",\"mylar\",\"mynah\",\"mynas\",\"myoid\",\"myoma\",\"myope\",\"myops\",\"myopy\",\"mysid\",\"mythi\",\"myths\",\"mythy\",\"myxos\",\"mzees\",\"naams\",\"naans\",\"nabes\",\"nabis\",\"nabks\",\"nabla\",\"nabob\",\"nache\",\"nacho\",\"nacre\",\"nadas\",\"naeve\",\"naevi\",\"naffs\",\"nagas\",\"naggy\",\"nagor\",\"nahal\",\"naiad\",\"naifs\",\"naiks\",\"nails\",\"naira\",\"nairu\",\"naked\",\"naker\",\"nakfa\",\"nalas\",\"naled\",\r\n    \"nalla\",\"named\",\"namer\",\"names\",\"namma\",\"namus\",\"nanas\",\"nance\",\"nancy\",\"nandu\",\"nanna\",\"nanos\",\"nanua\",\"napas\",\"naped\",\"napes\",\"napoo\",\"nappa\",\"nappe\",\"nappy\",\"naras\",\"narco\",\"narcs\",\"nards\",\"nares\",\"naric\",\"naris\",\"narks\",\"narky\",\"narre\",\"nashi\",\"natch\",\"nates\",\"natis\",\"natty\",\"nauch\",\"naunt\",\"navar\",\"naves\",\"navew\",\"navvy\",\"nawab\",\"nazes\",\"nazir\",\"nazis\",\"nduja\",\"neafe\",\"neals\",\"neaps\",\"nears\",\"neath\",\"neats\",\"nebek\",\"nebel\",\"necks\",\"neddy\",\"needs\",\"neeld\",\"neele\",\"neemb\",\"neems\",\"neeps\",\"neese\",\"neeze\",\"negro\",\"negus\",\"neifs\",\"neist\",\"neive\",\"nelis\",\"nelly\",\"nemas\",\"nemns\",\"nempt\",\"nenes\",\"neons\",\"neper\",\"nepit\",\"neral\",\"nerds\",\"nerka\",\"nerks\",\"nerol\",\"nerts\",\"nertz\",\"nervy\",\"nests\",\"netes\",\"netop\",\"netts\",\"netty\",\"neuks\",\"neume\",\"neums\",\"nevel\",\"neves\",\"nevus\",\"newbs\",\"newed\",\"newel\",\"newie\",\"newsy\",\"newts\",\"nexts\",\"nexus\",\"ngaio\",\"ngana\",\"ngati\",\"ngoma\",\"ngwee\",\"nicad\",\"nicht\",\"nicks\",\"nicol\",\"nidal\",\"nided\",\"nides\",\"nidor\",\"nidus\",\"niefs\",\"nieve\",\"nifes\",\"niffs\",\"niffy\",\"nifty\",\"niger\",\"nighs\",\"nihil\",\"nikab\",\"nikah\",\"nikau\",\"nills\",\"nimbi\",\"nimbs\",\"nimps\",\"niner\",\"nines\",\"ninon\",\"nipas\",\"nippy\",\"niqab\",\"nirls\",\"nirly\",\"nisei\",\"nisse\",\"nisus\",\"niter\",\"nites\",\"nitid\",\"niton\",\"nitre\",\"nitro\",\"nitry\",\"nitty\",\"nival\",\"nixed\",\"nixer\",\"nixes\",\"nixie\",\"nizam\",\"nkosi\",\"noahs\",\"nobby\",\"nocks\",\"nodal\",\"noddy\",\"nodes\",\"nodus\",\"noels\",\"noggs\",\"nohow\",\"noils\",\"noily\",\"noint\",\"noirs\",\"noles\",\"nolls\",\"nolos\",\"nomas\",\"nomen\",\"nomes\",\"nomic\",\"nomoi\",\"nomos\",\"nonas\",\"nonce\",\"nones\",\"nonet\",\"nongs\",\"nonis\",\"nonny\",\"nonyl\",\"noobs\",\"nooit\",\"nooks\",\"nooky\",\"noons\",\"noops\",\"nopal\",\"noria\",\"noris\",\"norks\",\"norma\",\"norms\",\"nosed\",\"noser\",\"noses\",\"notal\",\"noted\",\"noter\",\"notes\",\"notum\",\"nould\",\"noule\",\"nouls\",\"nouns\",\"nouny\",\"noups\",\"novae\",\"novas\",\"novum\",\"noway\",\"nowed\",\"nowls\",\"nowts\",\"nowty\",\"noxal\",\"noxes\",\"noyau\",\"noyed\",\"noyes\",\"nubby\",\"nubia\",\"nucha\",\"nuddy\",\"nuder\",\"nudes\",\"nudie\",\"nudzh\",\"nuffs\",\"nugae\",\"nuked\",\"nukes\",\"nulla\",\"nulls\",\"numbs\",\"numen\",\"nummy\",\"nunny\",\"nurds\",\"nurdy\",\"nurls\",\"nurrs\",\"nutso\",\"nutsy\",\"nyaff\",\"nyala\",\"nying\",\"nyssa\",\"oaked\",\"oaker\",\"oakum\",\"oared\",\"oases\",\"oasis\",\"oasts\",\"oaten\",\"oater\",\"oaths\",\"oaves\",\"obang\",\"obeah\",\"obeli\",\"obeys\",\"obias\",\"obied\",\"obiit\",\"obits\",\"objet\",\"oboes\",\"obole\",\"oboli\",\"obols\",\"occam\",\"ocher\",\"oches\",\"ochre\",\"ochry\",\"ocker\",\"ocrea\",\"octad\",\"octan\",\"octas\",\"octyl\",\"oculi\",\"odahs\",\"odals\",\"odeon\",\"odeum\",\"odism\",\"odist\",\"odium\",\"odors\",\"odour\",\"odyle\",\"odyls\",\"ofays\",\"offed\",\"offie\",\"oflag\",\"ofter\",\"ogams\",\"ogeed\",\"ogees\",\"oggin\",\"ogham\",\"ogive\",\"ogled\",\"ogler\",\"ogles\",\"ogmic\",\"ogres\",\"ohias\",\"ohing\",\"ohmic\",\"ohone\",\"oidia\",\"oiled\",\"oiler\",\"oinks\",\"oints\",\"ojime\",\"okapi\",\"okays\",\"okehs\",\"okras\",\"oktas\",\"oldie\",\"oleic\",\"olein\",\"olent\",\"oleos\",\"oleum\",\"olios\",\"ollas\",\"ollav\",\"oller\",\"ollie\",\"ology\",\"olpae\",\"olpes\",\"omasa\",\"omber\",\"ombus\",\"omens\",\"omers\",\"omits\",\"omlah\",\"omovs\",\"omrah\",\"oncer\",\"onces\",\"oncet\",\"oncus\",\"onely\",\"oners\",\"onery\",\"onium\",\"onkus\",\"onlay\",\"onned\",\"ontic\",\"oobit\",\"oohed\",\"oomph\",\"oonts\",\"ooped\",\"oorie\",\"ooses\",\"ootid\",\"oozed\",\"oozes\",\"opahs\",\"opals\",\"opens\",\"opepe\",\"oping\",\"oppos\",\"opsin\",\"opted\",\"opter\",\"orach\",\"oracy\",\"orals\",\"orang\",\"orant\",\"orate\",\"orbed\",\"orcas\",\"orcin\",\"ordos\",\"oread\",\"orfes\",\"orgia\",\"orgic\",\"orgue\",\"oribi\",\"oriel\",\"orixa\",\"orles\",\"orlon\",\"orlop\",\"ormer\",\"ornis\",\"orpin\",\"orris\",\"ortho\",\"orval\",\"orzos\",\"oscar\",\"oshac\",\"osier\",\"osmic\",\"osmol\",\"ossia\",\"ostia\",\"otaku\",\"otary\",\"ottar\",\"ottos\",\"oubit\",\"oucht\",\"ouens\",\"ouija\",\"oulks\",\"oumas\",\"oundy\",\"oupas\",\"ouped\",\"ouphe\",\"ouphs\",\"ourie\",\"ousel\",\"ousts\",\"outby\",\"outed\",\"outre\",\"outro\",\"outta\",\"ouzel\",\"ouzos\",\"ovals\",\"ovels\",\"ovens\",\"overs\",\"ovist\",\"ovoli\",\"ovolo\",\"ovule\",\"owche\",\"owies\",\"owled\",\"owler\",\"owlet\",\"owned\",\"owres\",\"owrie\",\"owsen\",\"oxbow\",\"oxers\",\"oxeye\",\"oxids\",\"oxies\",\"oxime\",\"oxims\",\"oxlip\",\"oxter\",\"oyers\",\"ozeki\",\"ozzie\",\"paals\",\"paans\",\"pacas\",\"paced\",\"pacer\",\"paces\",\"pacey\",\"pacha\",\"packs\",\"pacos\",\"pacta\",\"pacts\",\"padis\",\"padle\",\"padma\",\"padre\",\"padri\",\"paean\",\"paedo\",\"paeon\",\"paged\",\"pager\",\"pages\",\"pagle\",\"pagod\",\"pagri\",\"paiks\",\"pails\",\"pains\",\"paire\",\"pairs\",\"paisa\",\"paise\",\"pakka\",\"palas\",\"palay\",\"palea\",\"paled\",\"pales\",\"palet\",\"palis\",\"palki\",\"palla\",\"palls\",\"pally\",\"palms\",\"palmy\",\"palpi\",\"palps\",\"palsa\",\"pampa\",\"panax\",\"pance\",\"panda\",\"pands\",\"pandy\",\"paned\",\"panes\",\"panga\",\"pangs\",\"panim\",\"panko\",\"panne\",\"panni\",\"panto\",\"pants\",\"panty\",\"paoli\",\"paolo\",\"papas\",\"papaw\",\"papes\",\"pappi\",\"pappy\",\"parae\",\"paras\",\"parch\",\"pardi\",\"pards\",\"pardy\",\"pared\",\"paren\",\"pareo\",\"pares\",\"pareu\",\"parev\",\"parge\",\"pargo\",\"paris\",\"parki\",\"parks\",\"parky\",\"parle\",\"parly\",\"parma\",\"parol\",\"parps\",\"parra\",\"parrs\",\"parti\",\"parts\",\"parve\",\"parvo\",\"paseo\",\"pases\",\"pasha\",\"pashm\",\"paska\",\"paspy\",\"passe\",\"pasts\",\"pated\",\"paten\",\"pater\",\"pates\",\"paths\",\"patin\",\"patka\",\"patly\",\"patte\",\"patus\",\"pauas\",\"pauls\",\"pavan\",\r\n    \"paved\",\"paven\",\"paver\",\"paves\",\"pavid\",\"pavin\",\"pavis\",\"pawas\",\"pawaw\",\"pawed\",\"pawer\",\"pawks\",\"pawky\",\"pawls\",\"pawns\",\"paxes\",\"payed\",\"payor\",\"paysd\",\"peage\",\"peags\",\"peaks\",\"peaky\",\"peals\",\"peans\",\"peare\",\"pears\",\"peart\",\"pease\",\"peats\",\"peaty\",\"peavy\",\"peaze\",\"pebas\",\"pechs\",\"pecke\",\"pecks\",\"pecky\",\"pedes\",\"pedis\",\"pedro\",\"peece\",\"peeks\",\"peels\",\"peens\",\"peeoy\",\"peepe\",\"peeps\",\"peers\",\"peery\",\"peeve\",\"peggy\",\"peghs\",\"peins\",\"peise\",\"peize\",\"pekan\",\"pekes\",\"pekin\",\"pekoe\",\"pelas\",\"pelau\",\"peles\",\"pelfs\",\"pells\",\"pelma\",\"pelon\",\"pelta\",\"pelts\",\"pends\",\"pendu\",\"pened\",\"penes\",\"pengo\",\"penie\",\"penis\",\"penks\",\"penna\",\"penni\",\"pents\",\"peons\",\"peony\",\"pepla\",\"pepos\",\"peppy\",\"pepsi\",\"perai\",\"perce\",\"percs\",\"perdu\",\"perdy\",\"perea\",\"peres\",\"peris\",\"perks\",\"perms\",\"perns\",\"perog\",\"perps\",\"perry\",\"perse\",\"perst\",\"perts\",\"perve\",\"pervo\",\"pervs\",\"pervy\",\"pesos\",\"pests\",\"pesty\",\"petar\",\"peter\",\"petit\",\"petre\",\"petri\",\"petti\",\"petto\",\"pewee\",\"pewit\",\"peyse\",\"phage\",\"phang\",\"phare\",\"pharm\",\"pheer\",\"phene\",\"pheon\",\"phese\",\"phial\",\"phish\",\"phizz\",\"phlox\",\"phoca\",\"phono\",\"phons\",\"phots\",\"phpht\",\"phuts\",\"phyla\",\"phyle\",\"piani\",\"pians\",\"pibal\",\"pical\",\"picas\",\"piccy\",\"picks\",\"picot\",\"picra\",\"picul\",\"piend\",\"piers\",\"piert\",\"pieta\",\"piets\",\"piezo\",\"pight\",\"pigmy\",\"piing\",\"pikas\",\"pikau\",\"piked\",\"piker\",\"pikes\",\"pikey\",\"pikis\",\"pikul\",\"pilae\",\"pilaf\",\"pilao\",\"pilar\",\"pilau\",\"pilaw\",\"pilch\",\"pilea\",\"piled\",\"pilei\",\"piler\",\"piles\",\"pilis\",\"pills\",\"pilow\",\"pilum\",\"pilus\",\"pimas\",\"pimps\",\"pinas\",\"pined\",\"pines\",\"pingo\",\"pings\",\"pinko\",\"pinks\",\"pinna\",\"pinny\",\"pinon\",\"pinot\",\"pinta\",\"pints\",\"pinup\",\"pions\",\"piony\",\"pious\",\"pioye\",\"pioys\",\"pipal\",\"pipas\",\"piped\",\"pipes\",\"pipet\",\"pipis\",\"pipit\",\"pippy\",\"pipul\",\"pirai\",\"pirls\",\"pirns\",\"pirog\",\"pisco\",\"pises\",\"pisky\",\"pisos\",\"pissy\",\"piste\",\"pitas\",\"piths\",\"piton\",\"pitot\",\"pitta\",\"piums\",\"pixes\",\"pized\",\"pizes\",\"plaas\",\"plack\",\"plage\",\"plans\",\"plaps\",\"plash\",\"plasm\",\"plast\",\"plats\",\"platt\",\"platy\",\"playa\",\"plays\",\"pleas\",\"plebe\",\"plebs\",\"plena\",\"pleon\",\"plesh\",\"plews\",\"plica\",\"plies\",\"plims\",\"pling\",\"plink\",\"ploat\",\"plods\",\"plong\",\"plonk\",\"plook\",\"plops\",\"plots\",\"plotz\",\"plouk\",\"plows\",\"ploye\",\"ploys\",\"plues\",\"pluff\",\"plugs\",\"plums\",\"plumy\",\"pluot\",\"pluto\",\"plyer\",\"poach\",\"poaka\",\"poake\",\"poboy\",\"pocks\",\"pocky\",\"podal\",\"poddy\",\"podex\",\"podge\",\"podgy\",\"podia\",\"poems\",\"poeps\",\"poets\",\"pogey\",\"pogge\",\"pogos\",\"pohed\",\"poilu\",\"poind\",\"pokal\",\"poked\",\"pokes\",\"pokey\",\"pokie\",\"poled\",\"poler\",\"poles\",\"poley\",\"polio\",\"polis\",\"polje\",\"polks\",\"polls\",\"polly\",\"polos\",\"polts\",\"polys\",\"pombe\",\"pomes\",\"pommy\",\"pomos\",\"pomps\",\"ponce\",\"poncy\",\"ponds\",\"pones\",\"poney\",\"ponga\",\"pongo\",\"pongs\",\"pongy\",\"ponks\",\"ponts\",\"ponty\",\"ponzu\",\"poods\",\"pooed\",\"poofs\",\"poofy\",\"poohs\",\"pooja\",\"pooka\",\"pooks\",\"pools\",\"poons\",\"poops\",\"poopy\",\"poori\",\"poort\",\"poots\",\"poove\",\"poovy\",\"popes\",\"poppa\",\"popsy\",\"porae\",\"poral\",\"pored\",\"porer\",\"pores\",\"porge\",\"porgy\",\"porin\",\"porks\",\"porky\",\"porno\",\"porns\",\"porny\",\"porta\",\"ports\",\"porty\",\"posed\",\"poses\",\"posey\",\"posho\",\"posts\",\"potae\",\"potch\",\"poted\",\"potes\",\"potin\",\"potoo\",\"potsy\",\"potto\",\"potts\",\"potty\",\"pouff\",\"poufs\",\"pouke\",\"pouks\",\"poule\",\"poulp\",\"poult\",\"poupe\",\"poupt\",\"pours\",\"pouts\",\"powan\",\"powin\",\"pownd\",\"powns\",\"powny\",\"powre\",\"poxed\",\"poxes\",\"poynt\",\"poyou\",\"poyse\",\"pozzy\",\"praam\",\"prads\",\"prahu\",\"prams\",\"prana\",\"prang\",\"praos\",\"prase\",\"prate\",\"prats\",\"pratt\",\"praty\",\"praus\",\"prays\",\"predy\",\"preed\",\"prees\",\"preif\",\"prems\",\"premy\",\"prent\",\"preon\",\"preop\",\"preps\",\"presa\",\"prese\",\"prest\",\"preve\",\"prexy\",\"preys\",\"prial\",\"pricy\",\"prief\",\"prier\",\"pries\",\"prigs\",\"prill\",\"prima\",\"primi\",\"primp\",\"prims\",\"primy\",\"prink\",\"prion\",\"prise\",\"priss\",\"proas\",\"probs\",\"prods\",\"proem\",\"profs\",\"progs\",\"proin\",\"proke\",\"prole\",\"proll\",\"promo\",\"proms\",\"pronk\",\"props\",\"prore\",\"proso\",\"pross\",\"prost\",\"prosy\",\"proto\",\"proul\",\"prows\",\"proyn\",\"prunt\",\"pruta\",\"pryer\",\"pryse\",\"pseud\",\"pshaw\",\"psion\",\"psoae\",\"psoai\",\"psoas\",\"psora\",\"psych\",\"psyop\",\"pubco\",\"pubes\",\"pubis\",\"pucan\",\"pucer\",\"puces\",\"pucka\",\"pucks\",\"puddy\",\"pudge\",\"pudic\",\"pudor\",\"pudsy\",\"pudus\",\"puers\",\"puffa\",\"puffs\",\"puggy\",\"pugil\",\"puhas\",\"pujah\",\"pujas\",\"pukas\",\"puked\",\"puker\",\"pukes\",\"pukey\",\"pukka\",\"pukus\",\"pulao\",\"pulas\",\"puled\",\"puler\",\"pules\",\"pulik\",\"pulis\",\"pulka\",\"pulks\",\"pulli\",\"pulls\",\"pully\",\"pulmo\",\"pulps\",\"pulus\",\"pumas\",\"pumie\",\"pumps\",\"punas\",\"punce\",\"punga\",\"pungs\",\"punji\",\"punka\",\"punks\",\"punky\",\"punny\",\"punto\",\"punts\",\"punty\",\"pupae\",\"pupas\",\"pupus\",\"purda\",\"pured\",\"pures\",\"purin\",\"puris\",\"purls\",\"purpy\",\"purrs\",\"pursy\",\"purty\",\"puses\",\"pusle\",\"pussy\",\"putid\",\"puton\",\"putti\",\"putto\",\"putts\",\"puzel\",\"pwned\",\"pyats\",\"pyets\",\"pygal\",\"pyins\",\"pylon\",\"pyned\",\"pynes\",\"pyoid\",\"pyots\",\"pyral\",\"pyran\",\"pyres\",\"pyrex\",\"pyric\",\"pyros\",\"pyxed\",\"pyxes\",\"pyxie\",\"pyxis\",\"pzazz\",\"qadis\",\"qaids\",\"qajaq\",\"qanat\",\"qapik\",\"qibla\",\"qophs\",\"qorma\",\"quads\",\"quaff\",\"quags\",\r\n    \"quair\",\"quais\",\"quaky\",\"quale\",\"quant\",\"quare\",\"quass\",\"quate\",\"quats\",\"quayd\",\"quays\",\"qubit\",\"quean\",\"queme\",\"quena\",\"quern\",\"queyn\",\"queys\",\"quich\",\"quids\",\"quiff\",\"quims\",\"quina\",\"quine\",\"quino\",\"quins\",\"quint\",\"quipo\",\"quips\",\"quipu\",\"quire\",\"quirt\",\"quist\",\"quits\",\"quoad\",\"quods\",\"quoif\",\"quoin\",\"quoit\",\"quoll\",\"quonk\",\"quops\",\"qursh\",\"quyte\",\"rabat\",\"rabic\",\"rabis\",\"raced\",\"races\",\"rache\",\"racks\",\"racon\",\"radge\",\"radix\",\"radon\",\"raffs\",\"rafts\",\"ragas\",\"ragde\",\"raged\",\"ragee\",\"rager\",\"rages\",\"ragga\",\"raggs\",\"raggy\",\"ragis\",\"ragus\",\"rahed\",\"rahui\",\"raias\",\"raids\",\"raiks\",\"raile\",\"rails\",\"raine\",\"rains\",\"raird\",\"raita\",\"raits\",\"rajas\",\"rajes\",\"raked\",\"rakee\",\"raker\",\"rakes\",\"rakia\",\"rakis\",\"rakus\",\"rales\",\"ramal\",\"ramee\",\"ramet\",\"ramie\",\"ramin\",\"ramis\",\"rammy\",\"ramps\",\"ramus\",\"ranas\",\"rance\",\"rands\",\"ranee\",\"ranga\",\"rangi\",\"rangs\",\"rangy\",\"ranid\",\"ranis\",\"ranke\",\"ranks\",\"rants\",\"raped\",\"raper\",\"rapes\",\"raphe\",\"rappe\",\"rared\",\"raree\",\"rares\",\"rarks\",\"rased\",\"raser\",\"rases\",\"rasps\",\"rasse\",\"rasta\",\"ratal\",\"ratan\",\"ratas\",\"ratch\",\"rated\",\"ratel\",\"rater\",\"rates\",\"ratha\",\"rathe\",\"raths\",\"ratoo\",\"ratos\",\"ratus\",\"rauns\",\"raupo\",\"raved\",\"ravel\",\"raver\",\"raves\",\"ravey\",\"ravin\",\"rawer\",\"rawin\",\"rawly\",\"rawns\",\"raxed\",\"raxes\",\"rayah\",\"rayas\",\"rayed\",\"rayle\",\"rayne\",\"razed\",\"razee\",\"razer\",\"razes\",\"razoo\",\"readd\",\"reads\",\"reais\",\"reaks\",\"realo\",\"reals\",\"reame\",\"reams\",\"reamy\",\"reans\",\"reaps\",\"rears\",\"reast\",\"reata\",\"reate\",\"reave\",\"rebbe\",\"rebec\",\"rebid\",\"rebit\",\"rebop\",\"rebuy\",\"recal\",\"recce\",\"recco\",\"reccy\",\"recit\",\"recks\",\"recon\",\"recta\",\"recti\",\"recto\",\"redan\",\"redds\",\"reddy\",\"reded\",\"redes\",\"redia\",\"redid\",\"redip\",\"redly\",\"redon\",\"redos\",\"redox\",\"redry\",\"redub\",\"redux\",\"redye\",\"reech\",\"reede\",\"reeds\",\"reefs\",\"reefy\",\"reeks\",\"reeky\",\"reels\",\"reens\",\"reest\",\"reeve\",\"refed\",\"refel\",\"reffo\",\"refis\",\"refix\",\"refly\",\"refry\",\"regar\",\"reges\",\"reggo\",\"regie\",\"regma\",\"regna\",\"regos\",\"regur\",\"rehem\",\"reifs\",\"reify\",\"reiki\",\"reiks\",\"reink\",\"reins\",\"reird\",\"reist\",\"reive\",\"rejig\",\"rejon\",\"reked\",\"rekes\",\"rekey\",\"relet\",\"relie\",\"relit\",\"rello\",\"reman\",\"remap\",\"remen\",\"remet\",\"remex\",\"remix\",\"renay\",\"rends\",\"reney\",\"renga\",\"renig\",\"renin\",\"renne\",\"renos\",\"rente\",\"rents\",\"reoil\",\"reorg\",\"repeg\",\"repin\",\"repla\",\"repos\",\"repot\",\"repps\",\"repro\",\"reran\",\"rerig\",\"resat\",\"resaw\",\"resay\",\"resee\",\"reses\",\"resew\",\"resid\",\"resit\",\"resod\",\"resow\",\"resto\",\"rests\",\"resty\",\"resus\",\"retag\",\"retax\",\"retem\",\"retia\",\"retie\",\"retox\",\"revet\",\"revie\",\"rewan\",\"rewax\",\"rewed\",\"rewet\",\"rewin\",\"rewon\",\"rewth\",\"rexes\",\"rezes\",\"rheas\",\"rheme\",\"rheum\",\"rhies\",\"rhime\",\"rhine\",\"rhody\",\"rhomb\",\"rhone\",\"rhumb\",\"rhyne\",\"rhyta\",\"riads\",\"rials\",\"riant\",\"riata\",\"ribas\",\"ribby\",\"ribes\",\"riced\",\"ricer\",\"rices\",\"ricey\",\"richt\",\"ricin\",\"ricks\",\"rides\",\"ridgy\",\"ridic\",\"riels\",\"riems\",\"rieve\",\"rifer\",\"riffs\",\"rifte\",\"rifts\",\"rifty\",\"riggs\",\"rigol\",\"riled\",\"riles\",\"riley\",\"rille\",\"rills\",\"rimae\",\"rimed\",\"rimer\",\"rimes\",\"rimus\",\"rinds\",\"rindy\",\"rines\",\"rings\",\"rinks\",\"rioja\",\"riots\",\"riped\",\"ripes\",\"ripps\",\"rises\",\"rishi\",\"risks\",\"risps\",\"risus\",\"rites\",\"ritts\",\"ritzy\",\"rivas\",\"rived\",\"rivel\",\"riven\",\"rives\",\"riyal\",\"rizas\",\"roads\",\"roams\",\"roans\",\"roars\",\"roary\",\"roate\",\"robed\",\"robes\",\"roble\",\"rocks\",\"roded\",\"rodes\",\"roguy\",\"rohes\",\"roids\",\"roils\",\"roily\",\"roins\",\"roist\",\"rojak\",\"rojis\",\"roked\",\"roker\",\"rokes\",\"rolag\",\"roles\",\"rolfs\",\"rolls\",\"romal\",\"roman\",\"romeo\",\"romps\",\"ronde\",\"rondo\",\"roneo\",\"rones\",\"ronin\",\"ronne\",\"ronte\",\"ronts\",\"roods\",\"roofs\",\"roofy\",\"rooks\",\"rooky\",\"rooms\",\"roons\",\"roops\",\"roopy\",\"roosa\",\"roose\",\"roots\",\"rooty\",\"roped\",\"roper\",\"ropes\",\"ropey\",\"roque\",\"roral\",\"rores\",\"roric\",\"rorid\",\"rorie\",\"rorts\",\"rorty\",\"rosed\",\"roses\",\"roset\",\"roshi\",\"rosin\",\"rosit\",\"rosti\",\"rosts\",\"rotal\",\"rotan\",\"rotas\",\"rotch\",\"roted\",\"rotes\",\"rotis\",\"rotls\",\"roton\",\"rotos\",\"rotte\",\"rouen\",\"roues\",\"roule\",\"rouls\",\"roums\",\"roups\",\"roupy\",\"roust\",\"routh\",\"routs\",\"roved\",\"roven\",\"roves\",\"rowan\",\"rowed\",\"rowel\",\"rowen\",\"rowie\",\"rowme\",\"rownd\",\"rowth\",\"rowts\",\"royne\",\"royst\",\"rozet\",\"rozit\",\"ruana\",\"rubai\",\"rubby\",\"rubel\",\"rubes\",\"rubin\",\"ruble\",\"rubli\",\"rubus\",\"ruche\",\"rucks\",\"rudas\",\"rudds\",\"rudes\",\"rudie\",\"rudis\",\"rueda\",\"ruers\",\"ruffe\",\"ruffs\",\"rugae\",\"rugal\",\"ruggy\",\"ruing\",\"ruins\",\"rukhs\",\"ruled\",\"rules\",\"rumal\",\"rumbo\",\"rumen\",\"rumes\",\"rumly\",\"rummy\",\"rumpo\",\"rumps\",\"rumpy\",\"runch\",\"runds\",\"runed\",\"runes\",\"rungs\",\"runic\",\"runny\",\"runts\",\"runty\",\"rupia\",\"rurps\",\"rurus\",\"rusas\",\"ruses\",\"rushy\",\"rusks\",\"rusma\",\"russe\",\"rusts\",\"ruths\",\"rutin\",\"rutty\",\"ryals\",\"rybat\",\"ryked\",\"rykes\",\"rymme\",\"rynds\",\"ryots\",\"ryper\",\"saags\",\"sabal\",\"sabed\",\"saber\",\"sabes\",\"sabha\",\"sabin\",\"sabir\",\"sable\",\"sabot\",\"sabra\",\"sabre\",\"sacks\",\"sacra\",\"saddo\",\"sades\",\"sadhe\",\"sadhu\",\"sadis\",\"sados\",\"sadza\",\"safed\",\"safes\",\"sagas\",\"sager\",\"sages\",\"saggy\",\"sagos\",\"sagum\",\"saheb\",\"sahib\",\"saice\",\"saick\",\"saics\",\"saids\",\"saiga\",\"sails\",\r\n    \"saims\",\"saine\",\"sains\",\"sairs\",\"saist\",\"saith\",\"sajou\",\"sakai\",\"saker\",\"sakes\",\"sakia\",\"sakis\",\"sakti\",\"salal\",\"salat\",\"salep\",\"sales\",\"salet\",\"salic\",\"salix\",\"salle\",\"salmi\",\"salol\",\"salop\",\"salpa\",\"salps\",\"salse\",\"salto\",\"salts\",\"salue\",\"salut\",\"saman\",\"samas\",\"samba\",\"sambo\",\"samek\",\"samel\",\"samen\",\"sames\",\"samey\",\"samfu\",\"sammy\",\"sampi\",\"samps\",\"sands\",\"saned\",\"sanes\",\"sanga\",\"sangh\",\"sango\",\"sangs\",\"sanko\",\"sansa\",\"santo\",\"sants\",\"saola\",\"sapan\",\"sapid\",\"sapor\",\"saran\",\"sards\",\"sared\",\"saree\",\"sarge\",\"sargo\",\"sarin\",\"saris\",\"sarks\",\"sarky\",\"sarod\",\"saros\",\"sarus\",\"saser\",\"sasin\",\"sasse\",\"satai\",\"satay\",\"sated\",\"satem\",\"sates\",\"satis\",\"sauba\",\"sauch\",\"saugh\",\"sauls\",\"sault\",\"saunt\",\"saury\",\"sauts\",\"saved\",\"saver\",\"saves\",\"savey\",\"savin\",\"sawah\",\"sawed\",\"sawer\",\"saxes\",\"sayed\",\"sayer\",\"sayid\",\"sayne\",\"sayon\",\"sayst\",\"sazes\",\"scabs\",\"scads\",\"scaff\",\"scags\",\"scail\",\"scala\",\"scall\",\"scams\",\"scand\",\"scans\",\"scapa\",\"scape\",\"scapi\",\"scarp\",\"scars\",\"scart\",\"scath\",\"scats\",\"scatt\",\"scaud\",\"scaup\",\"scaur\",\"scaws\",\"sceat\",\"scena\",\"scend\",\"schav\",\"schmo\",\"schul\",\"schwa\",\"sclim\",\"scody\",\"scogs\",\"scoog\",\"scoot\",\"scopa\",\"scops\",\"scots\",\"scoug\",\"scoup\",\"scowp\",\"scows\",\"scrab\",\"scrae\",\"scrag\",\"scran\",\"scrat\",\"scraw\",\"scray\",\"scrim\",\"scrip\",\"scrob\",\"scrod\",\"scrog\",\"scrow\",\"scudi\",\"scudo\",\"scuds\",\"scuff\",\"scuft\",\"scugs\",\"sculk\",\"scull\",\"sculp\",\"sculs\",\"scums\",\"scups\",\"scurf\",\"scurs\",\"scuse\",\"scuta\",\"scute\",\"scuts\",\"scuzz\",\"scyes\",\"sdayn\",\"sdein\",\"seals\",\"seame\",\"seams\",\"seamy\",\"seans\",\"seare\",\"sears\",\"sease\",\"seats\",\"seaze\",\"sebum\",\"secco\",\"sechs\",\"sects\",\"seder\",\"sedes\",\"sedge\",\"sedgy\",\"sedum\",\"seeds\",\"seeks\",\"seeld\",\"seels\",\"seely\",\"seems\",\"seeps\",\"seepy\",\"seers\",\"sefer\",\"segar\",\"segni\",\"segno\",\"segol\",\"segos\",\"sehri\",\"seifs\",\"seils\",\"seine\",\"seirs\",\"seise\",\"seism\",\"seity\",\"seiza\",\"sekos\",\"sekts\",\"selah\",\"seles\",\"selfs\",\"sella\",\"selle\",\"sells\",\"selva\",\"semee\",\"semes\",\"semie\",\"semis\",\"senas\",\"sends\",\"senes\",\"sengi\",\"senna\",\"senor\",\"sensa\",\"sensi\",\"sente\",\"senti\",\"sents\",\"senvy\",\"senza\",\"sepad\",\"sepal\",\"sepic\",\"sepoy\",\"septa\",\"septs\",\"serac\",\"serai\",\"seral\",\"sered\",\"serer\",\"seres\",\"serfs\",\"serge\",\"seric\",\"serin\",\"serks\",\"seron\",\"serow\",\"serra\",\"serre\",\"serrs\",\"serry\",\"servo\",\"sesey\",\"sessa\",\"setae\",\"setal\",\"seton\",\"setts\",\"sewan\",\"sewar\",\"sewed\",\"sewel\",\"sewen\",\"sewin\",\"sexed\",\"sexer\",\"sexes\",\"sexto\",\"sexts\",\"seyen\",\"shads\",\"shags\",\"shahs\",\"shako\",\"shakt\",\"shalm\",\"shaly\",\"shama\",\"shams\",\"shand\",\"shans\",\"shaps\",\"sharn\",\"shash\",\"shaul\",\"shawm\",\"shawn\",\"shaws\",\"shaya\",\"shays\",\"shchi\",\"sheaf\",\"sheal\",\"sheas\",\"sheds\",\"sheel\",\"shend\",\"shent\",\"sheol\",\"sherd\",\"shere\",\"shero\",\"shets\",\"sheva\",\"shewn\",\"shews\",\"shiai\",\"shiel\",\"shier\",\"shies\",\"shill\",\"shily\",\"shims\",\"shins\",\"ships\",\"shirr\",\"shirs\",\"shish\",\"shiso\",\"shist\",\"shite\",\"shits\",\"shiur\",\"shiva\",\"shive\",\"shivs\",\"shlep\",\"shlub\",\"shmek\",\"shmoe\",\"shoat\",\"shoed\",\"shoer\",\"shoes\",\"shogi\",\"shogs\",\"shoji\",\"shojo\",\"shola\",\"shool\",\"shoon\",\"shoos\",\"shope\",\"shops\",\"shorl\",\"shote\",\"shots\",\"shott\",\"showd\",\"shows\",\"shoyu\",\"shred\",\"shris\",\"shrow\",\"shtik\",\"shtum\",\"shtup\",\"shule\",\"shuln\",\"shuls\",\"shuns\",\"shura\",\"shute\",\"shuts\",\"shwas\",\"shyer\",\"sials\",\"sibbs\",\"sibyl\",\"sices\",\"sicht\",\"sicko\",\"sicks\",\"sicky\",\"sidas\",\"sided\",\"sider\",\"sides\",\"sidha\",\"sidhe\",\"sidle\",\"sield\",\"siens\",\"sient\",\"sieth\",\"sieur\",\"sifts\",\"sighs\",\"sigil\",\"sigla\",\"signa\",\"signs\",\"sijos\",\"sikas\",\"siker\",\"sikes\",\"silds\",\"siled\",\"silen\",\"siler\",\"siles\",\"silex\",\"silks\",\"sills\",\"silos\",\"silts\",\"silty\",\"silva\",\"simar\",\"simas\",\"simba\",\"simis\",\"simps\",\"simul\",\"sinds\",\"sined\",\"sines\",\"sings\",\"sinhs\",\"sinks\",\"sinky\",\"sinus\",\"siped\",\"sipes\",\"sippy\",\"sired\",\"siree\",\"sires\",\"sirih\",\"siris\",\"siroc\",\"sirra\",\"sirup\",\"sisal\",\"sises\",\"sista\",\"sists\",\"sitar\",\"sited\",\"sites\",\"sithe\",\"sitka\",\"situp\",\"situs\",\"siver\",\"sixer\",\"sixes\",\"sixmo\",\"sixte\",\"sizar\",\"sized\",\"sizel\",\"sizer\",\"sizes\",\"skags\",\"skail\",\"skald\",\"skank\",\"skart\",\"skats\",\"skatt\",\"skaws\",\"skean\",\"skear\",\"skeds\",\"skeed\",\"skeef\",\"skeen\",\"skeer\",\"skees\",\"skeet\",\"skegg\",\"skegs\",\"skein\",\"skelf\",\"skell\",\"skelm\",\"skelp\",\"skene\",\"skens\",\"skeos\",\"skeps\",\"skers\",\"skets\",\"skews\",\"skids\",\"skied\",\"skies\",\"skiey\",\"skimo\",\"skims\",\"skink\",\"skins\",\"skint\",\"skios\",\"skips\",\"skirl\",\"skirr\",\"skite\",\"skits\",\"skive\",\"skivy\",\"sklim\",\"skoal\",\"skody\",\"skoff\",\"skogs\",\"skols\",\"skool\",\"skort\",\"skosh\",\"skran\",\"skrik\",\"skuas\",\"skugs\",\"skyed\",\"skyer\",\"skyey\",\"skyfs\",\"skyre\",\"skyrs\",\"skyte\",\"slabs\",\"slade\",\"slaes\",\"slags\",\"slaid\",\"slake\",\"slams\",\"slane\",\"slank\",\"slaps\",\"slart\",\"slats\",\"slaty\",\"slaws\",\"slays\",\"slebs\",\"sleds\",\"sleer\",\"slews\",\"sleys\",\"slier\",\"slily\",\"slims\",\"slipe\",\"slips\",\"slipt\",\"slish\",\"slits\",\"slive\",\"sloan\",\"slobs\",\"sloes\",\"slogs\",\"sloid\",\"slojd\",\"slomo\",\"sloom\",\"sloot\",\"slops\",\"slopy\",\"slorm\",\"slots\",\"slove\",\"slows\",\"sloyd\",\"slubb\",\"slubs\",\"slued\",\"slues\",\"sluff\",\"slugs\",\"sluit\",\"slums\",\"slurb\",\"slurs\",\"sluse\",\"sluts\",\"slyer\",\"slype\",\r\n    \"smaak\",\"smaik\",\"smalm\",\"smalt\",\"smarm\",\"smaze\",\"smeek\",\"smees\",\"smeik\",\"smeke\",\"smerk\",\"smews\",\"smirr\",\"smirs\",\"smits\",\"smogs\",\"smoko\",\"smolt\",\"smoor\",\"smoot\",\"smore\",\"smorg\",\"smout\",\"smowt\",\"smugs\",\"smurs\",\"smush\",\"smuts\",\"snabs\",\"snafu\",\"snags\",\"snaps\",\"snarf\",\"snark\",\"snars\",\"snary\",\"snash\",\"snath\",\"snaws\",\"snead\",\"sneap\",\"snebs\",\"sneck\",\"sneds\",\"sneed\",\"snees\",\"snell\",\"snibs\",\"snick\",\"snies\",\"snift\",\"snigs\",\"snips\",\"snipy\",\"snirt\",\"snits\",\"snobs\",\"snods\",\"snoek\",\"snoep\",\"snogs\",\"snoke\",\"snood\",\"snook\",\"snool\",\"snoot\",\"snots\",\"snowk\",\"snows\",\"snubs\",\"snugs\",\"snush\",\"snyes\",\"soaks\",\"soaps\",\"soare\",\"soars\",\"soave\",\"sobas\",\"socas\",\"soces\",\"socko\",\"socks\",\"socle\",\"sodas\",\"soddy\",\"sodic\",\"sodom\",\"sofar\",\"sofas\",\"softa\",\"softs\",\"softy\",\"soger\",\"sohur\",\"soils\",\"soily\",\"sojas\",\"sojus\",\"sokah\",\"soken\",\"sokes\",\"sokol\",\"solah\",\"solan\",\"solas\",\"solde\",\"soldi\",\"soldo\",\"solds\",\"soled\",\"solei\",\"soler\",\"soles\",\"solon\",\"solos\",\"solum\",\"solus\",\"soman\",\"somas\",\"sonce\",\"sonde\",\"sones\",\"songs\",\"sonly\",\"sonne\",\"sonny\",\"sonse\",\"sonsy\",\"sooey\",\"sooks\",\"sooky\",\"soole\",\"sools\",\"sooms\",\"soops\",\"soote\",\"soots\",\"sophs\",\"sophy\",\"sopor\",\"soppy\",\"sopra\",\"soral\",\"soras\",\"sorbo\",\"sorbs\",\"sorda\",\"sordo\",\"sords\",\"sored\",\"soree\",\"sorel\",\"sorer\",\"sores\",\"sorex\",\"sorgo\",\"sorns\",\"sorra\",\"sorta\",\"sorts\",\"sorus\",\"soths\",\"sotol\",\"souce\",\"souct\",\"sough\",\"souks\",\"souls\",\"soums\",\"soups\",\"soupy\",\"sours\",\"souse\",\"souts\",\"sowar\",\"sowce\",\"sowed\",\"sowff\",\"sowfs\",\"sowle\",\"sowls\",\"sowms\",\"sownd\",\"sowne\",\"sowps\",\"sowse\",\"sowth\",\"soyas\",\"soyle\",\"soyuz\",\"sozin\",\"spacy\",\"spado\",\"spaed\",\"spaer\",\"spaes\",\"spags\",\"spahi\",\"spail\",\"spain\",\"spait\",\"spake\",\"spald\",\"spale\",\"spall\",\"spalt\",\"spams\",\"spane\",\"spang\",\"spans\",\"spard\",\"spars\",\"spart\",\"spate\",\"spats\",\"spaul\",\"spawl\",\"spaws\",\"spayd\",\"spays\",\"spaza\",\"spazz\",\"speal\",\"spean\",\"speat\",\"specs\",\"spect\",\"speel\",\"speer\",\"speil\",\"speir\",\"speks\",\"speld\",\"spelk\",\"speos\",\"spets\",\"speug\",\"spews\",\"spewy\",\"spial\",\"spica\",\"spick\",\"spics\",\"spide\",\"spier\",\"spies\",\"spiff\",\"spifs\",\"spiks\",\"spile\",\"spims\",\"spina\",\"spink\",\"spins\",\"spirt\",\"spiry\",\"spits\",\"spitz\",\"spivs\",\"splay\",\"splog\",\"spode\",\"spods\",\"spoom\",\"spoor\",\"spoot\",\"spork\",\"sposh\",\"spots\",\"sprad\",\"sprag\",\"sprat\",\"spred\",\"sprew\",\"sprit\",\"sprod\",\"sprog\",\"sprue\",\"sprug\",\"spuds\",\"spued\",\"spuer\",\"spues\",\"spugs\",\"spule\",\"spume\",\"spumy\",\"spurs\",\"sputa\",\"spyal\",\"spyre\",\"squab\",\"squaw\",\"squeg\",\"squid\",\"squit\",\"squiz\",\"stabs\",\"stade\",\"stags\",\"stagy\",\"staig\",\"stane\",\"stang\",\"staph\",\"staps\",\"starn\",\"starr\",\"stars\",\"stats\",\"staun\",\"staws\",\"stays\",\"stean\",\"stear\",\"stedd\",\"stede\",\"steds\",\"steek\",\"steem\",\"steen\",\"steil\",\"stela\",\"stele\",\"stell\",\"steme\",\"stems\",\"stend\",\"steno\",\"stens\",\"stent\",\"steps\",\"stept\",\"stere\",\"stets\",\"stews\",\"stewy\",\"steys\",\"stich\",\"stied\",\"sties\",\"stilb\",\"stile\",\"stime\",\"stims\",\"stimy\",\"stipa\",\"stipe\",\"stire\",\"stirk\",\"stirp\",\"stirs\",\"stive\",\"stivy\",\"stoae\",\"stoai\",\"stoas\",\"stoat\",\"stobs\",\"stoep\",\"stogy\",\"stoit\",\"stoln\",\"stoma\",\"stond\",\"stong\",\"stonk\",\"stonn\",\"stook\",\"stoor\",\"stope\",\"stops\",\"stopt\",\"stoss\",\"stots\",\"stott\",\"stoun\",\"stoup\",\"stour\",\"stown\",\"stowp\",\"stows\",\"strad\",\"strae\",\"strag\",\"strak\",\"strep\",\"strew\",\"stria\",\"strig\",\"strim\",\"strop\",\"strow\",\"stroy\",\"strum\",\"stubs\",\"stude\",\"studs\",\"stull\",\"stulm\",\"stumm\",\"stums\",\"stuns\",\"stupa\",\"stupe\",\"sture\",\"sturt\",\"styed\",\"styes\",\"styli\",\"stylo\",\"styme\",\"stymy\",\"styre\",\"styte\",\"subah\",\"subas\",\"subby\",\"suber\",\"subha\",\"succi\",\"sucks\",\"sucky\",\"sucre\",\"sudds\",\"sudor\",\"sudsy\",\"suede\",\"suent\",\"suers\",\"suete\",\"suets\",\"suety\",\"sugan\",\"sughs\",\"sugos\",\"suhur\",\"suids\",\"suint\",\"suits\",\"sujee\",\"sukhs\",\"sukuk\",\"sulci\",\"sulfa\",\"sulfo\",\"sulks\",\"sulph\",\"sulus\",\"sumis\",\"summa\",\"sumos\",\"sumph\",\"sumps\",\"sunis\",\"sunks\",\"sunna\",\"sunns\",\"sunup\",\"supes\",\"supra\",\"surah\",\"sural\",\"suras\",\"surat\",\"surds\",\"sured\",\"sures\",\"surfs\",\"surfy\",\"surgy\",\"surra\",\"sused\",\"suses\",\"susus\",\"sutor\",\"sutra\",\"sutta\",\"swabs\",\"swack\",\"swads\",\"swage\",\"swags\",\"swail\",\"swain\",\"swale\",\"swaly\",\"swamy\",\"swang\",\"swank\",\"swans\",\"swaps\",\"swapt\",\"sward\",\"sware\",\"swarf\",\"swart\",\"swats\",\"swayl\",\"sways\",\"sweal\",\"swede\",\"sweed\",\"sweel\",\"sweer\",\"swees\",\"sweir\",\"swelt\",\"swerf\",\"sweys\",\"swies\",\"swigs\",\"swile\",\"swims\",\"swink\",\"swipe\",\"swire\",\"swiss\",\"swith\",\"swits\",\"swive\",\"swizz\",\"swobs\",\"swole\",\"swoln\",\"swops\",\"swopt\",\"swots\",\"swoun\",\"sybbe\",\"sybil\",\"syboe\",\"sybow\",\"sycee\",\"syces\",\"sycon\",\"syens\",\"syker\",\"sykes\",\"sylis\",\"sylph\",\"sylva\",\"symar\",\"synch\",\"syncs\",\"synds\",\"syned\",\"synes\",\"synth\",\"syped\",\"sypes\",\"syphs\",\"syrah\",\"syren\",\"sysop\",\"sythe\",\"syver\",\"taals\",\"taata\",\"taber\",\"tabes\",\"tabid\",\"tabis\",\"tabla\",\"tabor\",\"tabun\",\"tabus\",\"tacan\",\"taces\",\"tacet\",\"tache\",\"tacho\",\"tachs\",\"tacks\",\"tacos\",\"tacts\",\"taels\",\"tafia\",\"taggy\",\"tagma\",\"tahas\",\"tahrs\",\"taiga\",\"taigs\",\"taiko\",\"tails\",\"tains\",\"taira\",\"taish\",\"taits\",\"tajes\",\"takas\",\"takes\",\"takhi\",\"takin\",\"takis\",\"takky\",\"talak\",\"talaq\",\"talar\",\"talas\",\"talcs\",\"talcy\",\r\n    \"talea\",\"taler\",\"tales\",\"talks\",\"talky\",\"talls\",\"talma\",\"talpa\",\"taluk\",\"talus\",\"tamal\",\"tamed\",\"tames\",\"tamin\",\"tamis\",\"tammy\",\"tamps\",\"tanas\",\"tanga\",\"tangi\",\"tangs\",\"tanhs\",\"tanka\",\"tanks\",\"tanky\",\"tanna\",\"tansy\",\"tanti\",\"tanto\",\"tanty\",\"tapas\",\"taped\",\"tapen\",\"tapes\",\"tapet\",\"tapis\",\"tappa\",\"tapus\",\"taras\",\"tardo\",\"tared\",\"tares\",\"targa\",\"targe\",\"tarns\",\"taroc\",\"tarok\",\"taros\",\"tarps\",\"tarre\",\"tarry\",\"tarsi\",\"tarts\",\"tarty\",\"tasar\",\"tased\",\"taser\",\"tases\",\"tasks\",\"tassa\",\"tasse\",\"tasso\",\"tatar\",\"tater\",\"tates\",\"taths\",\"tatie\",\"tatou\",\"tatts\",\"tatus\",\"taube\",\"tauld\",\"tauon\",\"taupe\",\"tauts\",\"tavah\",\"tavas\",\"taver\",\"tawai\",\"tawas\",\"tawed\",\"tawer\",\"tawie\",\"tawse\",\"tawts\",\"taxed\",\"taxer\",\"taxes\",\"taxis\",\"taxol\",\"taxon\",\"taxor\",\"taxus\",\"tayra\",\"tazza\",\"tazze\",\"teade\",\"teads\",\"teaed\",\"teaks\",\"teals\",\"teams\",\"tears\",\"teats\",\"teaze\",\"techs\",\"techy\",\"tecta\",\"teels\",\"teems\",\"teend\",\"teene\",\"teens\",\"teeny\",\"teers\",\"teffs\",\"teggs\",\"tegua\",\"tegus\",\"tehrs\",\"teiid\",\"teils\",\"teind\",\"teins\",\"telae\",\"telco\",\"teles\",\"telex\",\"telia\",\"telic\",\"tells\",\"telly\",\"teloi\",\"telos\",\"temed\",\"temes\",\"tempi\",\"temps\",\"tempt\",\"temse\",\"tench\",\"tends\",\"tendu\",\"tenes\",\"tenge\",\"tenia\",\"tenne\",\"tenno\",\"tenny\",\"tenon\",\"tents\",\"tenty\",\"tenue\",\"tepal\",\"tepas\",\"tepoy\",\"terai\",\"teras\",\"terce\",\"terek\",\"teres\",\"terfe\",\"terfs\",\"terga\",\"terms\",\"terne\",\"terns\",\"terry\",\"terts\",\"tesla\",\"testa\",\"teste\",\"tests\",\"tetes\",\"teths\",\"tetra\",\"tetri\",\"teuch\",\"teugh\",\"tewed\",\"tewel\",\"tewit\",\"texas\",\"texes\",\"texts\",\"thack\",\"thagi\",\"thaim\",\"thale\",\"thali\",\"thana\",\"thane\",\"thang\",\"thans\",\"thanx\",\"tharm\",\"thars\",\"thaws\",\"thawy\",\"thebe\",\"theca\",\"theed\",\"theek\",\"thees\",\"thegn\",\"theic\",\"thein\",\"thelf\",\"thema\",\"thens\",\"theow\",\"therm\",\"thesp\",\"thete\",\"thews\",\"thewy\",\"thigs\",\"thilk\",\"thill\",\"thine\",\"thins\",\"thiol\",\"thirl\",\"thoft\",\"thole\",\"tholi\",\"thoro\",\"thorp\",\"thous\",\"thowl\",\"thrae\",\"thraw\",\"thrid\",\"thrip\",\"throe\",\"thuds\",\"thugs\",\"thuja\",\"thunk\",\"thurl\",\"thuya\",\"thymi\",\"thymy\",\"tians\",\"tiars\",\"tical\",\"ticca\",\"ticed\",\"tices\",\"tichy\",\"ticks\",\"ticky\",\"tiddy\",\"tided\",\"tides\",\"tiers\",\"tiffs\",\"tifos\",\"tifts\",\"tiges\",\"tigon\",\"tikas\",\"tikes\",\"tikis\",\"tikka\",\"tilak\",\"tiled\",\"tiler\",\"tiles\",\"tills\",\"tilly\",\"tilth\",\"tilts\",\"timbo\",\"timed\",\"times\",\"timon\",\"timps\",\"tinas\",\"tinct\",\"tinds\",\"tinea\",\"tined\",\"tines\",\"tinge\",\"tings\",\"tinks\",\"tinny\",\"tints\",\"tinty\",\"tipis\",\"tippy\",\"tired\",\"tires\",\"tirls\",\"tiros\",\"tirrs\",\"titch\",\"titer\",\"titis\",\"titre\",\"titty\",\"titup\",\"tiyin\",\"tiyns\",\"tizes\",\"tizzy\",\"toads\",\"toady\",\"toaze\",\"tocks\",\"tocky\",\"tocos\",\"todde\",\"toeas\",\"toffs\",\"toffy\",\"tofts\",\"tofus\",\"togae\",\"togas\",\"toged\",\"toges\",\"togue\",\"tohos\",\"toile\",\"toils\",\"toing\",\"toise\",\"toits\",\"tokay\",\"toked\",\"toker\",\"tokes\",\"tokos\",\"tolan\",\"tolar\",\"tolas\",\"toled\",\"toles\",\"tolls\",\"tolly\",\"tolts\",\"tolus\",\"tolyl\",\"toman\",\"tombs\",\"tomes\",\"tomia\",\"tommy\",\"tomos\",\"tondi\",\"tondo\",\"toned\",\"toner\",\"tones\",\"toney\",\"tongs\",\"tonka\",\"tonks\",\"tonne\",\"tonus\",\"tools\",\"tooms\",\"toons\",\"toots\",\"toped\",\"topee\",\"topek\",\"toper\",\"topes\",\"tophe\",\"tophi\",\"tophs\",\"topis\",\"topoi\",\"topos\",\"toppy\",\"toque\",\"torah\",\"toran\",\"toras\",\"torcs\",\"tores\",\"toric\",\"torii\",\"toros\",\"torot\",\"torrs\",\"torse\",\"torsi\",\"torsk\",\"torta\",\"torte\",\"torts\",\"tosas\",\"tosed\",\"toses\",\"toshy\",\"tossy\",\"toted\",\"toter\",\"totes\",\"totty\",\"touks\",\"touns\",\"tours\",\"touse\",\"tousy\",\"touts\",\"touze\",\"touzy\",\"towed\",\"towie\",\"towns\",\"towny\",\"towse\",\"towsy\",\"towts\",\"towze\",\"towzy\",\"toyed\",\"toyer\",\"toyon\",\"toyos\",\"tozed\",\"tozes\",\"tozie\",\"trabs\",\"trads\",\"tragi\",\"traik\",\"trams\",\"trank\",\"tranq\",\"trans\",\"trant\",\"trape\",\"traps\",\"trapt\",\"trass\",\"trats\",\"tratt\",\"trave\",\"trayf\",\"trays\",\"treck\",\"treed\",\"treen\",\"trees\",\"trefa\",\"treif\",\"treks\",\"trema\",\"trems\",\"tress\",\"trest\",\"trets\",\"trews\",\"treyf\",\"treys\",\"triac\",\"tride\",\"trier\",\"tries\",\"triff\",\"trigo\",\"trigs\",\"trike\",\"trild\",\"trill\",\"trims\",\"trine\",\"trins\",\"triol\",\"trior\",\"trios\",\"trips\",\"tripy\",\"trist\",\"troad\",\"troak\",\"troat\",\"trock\",\"trode\",\"trods\",\"trogs\",\"trois\",\"troke\",\"tromp\",\"trona\",\"tronc\",\"trone\",\"tronk\",\"trons\",\"trooz\",\"troth\",\"trots\",\"trows\",\"troys\",\"trued\",\"trues\",\"trugo\",\"trugs\",\"trull\",\"tryer\",\"tryke\",\"tryma\",\"tryps\",\"tsade\",\"tsadi\",\"tsars\",\"tsked\",\"tsuba\",\"tsubo\",\"tuans\",\"tuart\",\"tuath\",\"tubae\",\"tubar\",\"tubas\",\"tubby\",\"tubed\",\"tubes\",\"tucks\",\"tufas\",\"tuffe\",\"tuffs\",\"tufts\",\"tufty\",\"tugra\",\"tuile\",\"tuina\",\"tuism\",\"tuktu\",\"tules\",\"tulpa\",\"tulsi\",\"tumid\",\"tummy\",\"tumps\",\"tumpy\",\"tunas\",\"tunds\",\"tuned\",\"tuner\",\"tunes\",\"tungs\",\"tunny\",\"tupek\",\"tupik\",\"tuple\",\"tuque\",\"turds\",\"turfs\",\"turfy\",\"turks\",\"turme\",\"turms\",\"turns\",\"turnt\",\"turps\",\"turrs\",\"tushy\",\"tusks\",\"tusky\",\"tutee\",\"tutti\",\"tutty\",\"tutus\",\"tuxes\",\"tuyer\",\"twaes\",\"twain\",\"twals\",\"twank\",\"twats\",\"tways\",\"tweel\",\"tween\",\"tweep\",\"tweer\",\"twerk\",\"twerp\",\"twier\",\"twigs\",\"twill\",\"twilt\",\"twink\",\"twins\",\"twiny\",\"twire\",\"twirp\",\"twite\",\"twits\",\"twoer\",\"twyer\",\"tyees\",\"tyers\",\"tyiyn\",\"tykes\",\"tyler\",\"tymps\",\"tynde\",\r\n    \"tyned\",\"tynes\",\"typal\",\"typed\",\"types\",\"typey\",\"typic\",\"typos\",\"typps\",\"typto\",\"tyran\",\"tyred\",\"tyres\",\"tyros\",\"tythe\",\"tzars\",\"udals\",\"udons\",\"ugali\",\"ugged\",\"uhlan\",\"uhuru\",\"ukase\",\"ulama\",\"ulans\",\"ulema\",\"ulmin\",\"ulnad\",\"ulnae\",\"ulnar\",\"ulnas\",\"ulpan\",\"ulvas\",\"ulyie\",\"ulzie\",\"umami\",\"umbel\",\"umber\",\"umble\",\"umbos\",\"umbre\",\"umiac\",\"umiak\",\"umiaq\",\"ummah\",\"ummas\",\"ummed\",\"umped\",\"umphs\",\"umpie\",\"umpty\",\"umrah\",\"umras\",\"unais\",\"unapt\",\"unarm\",\"unary\",\"unaus\",\"unbag\",\"unban\",\"unbar\",\"unbed\",\"unbid\",\"unbox\",\"uncap\",\"unces\",\"uncia\",\"uncos\",\"uncoy\",\"uncus\",\"undam\",\"undee\",\"undos\",\"undug\",\"uneth\",\"unfix\",\"ungag\",\"unget\",\"ungod\",\"ungot\",\"ungum\",\"unhat\",\"unhip\",\"unica\",\"units\",\"unjam\",\"unked\",\"unket\",\"unkid\",\"unlaw\",\"unlay\",\"unled\",\"unlet\",\"unlid\",\"unman\",\"unmew\",\"unmix\",\"unpay\",\"unpeg\",\"unpen\",\"unpin\",\"unred\",\"unrid\",\"unrig\",\"unrip\",\"unsaw\",\"unsay\",\"unsee\",\"unsew\",\"unsex\",\"unsod\",\"untax\",\"untin\",\"unwet\",\"unwit\",\"unwon\",\"upbow\",\"upbye\",\"updos\",\"updry\",\"upend\",\"upjet\",\"uplay\",\"upled\",\"uplit\",\"upped\",\"upran\",\"uprun\",\"upsee\",\"upsey\",\"uptak\",\"upter\",\"uptie\",\"uraei\",\"urali\",\"uraos\",\"urare\",\"urari\",\"urase\",\"urate\",\"urbex\",\"urbia\",\"urdee\",\"ureal\",\"ureas\",\"uredo\",\"ureic\",\"urena\",\"urent\",\"urged\",\"urger\",\"urges\",\"urial\",\"urite\",\"urman\",\"urnal\",\"urned\",\"urped\",\"ursae\",\"ursid\",\"urson\",\"urubu\",\"urvas\",\"users\",\"usnea\",\"usque\",\"usure\",\"usury\",\"uteri\",\"uveal\",\"uveas\",\"uvula\",\"vacua\",\"vaded\",\"vades\",\"vagal\",\"vagus\",\"vails\",\"vaire\",\"vairs\",\"vairy\",\"vakas\",\"vakil\",\"vales\",\"valis\",\"valse\",\"vamps\",\"vampy\",\"vanda\",\"vaned\",\"vanes\",\"vangs\",\"vants\",\"vaped\",\"vaper\",\"vapes\",\"varan\",\"varas\",\"vardy\",\"varec\",\"vares\",\"varia\",\"varix\",\"varna\",\"varus\",\"varve\",\"vasal\",\"vases\",\"vasts\",\"vasty\",\"vatic\",\"vatus\",\"vauch\",\"vaute\",\"vauts\",\"vawte\",\"vaxes\",\"veale\",\"veals\",\"vealy\",\"veena\",\"veeps\",\"veers\",\"veery\",\"vegas\",\"veges\",\"vegie\",\"vegos\",\"vehme\",\"veils\",\"veily\",\"veins\",\"veiny\",\"velar\",\"velds\",\"veldt\",\"veles\",\"vells\",\"velum\",\"venae\",\"venal\",\"vends\",\"vendu\",\"veney\",\"venge\",\"venin\",\"vents\",\"venus\",\"verbs\",\"verra\",\"verry\",\"verst\",\"verts\",\"vertu\",\"vespa\",\"vesta\",\"vests\",\"vetch\",\"vexed\",\"vexer\",\"vexes\",\"vexil\",\"vezir\",\"vials\",\"viand\",\"vibes\",\"vibex\",\"vibey\",\"viced\",\"vices\",\"vichy\",\"viers\",\"views\",\"viewy\",\"vifda\",\"viffs\",\"vigas\",\"vigia\",\"vilde\",\"viler\",\"villi\",\"vills\",\"vimen\",\"vinal\",\"vinas\",\"vinca\",\"vined\",\"viner\",\"vines\",\"vinew\",\"vinic\",\"vinos\",\"vints\",\"viold\",\"viols\",\"vired\",\"vireo\",\"vires\",\"virga\",\"virge\",\"virid\",\"virls\",\"virtu\",\"visas\",\"vised\",\"vises\",\"visie\",\"visne\",\"vison\",\"visto\",\"vitae\",\"vitas\",\"vitex\",\"vitro\",\"vitta\",\"vivas\",\"vivat\",\"vivda\",\"viver\",\"vives\",\"vizir\",\"vizor\",\"vleis\",\"vlies\",\"vlogs\",\"voars\",\"vocab\",\"voces\",\"voddy\",\"vodou\",\"vodun\",\"voema\",\"vogie\",\"voids\",\"voile\",\"voips\",\"volae\",\"volar\",\"voled\",\"voles\",\"volet\",\"volks\",\"volta\",\"volte\",\"volti\",\"volts\",\"volva\",\"volve\",\"vomer\",\"voted\",\"votes\",\"vouge\",\"voulu\",\"vowed\",\"vower\",\"voxel\",\"vozhd\",\"vraic\",\"vrils\",\"vroom\",\"vrous\",\"vrouw\",\"vrows\",\"vuggs\",\"vuggy\",\"vughs\",\"vughy\",\"vulgo\",\"vulns\",\"vulva\",\"vutty\",\"waacs\",\"wacke\",\"wacko\",\"wacks\",\"wadds\",\"waddy\",\"waded\",\"wader\",\"wades\",\"wadge\",\"wadis\",\"wadts\",\"waffs\",\"wafts\",\"waged\",\"wages\",\"wagga\",\"wagyu\",\"wahoo\",\"waide\",\"waifs\",\"waift\",\"wails\",\"wains\",\"wairs\",\"waite\",\"waits\",\"wakas\",\"waked\",\"waken\",\"waker\",\"wakes\",\"wakfs\",\"waldo\",\"walds\",\"waled\",\"waler\",\"wales\",\"walie\",\"walis\",\"walks\",\"walla\",\"walls\",\"wally\",\"walty\",\"wamed\",\"wames\",\"wamus\",\"wands\",\"waned\",\"wanes\",\"waney\",\"wangs\",\"wanks\",\"wanky\",\"wanle\",\"wanly\",\"wanna\",\"wants\",\"wanty\",\"wanze\",\"waqfs\",\"warbs\",\"warby\",\"wards\",\"wared\",\"wares\",\"warez\",\"warks\",\"warms\",\"warns\",\"warps\",\"warre\",\"warst\",\"warts\",\"wases\",\"washy\",\"wasms\",\"wasps\",\"waspy\",\"wasts\",\"watap\",\"watts\",\"wauff\",\"waugh\",\"wauks\",\"waulk\",\"wauls\",\"waurs\",\"waved\",\"waves\",\"wavey\",\"wawas\",\"wawes\",\"wawls\",\"waxed\",\"waxer\",\"waxes\",\"wayed\",\"wazir\",\"wazoo\",\"weald\",\"weals\",\"weamb\",\"weans\",\"wears\",\"webby\",\"weber\",\"wecht\",\"wedel\",\"wedgy\",\"weeds\",\"weeke\",\"weeks\",\"weels\",\"weems\",\"weens\",\"weeny\",\"weeps\",\"weepy\",\"weest\",\"weete\",\"weets\",\"wefte\",\"wefts\",\"weids\",\"weils\",\"weirs\",\"weise\",\"weize\",\"wekas\",\"welds\",\"welke\",\"welks\",\"welkt\",\"wells\",\"welly\",\"welts\",\"wembs\",\"wends\",\"wenge\",\"wenny\",\"wents\",\"weros\",\"wersh\",\"wests\",\"wetas\",\"wetly\",\"wexed\",\"wexes\",\"whamo\",\"whams\",\"whang\",\"whaps\",\"whare\",\"whata\",\"whats\",\"whaup\",\"whaur\",\"wheal\",\"whear\",\"wheen\",\"wheep\",\"wheft\",\"whelk\",\"whelm\",\"whens\",\"whets\",\"whews\",\"wheys\",\"whids\",\"whift\",\"whigs\",\"whilk\",\"whims\",\"whins\",\"whios\",\"whips\",\"whipt\",\"whirr\",\"whirs\",\"whish\",\"whiss\",\"whist\",\"whits\",\"whity\",\"whizz\",\"whomp\",\"whoof\",\"whoot\",\"whops\",\"whore\",\"whorl\",\"whort\",\"whoso\",\"whows\",\"whump\",\"whups\",\"whyda\",\"wicca\",\"wicks\",\"wicky\",\"widdy\",\"wides\",\"wiels\",\"wifed\",\"wifes\",\"wifey\",\"wifie\",\"wifty\",\"wigan\",\"wigga\",\"wiggy\",\"wikis\",\"wilco\",\"wilds\",\"wiled\",\"wiles\",\"wilga\",\"wilis\",\"wilja\",\"wills\",\"wilts\",\"wimps\",\"winds\",\"wined\",\"wines\",\"winey\",\"winge\",\"wings\",\"wingy\",\"winks\",\"winna\",\r\n    \"winns\",\"winos\",\"winze\",\"wiped\",\"wiper\",\"wipes\",\"wired\",\"wirer\",\"wires\",\"wirra\",\"wised\",\"wises\",\"wisha\",\"wisht\",\"wisps\",\"wists\",\"witan\",\"wited\",\"wites\",\"withe\",\"withs\",\"withy\",\"wived\",\"wiver\",\"wives\",\"wizen\",\"wizes\",\"woads\",\"woald\",\"wocks\",\"wodge\",\"woful\",\"wojus\",\"woker\",\"wokka\",\"wolds\",\"wolfs\",\"wolly\",\"wolve\",\"wombs\",\"womby\",\"womyn\",\"wonga\",\"wongi\",\"wonks\",\"wonky\",\"wonts\",\"woods\",\"wooed\",\"woofs\",\"woofy\",\"woold\",\"wools\",\"woons\",\"woops\",\"woopy\",\"woose\",\"woosh\",\"wootz\",\"words\",\"works\",\"worms\",\"wormy\",\"worts\",\"wowed\",\"wowee\",\"woxen\",\"wrang\",\"wraps\",\"wrapt\",\"wrast\",\"wrate\",\"wrawl\",\"wrens\",\"wrick\",\"wried\",\"wrier\",\"wries\",\"writs\",\"wroke\",\"wroot\",\"wroth\",\"wryer\",\"wuddy\",\"wudus\",\"wulls\",\"wurst\",\"wuses\",\"wushu\",\"wussy\",\"wuxia\",\"wyled\",\"wyles\",\"wynds\",\"wynns\",\"wyted\",\"wytes\",\"xebec\",\"xenia\",\"xenic\",\"xenon\",\"xeric\",\"xerox\",\"xerus\",\"xoana\",\"xrays\",\"xylan\",\"xylem\",\"xylic\",\"xylol\",\"xylyl\",\"xysti\",\"xysts\",\"yaars\",\"yabas\",\"yabba\",\"yabby\",\"yacca\",\"yacka\",\"yacks\",\"yaffs\",\"yager\",\"yages\",\"yagis\",\"yahoo\",\"yaird\",\"yakka\",\"yakow\",\"yales\",\"yamen\",\"yampy\",\"yamun\",\"yangs\",\"yanks\",\"yapok\",\"yapon\",\"yapps\",\"yappy\",\"yarak\",\"yarco\",\"yards\",\"yarer\",\"yarfa\",\"yarks\",\"yarns\",\"yarrs\",\"yarta\",\"yarto\",\"yates\",\"yauds\",\"yauld\",\"yaups\",\"yawed\",\"yawey\",\"yawls\",\"yawns\",\"yawny\",\"yawps\",\"ybore\",\"yclad\",\"ycled\",\"ycond\",\"ydrad\",\"ydred\",\"yeads\",\"yeahs\",\"yealm\",\"yeans\",\"yeard\",\"years\",\"yecch\",\"yechs\",\"yechy\",\"yedes\",\"yeeds\",\"yeesh\",\"yeggs\",\"yelks\",\"yells\",\"yelms\",\"yelps\",\"yelts\",\"yenta\",\"yente\",\"yerba\",\"yerds\",\"yerks\",\"yeses\",\"yesks\",\"yests\",\"yesty\",\"yetis\",\"yetts\",\"yeuks\",\"yeuky\",\"yeven\",\"yeves\",\"yewen\",\"yexed\",\"yexes\",\"yfere\",\"yiked\",\"yikes\",\"yills\",\"yince\",\"yipes\",\"yippy\",\"yirds\",\"yirks\",\"yirrs\",\"yirth\",\"yites\",\"yitie\",\"ylems\",\"ylike\",\"ylkes\",\"ymolt\",\"ympes\",\"yobbo\",\"yobby\",\"yocks\",\"yodel\",\"yodhs\",\"yodle\",\"yogas\",\"yogee\",\"yoghs\",\"yogic\",\"yogin\",\"yogis\",\"yoick\",\"yojan\",\"yoked\",\"yokel\",\"yoker\",\"yokes\",\"yokul\",\"yolks\",\"yolky\",\"yomim\",\"yomps\",\"yonic\",\"yonis\",\"yonks\",\"yoofs\",\"yoops\",\"yores\",\"yorks\",\"yorps\",\"youks\",\"yourn\",\"yours\",\"yourt\",\"youse\",\"yowed\",\"yowes\",\"yowie\",\"yowls\",\"yowza\",\"yrapt\",\"yrent\",\"yrivd\",\"yrneh\",\"ysame\",\"ytost\",\"yuans\",\"yucas\",\"yucca\",\"yucch\",\"yucko\",\"yucks\",\"yucky\",\"yufts\",\"yugas\",\"yuked\",\"yukes\",\"yukky\",\"yukos\",\"yulan\",\"yules\",\"yummo\",\"yummy\",\"yumps\",\"yupon\",\"yuppy\",\"yurta\",\"yurts\",\"yuzus\",\"zabra\",\"zacks\",\"zaida\",\"zaidy\",\"zaire\",\"zakat\",\"zaman\",\"zambo\",\"zamia\",\"zanja\",\"zante\",\"zanza\",\"zanze\",\"zappy\",\"zarfs\",\"zaris\",\"zatis\",\"zaxes\",\"zayin\",\"zazen\",\"zeals\",\"zebec\",\"zebub\",\"zebus\",\"zedas\",\"zeins\",\"zendo\",\"zerda\",\"zerks\",\"zeros\",\"zests\",\"zetas\",\"zexes\",\"zezes\",\"zhomo\",\"zibet\",\"ziffs\",\"zigan\",\"zilas\",\"zilch\",\"zilla\",\"zills\",\"zimbi\",\"zimbs\",\"zinco\",\"zincs\",\"zincy\",\"zineb\",\"zines\",\"zings\",\"zingy\",\"zinke\",\"zinky\",\"zippo\",\"zippy\",\"ziram\",\"zitis\",\"zizel\",\"zizit\",\"zlote\",\"zloty\",\"zoaea\",\"zobos\",\"zobus\",\"zocco\",\"zoeae\",\"zoeal\",\"zoeas\",\"zoism\",\"zoist\",\"zombi\",\"zonae\",\"zonda\",\"zoned\",\"zoner\",\"zones\",\"zonks\",\"zooea\",\"zooey\",\"zooid\",\"zooks\",\"zooms\",\"zoons\",\"zooty\",\"zoppa\",\"zoppo\",\"zoril\",\"zoris\",\"zorro\",\"zouks\",\"zowee\",\"zowie\",\"zulus\",\"zupan\",\"zupas\",\"zuppa\",\"zurfs\",\"zuzim\",\"zygal\",\"zygon\",\"zymes\",\"zymic\"];\r\n\r\n    export function isValidWord(word) {\r\n        var w = String(word).toLowerCase();\r\n        if(commonWords.includes(w)) {\r\n            return true;\r\n        } else if(obscureWords.includes(w)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    export function getTodaysWord() {\r\n        return commonWords[Math.floor(Math.random()*commonWords.length)];\r\n    }\r\n</script>","<script>\r\n\timport {gamesPlayed, winPercentage, currentStreak, maxStreak, gamesWon, gamesLost} from './store.js';\r\n    import WinModal from './WinModal.svelte';\r\n\timport HelpModal from './HelpModal.svelte';\r\n\timport StatsModal from './StatsModal.svelte';\r\n\timport LoseModal from './LoseModal.svelte';\r\n\timport Dictionary, { getTodaysWord, isValidWord } from './Dictionary.svelte';\r\n\r\n\tlet activeRowNumber = 0;\r\n\tlet activeColumnNumber = 0;\r\n\tlet currentWord = \"\";\r\n\tlet todaysWord = getTodaysWord().toUpperCase();\r\n\r\n\tconsole.log(\"Todays Word: \" + todaysWord);\r\n\r\n\tlet winModalOpen = false;\r\n\tfunction openWinModal() {\r\n        winModalOpen = true;\r\n    }\r\n    function closeWinModal() {\r\n        winModalOpen = false;\r\n\t\tresetGame(true);\r\n    }\r\n\r\n\tlet helpModalOpen = false;\r\n\tfunction openHelpModal() {\r\n        helpModalOpen = true;\r\n    }\r\n    function closeHelpModal() {\r\n        helpModalOpen = false;\r\n    }\r\n\r\n\tlet statsModalOpen = false;\r\n\tfunction openStatsModal() {\r\n        statsModalOpen = true;\r\n    }\r\n    function closeStatsModal() {\r\n        statsModalOpen = false;\r\n    }\r\n\r\n\tlet loseModalOpen = false;\r\n\tfunction openLoseModal() {\r\n        loseModalOpen = true;\r\n    }\r\n    function closeLoseModal() {\r\n        loseModalOpen = false;\r\n\t\tresetGame(false);\r\n    }\r\n\r\n\tlet gameboard = [\r\n\t\t[{ id: 0, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 1, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 2, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 3, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 4, style: \"normal\", currentLetter: \"\", animation: \"\" }],\r\n\t\t[{ id: 0, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 1, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 2, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 3, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 4, style: \"normal\", currentLetter: \"\", animation: \"\" }],\r\n\t\t[{ id: 0, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 1, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 2, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 3, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 4, style: \"normal\", currentLetter: \"\", animation: \"\" }],\r\n\t\t[{ id: 0, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 1, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 2, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 3, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 4, style: \"normal\", currentLetter: \"\", animation: \"\" }],\r\n\t\t[{ id: 0, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 1, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 2, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 3, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 4, style: \"normal\", currentLetter: \"\", animation: \"\" }],\r\n\t\t[{ id: 0, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 1, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 2, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 3, style: \"normal\", currentLetter: \"\", animation: \"\" },\r\n\t\t{ id: 4, style: \"normal\", currentLetter: \"\", animation: \"\" }]\r\n\t];\r\n\r\n\tlet keyboard = [\r\n\t\t[{ id: 0, style: \"normal\", letter: \"Q\" },\r\n\t\t{ id: 1, style: \"normal\", letter: \"W\" },\r\n\t\t{ id: 2, style: \"normal\", letter: \"E\" },\r\n\t\t{ id: 3, style: \"normal\", letter: \"R\" },\r\n\t\t{ id: 4, style: \"normal\", letter: \"T\" },\r\n\t\t{ id: 5, style: \"normal\", letter: \"Y\" },\r\n\t\t{ id: 6, style: \"normal\", letter: \"U\" },\r\n\t\t{ id: 7, style: \"normal\", letter: \"I\" },\r\n\t\t{ id: 8, style: \"normal\", letter: \"O\" },\r\n\t\t{ id: 9, style: \"normal\", letter: \"P\" }],\r\n\t\t[{ id: 10, style: \"normal\", letter: \"A\" },\r\n\t\t{ id: 11, style: \"normal\", letter: \"S\" },\r\n\t\t{ id: 12, style: \"normal\", letter: \"D\" },\r\n\t\t{ id: 13, style: \"normal\", letter: \"F\" },\r\n\t\t{ id: 14, style: \"normal\", letter: \"G\" },\r\n\t\t{ id: 15, style: \"normal\", letter: \"H\" },\r\n\t\t{ id: 16, style: \"normal\", letter: \"J\" },\r\n\t\t{ id: 17, style: \"normal\", letter: \"K\" },\r\n\t\t{ id: 18, style: \"normal\", letter: \"L\" }],\r\n\t\t[{ id: 20, style: \"normal\", letter: \"Z\" },\r\n\t\t{ id: 21, style: \"normal\", letter: \"X\" },\r\n\t\t{ id: 22, style: \"normal\", letter: \"C\" },\r\n\t\t{ id: 23, style: \"normal\", letter: \"V\" },\r\n\t\t{ id: 24, style: \"normal\", letter: \"B\" },\r\n\t\t{ id: 25, style: \"normal\", letter: \"N\" },\r\n\t\t{ id: 26, style: \"normal\", letter: \"M\" }]\r\n\t];\r\n\r\n\r\n\tfunction handleTextEnteredEvent(event) {\r\n\t\tif(event == \"ENTER\") {\r\n\t\t\thandleGuessSubmittedEvent(event);\r\n\t\t}\r\n\t\telse if(event == \"BACKSPACE\") {\r\n\t\t\thandleBackspaceEvent(event);\r\n\t\t}\r\n\t\telse if(activeColumnNumber >= 5) {\r\n\t\t\tshakeRow(activeRowNumber);\r\n\t\t} else {\t\t\t\r\n\t\t\tcurrentWord = currentWord + event;\r\n\t\t\tgameboard[activeRowNumber][activeColumnNumber].currentLetter = event;\r\n\t\t\tgameboard[activeRowNumber][activeColumnNumber].animation = \"grow\";\r\n\t\t\tactiveColumnNumber ++;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateButtonState(character, style) {\r\n\t\tfor(let i=0; i<keyboard.length; i++) {\r\n\t\t\tfor(let j=0; j<keyboard[i].length; j++) {\r\n\t\t\t\tif(keyboard[i][j].letter == character) {\r\n\t\t\t\t\tif(keyboard[i][j].style == \"correct\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else if(keyboard[i][j].style == \"present\" && style == \"correct\"){\r\n\t\t\t\t\t\tkeyboard[i][j].style=style;\r\n\t\t\t\t\t} else if(keyboard[i][j].style == \"absent\" && (style == \"present\" || style == \"correct\")){\r\n\t\t\t\t\t\tkeyboard[i][j].style=style;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tkeyboard[i][j].style=style;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction shakeRow(rowNum) {\r\n\t\tfor(let i=0; i<gameboard[rowNum].length; i++) {\r\n\t\t\tgameboard[rowNum][i].animation=\"shake\";\r\n\t\t}\r\n\t}\r\n\r\n\tfunction resetGame(didWin) {\r\n\t\tactiveRowNumber=0;\r\n\t\tcurrentWord = \"\";\r\n\t\tactiveColumnNumber=0;\r\n\r\n\t\tif(didWin) {\r\n\t\t\tvar gw = parseInt($gamesWon);\r\n\t\t\tgw = gw + 1;\r\n\t\t\tgamesWon.set(gw);\r\n\t\t\tvar cs = parseInt($currentStreak);\r\n\t\t\tcs = cs + 1;\r\n\t\t\tcurrentStreak.set(cs);\r\n\r\n\t\t\tvar ms = parseInt($maxStreak);\r\n\t\t\tif(cs>ms) {\r\n\t\t\t\tmaxStreak.set(cs);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar gl = parseInt($gamesLost);\r\n\t\t\tgl = gl + 1;\r\n\t\t\tgamesLost.set(gl);\r\n\t\t\tcurrentStreak.set(0);\r\n\t\t}\r\n\r\n\t\tconsole.log(\"got to hereasdfasdf\");\r\n\t\tvar gp = parseInt($gamesPlayed);\r\n\t\tgp = gp + 1;\r\n\t\tgamesPlayed.set(gp);\r\n\t\twinPercentage.set(Math.round((parseInt($gamesWon)/gp)*100));\r\n\r\n\t\tfor(let i=0; i<keyboard.length; i++) {\r\n\t\t\tfor(let j=0; j<keyboard[i].length; j++) {\r\n\t\t\t\tkeyboard[i][j].style = \"normal\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor(let i=0; i<gameboard.length; i++) {\r\n\t\t\tfor(let j=0; j<gameboard[i].length; j++) {\r\n\t\t\t\tgameboard[i][j].style = \"normal\";\r\n\t\t\t\tgameboard[i][j].currentLetter = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttodaysWord = getTodaysWord().toUpperCase();\r\n\t\tconsole.log(todaysWord);\r\n\t}\r\n\r\n\tfunction handleGuessSubmittedEvent(event) {\r\n\t\tif(activeColumnNumber != 5) {\r\n\t\t\tshakeRow(activeRowNumber)\r\n\t\t} else {\r\n\t\t\tif(isValidWord(currentWord)) {\r\n\t\t\t\tvar matchedIndexes = [];\r\n\t\t\t\tvar isWinner = true;\r\n\t\t\t\t//find all matching letters\r\n\t\t\t\tfor (let i = 0; i < currentWord.length; i++) {\r\n\t\t\t\t\tvar character = currentWord.charAt(i);\r\n\t\t\t\t\tif(todaysWord.charAt(i) == character) {\r\n\t\t\t\t\t\t//correct letter\r\n\t\t\t\t\t\tgameboard[activeRowNumber][i].style = \"correct\";\r\n\t\t\t\t\t\tmatchedIndexes.push(i);\r\n\t\t\t\t\t\tupdateButtonState(character, \"correct\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tisWinner = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//find all present letters\r\n\t\t\t\tvar unmatchedLetters = \"\";\r\n\t\t\t\tfor (let i = 0; i < currentWord.length; i++) {\r\n\t\t\t\t\tif(!matchedIndexes.includes(i)) {\r\n\t\t\t\t\t\tunmatchedLetters = unmatchedLetters + todaysWord.charAt(i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < currentWord.length; i++) {\r\n\t\t\t\t\tif(!matchedIndexes.includes(i)) {\r\n\t\t\t\t\t\tvar character = currentWord.charAt(i);\r\n\t\t\t\t\t\tif(unmatchedLetters.includes(character)) {\r\n\t\t\t\t\t\t\tgameboard[activeRowNumber][i].style = \"present\";\r\n\t\t\t\t\t\t\tupdateButtonState(character, \"present\");\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgameboard[activeRowNumber][i].style = \"absent\";\r\n\t\t\t\t\t\t\tupdateButtonState(character, \"absent\");\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//reset and check for game lost/won\r\n\t\t\t\tactiveRowNumber++;\r\n\t\t\t\tcurrentWord = \"\";\r\n\t\t\t\tactiveColumnNumber = 0;\r\n\r\n\t\t\t\tif(activeRowNumber > 5) {\r\n\t\t\t\t\topenLoseModal();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(isWinner) {\r\n\t\t\t\t\topenWinModal();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tshakeRow(activeRowNumber);\r\n\t\t\t\t//play message saying word not valid\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleBackspaceEvent(event) {\r\n\t\tif(activeColumnNumber <= 0) {\r\n\t\t\t//play can't backspace more error\r\n\t\t} else {\r\n\t\t\tactiveColumnNumber --;\r\n\t\t\tcurrentWord = currentWord.slice(0, -1);\r\n\t\t\tgameboard[activeRowNumber][activeColumnNumber].currentLetter = \"\";\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n\t<title>Wordle</title>\r\n\t<meta name=\"robots\" content=\"noindex nofollow\" />\r\n\t<html lang=\"en\" />\r\n</svelte:head>\r\n\r\n<div id=\"game\">\r\n\t<div id=\"header\">\r\n\t\t<div class=\"toolbar-button\" on:click={()=>openHelpModal()}>\r\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n\t\t\t\t<path fill=\"#878a8c\" d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"></path>\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t\t<div class=\"title\">Wordle</div>\r\n\t\t<div class=\"toolbar-button\" on:click={()=>openStatsModal()}>\r\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n\t\t\t\t<path fill=\"#878a8c\" d=\"M16,11V3H8v6H2v12h20V11H16z M10,5h4v14h-4V5z M4,11h4v8H4V11z M20,19h-4v-6h4V19z\"></path>\r\n\t\t\t  </svg>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"gameboardContainer\">\r\n\t\t<div id=\"gameboard\">\r\n\t\t\t{#each gameboard as gameRow}\r\n\t\t\t\t<div class=\"gameRow\">\r\n\t\t\t\t\t{#each gameRow as gameTile, id (gameTile.id)}\r\n\t\t\t\t\t\t<div class=\"gameTile\" data-state=\"{gameTile.style}\" animation-state=\"{gameTile.animation}\">{gameTile.currentLetter}</div>\r\n\t\t\t\t\t{/each}\t\r\n\t\t\t\t</div>\r\n\t\t\t{/each}\t\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"keyboard\">\r\n\t\t<div class=\"buttonRow\">\r\n\t\t\t{#each keyboard[0] as key}\r\n\t\t\t\t<button class=\"keyboardButton\" data-state=\"{key.style}\" on:click={()=>handleTextEnteredEvent(key.letter)}>{key.letter}</button>\r\n\t\t\t{/each}\r\n\t\t</div>\r\n\t\t<div class=\"buttonRow\">\r\n\t\t\t<div class=\"spacer half\"></div>\r\n\t\t\t{#each keyboard[1] as key}\r\n\t\t\t\t<button class=\"keyboardButton\" data-state=\"{key.style}\" on:click={()=>handleTextEnteredEvent(key.letter)}>{key.letter}</button>\r\n\t\t\t{/each}\r\n\t\t\t<div class=\"spacer half\"></div>\r\n\t\t</div>\r\n\t\t<div class=\"buttonRow\">\r\n\t\t\t<button class=\"keyboardButton one-and-a-half\" on:click={()=>handleTextEnteredEvent(\"ENTER\")}>enter</button>\r\n\t\t\t{#each keyboard[2] as key}\r\n\t\t\t\t<button class=\"keyboardButton\" data-state=\"{key.style}\" on:click={()=>handleTextEnteredEvent(key.letter)}>{key.letter}</button>\r\n\t\t\t{/each}\r\n\t\t\t<button class=\"keyboardButton one-and-a-half\" on:click={()=>handleTextEnteredEvent(\"BACKSPACE\")}><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n\t\t\t\t<path fill=\"var(--color-tone-1)\" d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"></path>\r\n\t\t\t  </svg></button>\r\n\t\t</div>\r\n\t</div>\r\n\t<WinModal isOpenModal={winModalOpen} on:closeModal={closeWinModal} />\r\n\t<LoseModal isOpenModal={loseModalOpen} on:closeModal={closeLoseModal} />\r\n\t<HelpModal isOpenModal={helpModalOpen} on:closeModal={closeHelpModal} />\r\n\t<StatsModal isOpenModal={statsModalOpen} on:closeModal={closeStatsModal} />\r\n</div>\r\n\r\n<style>\r\n\t.buttonRow {\r\n\t\tdisplay: flex;\r\n\t\twidth: 100%;\r\n\t\tmargin: 0 auto 8px;\r\n\t\ttouch-action: manipulation;\r\n\t}\r\n\t.keyboardButton {\r\n\t\tfont-family: inherit;\r\n\t\tfont-weight: bold;\r\n\t\tborder: 0;\r\n\t\tpadding: 0;\r\n\t\tmargin: 0 6px 0 0;\r\n\t\theight: 58px;\r\n\t\tborder-radius: 4px;\r\n\t\tcursor: pointer;\r\n\t\tuser-select: none;\r\n\t\tbackground-color: #d3d6da;\r\n\t\tcolor: #1a1a1b;\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\ttext-transform: uppercase;\r\n\t\t-webkit-tap-highlight-color: rgba(0,0,0,0.3);\r\n\t}\r\n\t.keyboardButton[data-state='absent'] {\r\n\t\tbackground-color:#787c7e;\r\n\t\tcolor:white;\r\n\t}\r\n\t.keyboardButton[data-state='correct'] {\r\n\t\tbackground-color:#6aaa64;\r\n\t\tcolor:white;\r\n\t}\r\n\t.keyboardButton[data-state='present'] {\r\n\t\tbackground-color:#c9b458;\r\n\t\tcolor:white;\r\n\t}\r\n\t.half {\r\n\t\tflex: 0.5;\r\n\t}\r\n\t.one-and-a-half {\r\n\t\tflex: 1.5;\r\n    \tfont-size: 12px;\r\n\t}\r\n\t#header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\theight: 50px;\r\n\t\tcolor: #1a1a1b;\r\n\t\tborder-bottom: 1px solid #d3d6da;\r\n\r\n\t}\r\n\t.toolbar-button {\r\n\t\tbackground: none;\r\n\t\tuser-select: none;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tpadding: 0 4px;\r\n\t}\r\n\t#game {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t\tmargin: 0 auto;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tfont-family: 'Clear Sans', 'Helvetica Neue', Arial, sans-serif;\r\n\t\tfont-size: 16px;\r\n\t}\r\n\t#keyboard {\r\n\t\theight: 200px;\r\n\t\tfont-size: 13.3333px;\r\n\t}\r\n\t#gameboardContainer {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tflex-grow: 1;\r\n\t\toverflow: hidden;\r\n\t}\r\n\t#gameboard {\r\n\t\twidth: 350px;\r\n\t\theight: 420px;\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-rows: repeat(6, 1fr);\r\n\t\tgrid-gap: 5px;\r\n\t\tpadding: 10px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t.gameRow {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(5, 1fr);\r\n\t\tgrid-gap: 5px;\r\n\t}\r\n\t.gameTile {\r\n\t\twidth: 100%;\r\n\t\tdisplay: inline-flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tfont-size: 2rem;\r\n\t\tline-height: 2rem;\r\n\t\tfont-weight: bold;\r\n\t\tvertical-align: middle;\r\n\t\tbox-sizing: border-box;\r\n\t\ttext-transform: uppercase;\r\n\t\tuser-select: none;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder: 2px solid #d3d6da;\r\n\t\tcolor: #1a1a1b;\r\n\t}\r\n\t.gameTile[data-state='absent'] {\r\n\t\tbackground-color:#787c7e;\r\n\t\tborder: 2px solid #787c7e;\r\n\t\tcolor: white;\r\n\t}\r\n\t.gameTile[data-state='correct'] {\r\n\t\tbackground-color:#6aaa64;\r\n\t\tborder: 2px solid #6aaa64;\r\n\t\tcolor: white;\r\n\t}\r\n\t.gameTile[data-state='present'] {\r\n\t\tbackground-color:#c9b458;\r\n\t\tborder: 2px solid #c9b458;\r\n\t\tcolor: white;\r\n\t}\r\n\t.gameTile[animation-state='shake'] {\r\n\t\tanimation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;\r\n\t\ttransform: translate3d(0, 0, 0);\r\n\t\tbackface-visibility: hidden;\r\n\t\tperspective: 1000px;\r\n\t}\r\n\t@keyframes shake {\r\n\t\t10%, 90% {\r\n\t\t\ttransform: translate3d(-1px, 0, 0);\r\n\t\t}\r\n\t\t\r\n\t\t20%, 80% {\r\n\t\t\ttransform: translate3d(2px, 0, 0);\r\n\t\t}\r\n\r\n\t\t30%, 50%, 70% {\r\n\t\t\ttransform: translate3d(-4px, 0, 0);\r\n\t\t}\r\n\r\n\t\t40%, 60% {\r\n\t\t\ttransform: translate3d(4px, 0, 0);\r\n\t\t}\r\n\t}\r\n\t.gameTile[animation-state='grow'] {\r\n\t\tanimation: grow 0.1s;\r\n\t}\r\n\t@keyframes grow {\r\n\t\t0%, 100% {\r\n\t\t\tmargin: 0px;\r\n\t\t}\r\n\t\t\r\n\t\t50% {\r\n\t\t\tmargin: -5px;\r\n\t\t}\r\n\t}\r\n\r\n\t.title {\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 36px;\r\n\t\tletter-spacing: 0.2rem;\r\n\t\ttext-transform: uppercase;\r\n\t\ttext-align: center;\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tpointer-events: none;\r\n\t}\r\n</style>\r\n\r\n\r\n\r\n","import App from './App.svelte';\r\n\r\nvar app = new App({\r\n\ttarget: document.body\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","removeProperty","setProperty","current_component","set_current_component","createEventDispatcher","Error","get_current_component","type","detail","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","destroy_block","lookup","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","gamesPlayed","localStorage","getItem","winPercentage","gamesWon","gamesLost","currentStreak","maxStreak","dispatch","isOpenModal","animtationState","commonWords","obscureWords","getTodaysWord","Math","floor","random","currentLetter","animation","id","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","letter","activeRowNumber","activeColumnNumber","currentWord","todaysWord","toUpperCase","console","log","winModalOpen","helpModalOpen","openHelpModal","statsModalOpen","openStatsModal","loseModalOpen","gameboard","keyboard","handleTextEnteredEvent","shakeRow","w","String","toLowerCase","includes","matchedIndexes","isWinner","character","charAt","updateButtonState","unmatchedLetters","handleGuessSubmittedEvent","j","rowNum","resetGame","didWin","gw","parseInt","$gamesWon","cs","$currentStreak","$maxStreak","gl","$gamesLost","gp","$gamesPlayed","round","body"],"mappings":"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Q,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QACxtJ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QACxtxtxtxtxtxtxtxtxtJ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAA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"}